<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YBC HomePage</title>
  <subtitle>Study~ Work~ Life~ Everything is here~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yular.github.io/"/>
  <updated>2016-03-20T23:00:39.000Z</updated>
  <id>http://yular.github.io/</id>
  
  <author>
    <name>BaiChuan Yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo Blog 简明教程 III</title>
    <link href="http://yular.github.io/2016/03/20/Hexo-Blog-%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B-III/"/>
    <id>http://yular.github.io/2016/03/20/Hexo-Blog-简明教程-III/</id>
    <published>2016-03-20T23:00:39.000Z</published>
    <updated>2016-03-20T23:00:39.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo Blog 简明教程 II</title>
    <link href="http://yular.github.io/2016/03/20/Hexo-Blog-%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B-II/"/>
    <id>http://yular.github.io/2016/03/20/Hexo-Blog-简明教程-II/</id>
    <published>2016-03-20T23:00:33.000Z</published>
    <updated>2016-03-20T23:00:33.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo Blog 简明教程 I</title>
    <link href="http://yular.github.io/2016/03/20/Hexo-Blog-%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B-I/"/>
    <id>http://yular.github.io/2016/03/20/Hexo-Blog-简明教程-I/</id>
    <published>2016-03-20T23:00:30.000Z</published>
    <updated>2016-03-21T07:46:02.000Z</updated>
    
    <content type="html">&lt;p&gt;Hexo 是一个由台湾学生开发的，基于node.js的静态博客。这个博客拥有很好的模块设计，用户可以很方便地在博客上添加自己需要的或者是喜欢的元素，比如评论排行，日期等等；同时也可以很方便地做一些个性化的设置，比如更换博客主题等等。总之，Hexo有很多优点，是一个非常适合技术人员的博客。因此，接下来的几个教程都是有关于如何使用Hexo搭建自己的个性化博客。&lt;/p&gt;
&lt;p&gt;这些教程有中文和英文版本。这里先提供中文版。下面这个链接是我的博客的github代码库，供大家参考：&lt;br&gt;&lt;a href=&quot;https://github.com/yular/yular.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github Yular&lt;/a&gt;&lt;br&gt;注：这份教程可能更适合mac和linux/unix用户，windows用户可能在最初的环境配置上需要另外找别的教程。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;安装npm和hexo&quot;&gt;&lt;a href=&quot;#安装npm和hexo&quot; class=&quot;headerlink&quot; title=&quot;安装npm和hexo&quot;&gt;&lt;/a&gt;安装npm和hexo&lt;/h3&gt;&lt;p&gt;第一步是在电脑上安装npm和hexo。先安装好npm才能安装hexo。npm是和node.js相关联的javascript管理工具，所以安装好node.js后，npm就能够使用了。&lt;br&gt;这里是nodejs的官网，上面介绍了下载和安装方法：&lt;br&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nodejs official site&lt;/a&gt;.&lt;br&gt;或者是我的这个教程：&lt;br&gt;&lt;a href=&quot;http://yular.github.io/2015/10/19/Node-and-Angular-JS-Project-Creation-Tutorial/&quot;&gt;nodejs install&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;确认npm命令可以使用以后，运行下面这个命令安装hexo命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g hexo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注：-g 不能省略掉。&lt;br&gt;用这个命令来确认hexo是否安装成功：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果输出是类似这样的，就表示安装成功了：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo: 3.2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo-cli: 1.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os: Darwin 15.2.0 darwin x64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http_parser: 2.5.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node: 4.2.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v8: 4.5.103.35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uv: 1.7.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zlib: 1.2.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ares: 1.10.1-DEV&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;icu: 56.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;modules: 46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl: 1.0.2d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;博客初始化&quot;&gt;&lt;a href=&quot;#博客初始化&quot; class=&quot;headerlink&quot; title=&quot;博客初始化&quot;&gt;&lt;/a&gt;博客初始化&lt;/h3&gt;&lt;p&gt;在自己想要的地方，新建一个文件夹作为整个博客的项目文件夹，然后运行这个命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时，一个完整的Hexo博客项目就会生成在当前文件夹下。&lt;/p&gt;
&lt;p&gt;Hexo上新建博客，测试博客和部署博客到远端服务器（比如Github 服务器）等，一般都需要使用这些命令（只是常用命令）：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo clean &lt;span class=&quot;comment&quot;&gt;#清理项目缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo new &lt;span class=&quot;comment&quot;&gt;#生成新的博客页面，一般后面要写上博客标题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo generate &lt;span class=&quot;comment&quot;&gt;# 或者 hexo g，生成博客网站及其页面，并保存在public文件夹下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo server &lt;span class=&quot;comment&quot;&gt;# 或者 hexo s，启动Hexo 网站服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo deploy &lt;span class=&quot;comment&quot;&gt;# 或者 hexo d，将Hexo 部署到远程服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;好了，接下来运行这两个命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;默认情况下，访问这个地址，就可以看到部署在本地上的Hexo博客了：&lt;br&gt;&lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;部署Hexo-到Github-server&quot;&gt;&lt;a href=&quot;#部署Hexo-到Github-server&quot; class=&quot;headerlink&quot; title=&quot;部署Hexo 到Github server&quot;&gt;&lt;/a&gt;部署Hexo 到Github server&lt;/h3&gt;&lt;p&gt;Github给每一个用户都提供了一个免费的，以.github.io结尾的域名，而Hexo博客不需要数据库，它的所有博客都是以文本的方式保存在本地，而相关统计数据，比如访问量等，可以由第三方API提供。因此我们可以将Hexo博客部署到Github上。这样做还有一个好处是方便代码的管理。&lt;/p&gt;
&lt;p&gt;首先是安装GitHub，这里有很好的官方文档：&lt;br&gt;&lt;a href=&quot;https://help.github.com/articles/set-up-git/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Setup Git&lt;/a&gt;&lt;br&gt;必须完成前两步，记得将SSH Key放到自己的Github账户上，不然没法完成部署。&lt;/p&gt;
&lt;p&gt;新建一个repository，名字必须为 username.github.io。此处的username为我们Github账户的用户名。如果是帮助他人搭建和部署博客，记得让对方将自己加为coordinate developer。&lt;/p&gt;
&lt;p&gt;接下来是安装Hexo插件，基本上是以下这些：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-deployer-git --save &lt;span class=&quot;comment&quot;&gt;# 安装 Hexo 部署到GitHub的插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-generator-feed --save &lt;span class=&quot;comment&quot;&gt;#安装 Hexo RSS feed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-generator-sitemap --save &lt;span class=&quot;comment&quot;&gt;#安装 Hexo SiteMap 网站地图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后是修改Hexo项目文件夹下的_config.yml文件，在URL 和  Deployment 一项，改成如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# URL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url: http://yular.github.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink: :year/:month/:day/:title/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink_defaults:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Deployment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repo: git@github.com:yular /yular.github.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  message: deploy hexo blog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;将其中的内容对应的替换成自己的即可。最后运行这些命令将博客部署到Github上：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果没有报错，大概等上一小段时间就可以在浏览器上访问到博客了，比如我的这个：&lt;br&gt;&lt;a href=&quot;http://yular.github.io。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://yular.github.io。&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo 是一个由台湾学生开发的，基于node.js的静态博客。这个博客拥有很好的模块设计，用户可以很方便地在博客上添加自己需要的或者是喜欢的元素，比如评论排行，日期等等；同时也可以很方便地做一些个性化的设置，比如更换博客主题等等。总之，Hexo有很多优点，是一个非常适合技术人员的博客。因此，接下来的几个教程都是有关于如何使用Hexo搭建自己的个性化博客。&lt;/p&gt;
&lt;p&gt;这些教程有中文和英文版本。这里先提供中文版。下面这个链接是我的博客的github代码库，供大家参考：&lt;br&gt;&lt;a href=&quot;https://github.com/yular/yular.github.io&quot;&gt;Github Yular&lt;/a&gt;&lt;br&gt;注：这份教程可能更适合mac和linux/unix用户，windows用户可能在最初的环境配置上需要另外找别的教程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="http://yular.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Maven Junit Test QuickStart</title>
    <link href="http://yular.github.io/2016/03/17/Maven-Junit-Test-QuickStart/"/>
    <id>http://yular.github.io/2016/03/17/Maven-Junit-Test-QuickStart/</id>
    <published>2016-03-18T05:45:45.000Z</published>
    <updated>2016-03-19T05:20:42.000Z</updated>
    
    <content type="html">&lt;p&gt;Unit test is very important in software engineering development. It can help developers to figure out which functions have bugs by test them independently. Currently there are many frameworks for this kind of test. Here we introduce one of the most popular frameworks called JUnit Test. For more information about JUnit, check this &lt;a href=&quot;http://junit.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Below is a quickstart tutorial for Java junit test using Maven. All the steps are done by command lines. &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Create-Maven-Project&quot;&gt;&lt;a href=&quot;#Create-Maven-Project&quot; class=&quot;headerlink&quot; title=&quot;Create Maven Project&quot;&gt;&lt;/a&gt;Create Maven Project&lt;/h3&gt;&lt;p&gt;Execute the command below or check this &lt;a href=&quot;http://yular.github.io/2015/08/16/Maven-Project-QuickStart/&quot;&gt;tutorial&lt;/a&gt; to learn how to create a Maven project:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mvn archetype:generate -DgroupId=com.yulartech.app -DartifactId=JunitTemplate -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that we can change the value of -DgroupId, -DartifactId and -DarchetypeArtifactId parameters as we want.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Edit-pom-xml-file&quot;&gt;&lt;a href=&quot;#Edit-pom-xml-file&quot; class=&quot;headerlink&quot; title=&quot;Edit pom.xml file&quot;&gt;&lt;/a&gt;Edit pom.xml file&lt;/h3&gt;&lt;p&gt;Put the following content into pom.xml:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;project xmlns=&lt;span class=&quot;string&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; xmlns:xsi=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  xsi:schemaLocation=&lt;span class=&quot;string&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;groupId&amp;gt;com.yulartech.app&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;artifactId&amp;gt;JunitTemplate&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;name&amp;gt;JunitTemplate&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;dependencies&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;version&amp;gt;4.12&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;scope&amp;gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/dependencies&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;build&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;plugins&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;plugin&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;configuration&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;lt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&amp;gt;1.6&amp;lt;/&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;lt;target&amp;gt;1.6&amp;lt;/target&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;lt;encoding&amp;gt;UTF8&amp;lt;/encoding&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/configuration&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/plugin&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/plugins&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/build&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The reason why here I use maven-compile-plugin is that by default maven does not support annotation like “@test” in the source code; so we use additional plugin to change the default configuration of maven compiler to support that feature.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Edit-App-java-and-Create-Test-class&quot;&gt;&lt;a href=&quot;#Edit-App-java-and-Create-Test-class&quot; class=&quot;headerlink&quot; title=&quot;Edit App.java and Create Test class&quot;&gt;&lt;/a&gt;Edit App.java and Create Test class&lt;/h3&gt;&lt;p&gt;An java file called App.java is generated by default and we can find it under this path, assuming that we are already in the project folder:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi src/main/java/com/yulartech/app/App.java&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then put the following code into App.java:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.app;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class App &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void main( String[] args )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println( &lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int add(int a, int b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; a+b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int minus(int a, int b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; a-b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;After that, we will create two test class under this path:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls src/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;/java/com/yulartech/app/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;By default there has been a test class but here we do not need it. We will create the following two classes for test instead:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi src/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;/java/com/yulartech/app/AppAddTest.java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi src/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;/java/com/yulartech/app/AppMinusTest.java&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;At last, edit AppAddTest.java file as follows:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.app;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import junit.framework.Assert;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class AppAddTest&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    App app = new App();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;testAdd&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Assert.assertEquals(app.add(1,2), 3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(app.add(5,6), 10);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;and edit AppMinusTest.java file as well:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.app;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import junit.framework.Assert;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class AppMinusTest&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    App app = new App();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;testMinus&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(app.minus(9,7), 2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Obviously, there is an error in AppAddTest class because 5+6 == 11 not 10. Let us see what will happen if errors are found in the test. &lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Execute-Junit-Test&quot;&gt;&lt;a href=&quot;#Execute-Junit-Test&quot; class=&quot;headerlink&quot; title=&quot;Execute Junit Test&quot;&gt;&lt;/a&gt;Execute Junit Test&lt;/h3&gt;&lt;p&gt;There are mainly two ways to do junit test.&lt;br&gt;The first way is to run all the junit tests together. But if there are errors found during test, the process will not stop until all the tests are done. So here is the command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mvn &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;And the result should be or at least similar as follows:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; T E S T S&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running com.yulartech.app.AppAddTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.078 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running com.yulartech.app.AppTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running com.yulartech.app.AppMinusTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Results :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Failed tests:   &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;Add(com.yulartech.app.AppAddTest): expected:&amp;lt;11&amp;gt; but was:&amp;lt;10&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tests run: 3, Failures: 1, Errors: 0, Skipped: 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that the default test class AppTest will also be executed.&lt;/p&gt;
&lt;p&gt;The second way is to run each test independently. Here it is:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mvn -D&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;=AppAddTest &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The result should be like this:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; T E S T S&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running com.yulartech.app.AppAddTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.091 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Results :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Failed tests:   &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;Add(com.yulartech.app.AppAddTest): expected:&amp;lt;11&amp;gt; but was:&amp;lt;10&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tests run: 1, Failures: 1, Errors: 0, Skipped: 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This time only AppAddTest is executed and of course it fails.&lt;br&gt;What about this one:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mvn -D&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;=AppMinusTest &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The result is here:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; T E S T S&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running com.yulartech.app.AppMinusTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.077 sec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Results :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tests run: 1, Failures: 0, Errors: 0, Skipped: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] ------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] BUILD SUCCESS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] ------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Total time: 1.903s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Finished at: Thu Mar 17 22:37:28 PDT 2016&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Final Memory: 6M/115M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] ------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This time only AppMinusTest is executed and it pass the test.&lt;/p&gt;
&lt;h3 id=&quot;Code-Download&quot;&gt;&lt;a href=&quot;#Code-Download&quot; class=&quot;headerlink&quot; title=&quot;Code Download&quot;&gt;&lt;/a&gt;Code Download&lt;/h3&gt;&lt;p&gt;Everyone can check this simple project in my &lt;a href=&quot;https://github.com/yular/Java-CodeLibrary/tree/master/JunitTemplate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github from this link&lt;/a&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Unit test is very important in software engineering development. It can help developers to figure out which functions have bugs by test them independently. Currently there are many frameworks for this kind of test. Here we introduce one of the most popular frameworks called JUnit Test. For more information about JUnit, check this &lt;a href=&quot;http://junit.org/&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Below is a quickstart tutorial for Java junit test using Maven. All the steps are done by command lines. &lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>bower command summary</title>
    <link href="http://yular.github.io/2016/03/15/bower-command-summary/"/>
    <id>http://yular.github.io/2016/03/15/bower-command-summary/</id>
    <published>2016-03-16T04:41:27.000Z</published>
    <updated>2016-03-18T05:44:55.000Z</updated>
    
    <content type="html">&lt;p&gt;Bower is a very useful and easy to use Web libraries management tool, which can manage components containing HTML, CSS, JavaScript, fonts or even image files. Bower uses a kind of manifest file called bower.json to keeps track of packages used in project. Below is the link of official website:&lt;br&gt;&lt;a href=&quot;http://bower.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bower.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is the method to install bower&lt;br&gt;Bower requires node, npm and git. After we have installed all these staffs, we can install bower through this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g bower&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note: please do not ignore -g parameter.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;Here is the summary of frequent used bower commands:&lt;/p&gt;
&lt;h3 id=&quot;bower-init&quot;&gt;&lt;a href=&quot;#bower-init&quot; class=&quot;headerlink&quot; title=&quot;bower init&quot;&gt;&lt;/a&gt;bower init&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bower init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Interactively create a bower.json file&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;bower-install&quot;&gt;&lt;a href=&quot;#bower-install&quot; class=&quot;headerlink&quot; title=&quot;bower install&quot;&gt;&lt;/a&gt;bower install&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;bower-uninstall&quot;&gt;&lt;a href=&quot;#bower-uninstall&quot; class=&quot;headerlink&quot; title=&quot;bower uninstall&quot;&gt;&lt;/a&gt;bower uninstall&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;bower-update&quot;&gt;&lt;a href=&quot;#bower-update&quot; class=&quot;headerlink&quot; title=&quot;bower update&quot;&gt;&lt;/a&gt;bower update&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;bower-help&quot;&gt;&lt;a href=&quot;#bower-help&quot; class=&quot;headerlink&quot; title=&quot;bower help&quot;&gt;&lt;/a&gt;bower help&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;bower-info&quot;&gt;&lt;a href=&quot;#bower-info&quot; class=&quot;headerlink&quot; title=&quot;bower info&quot;&gt;&lt;/a&gt;bower info&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;bower-list&quot;&gt;&lt;a href=&quot;#bower-list&quot; class=&quot;headerlink&quot; title=&quot;bower list&quot;&gt;&lt;/a&gt;bower list&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;bower-search&quot;&gt;&lt;a href=&quot;#bower-search&quot; class=&quot;headerlink&quot; title=&quot;bower search&quot;&gt;&lt;/a&gt;bower search&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;bower-prune&quot;&gt;&lt;a href=&quot;#bower-prune&quot; class=&quot;headerlink&quot; title=&quot;bower prune&quot;&gt;&lt;/a&gt;bower prune&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;bower-version&quot;&gt;&lt;a href=&quot;#bower-version&quot; class=&quot;headerlink&quot; title=&quot;bower version&quot;&gt;&lt;/a&gt;bower version&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bower -version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Get the version of bower.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Bower is a very useful and easy to use Web libraries management tool, which can manage components containing HTML, CSS, JavaScript, fonts
    
    </summary>
    
    
      <category term="Web" scheme="http://yular.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Web Finance APIs for Developers</title>
    <link href="http://yular.github.io/2016/03/12/Web-Finance-APIs-for-Developers/"/>
    <id>http://yular.github.io/2016/03/12/Web-Finance-APIs-for-Developers/</id>
    <published>2016-03-13T06:08:02.000Z</published>
    <updated>2016-03-13T06:10:32.000Z</updated>
    
    <content type="html">&lt;p&gt;This article will be updated later. Currently I only paste these links about where to find free/limited/paid web finance APIs (most of them are RESTFUL) for developers.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/3139879/how-do-i-get-currency-exchange-rates-via-an-api-such-as-google-finance&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow answer1&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://stackoverflow.com/questions/10040954/alternative-to-google-finance-api&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow answer2&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.programmableweb.com/news/25-finance-apis/2008/04/24&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;programmable web&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This article will be updated later. Currently I only paste these links about where to find free/limited/paid web finance APIs (most of th
    
    </summary>
    
    
      <category term="Web" scheme="http://yular.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Web Dev Experience: Using Angular Material and Bootstrap Together</title>
    <link href="http://yular.github.io/2016/03/12/Web-Dev-Experience-Using-Angular-Material-and-Bootstrap-Together/"/>
    <id>http://yular.github.io/2016/03/12/Web-Dev-Experience-Using-Angular-Material-and-Bootstrap-Together/</id>
    <published>2016-03-12T08:23:42.000Z</published>
    <updated>2016-03-12T08:45:32.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the &lt;a href=&quot;http://stackoverflow.com/questions/29313990/angularjs-bootstrap-for-angular-material-design-for-angular-together&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;link&lt;/a&gt; about this question.&lt;/p&gt;
&lt;p&gt;When we do web front-end development, we may find that some elements can be implemented more easily in Angular Material but others can be implemented in Angular Bootstrap more easily. However, it is a bad idea to use them together in the same Web application front-end.&lt;/p&gt;
&lt;p&gt;The main reasons are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Both their css target front end elements but they have different designs. For example, even though dialog of both libraries are rectangle, the dialog of bootstrap is round rectangle. So if use them together, the look and feel of elements may be inconsistent.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2.Angular material handles front end elements using directive. When they release a new version (29 releases so far), developers have to spent some time testing earlier code. &lt;/p&gt;
&lt;p&gt;3.Increase the dependencies size of project.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the &lt;a href=&quot;http://stackoverflow.com/questions/29313990/angularjs-bootstrap-for-angular-material-design-for-angular-together&quot; ta
    
    </summary>
    
    
      <category term="Web" scheme="http://yular.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap CSS Grid System Summary</title>
    <link href="http://yular.github.io/2016/02/28/Bootstrap-CSS-Grid-System-Summary/"/>
    <id>http://yular.github.io/2016/02/28/Bootstrap-CSS-Grid-System-Summary/</id>
    <published>2016-02-29T03:34:34.000Z</published>
    <updated>2016-03-08T07:06:44.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the definition of Bootstrap grid system from its official document:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Bootstrap includes a responsive, mobile first fluid grid system that appropriately scales up to 12 columns as the device or viewport size increases. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;It includes predefined classes for easy layout options, as well as powerful mixins for generating more semantic layouts.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Bootstrap grid system has a three levels structure for creating page layout and these levels are (from highest to lowest): container, row and column. We can put the content like form, button, panel and table into the columns so that all the page elements are put into the places as we want. Besides, column level can be nested through adding rows and then columns into it but we do not put container into rows or columns.&lt;/p&gt;
&lt;p&gt;Here is the instruction about how to use Bootstrap grid system:&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Put one and only one (recommended) container on the page. Here is the example code:&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2.Put one or more rows into the container above. Nested rows are not recommended. Here is the example code:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;row&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;row&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.Put one or more columns into the row(s) above. Nested grid system is fine but should start from row level. Besides, we can use predefined grid classes to specifiy the number of twelve available columns we wish to span: for example, we can predefine three equal columns through three .col-xs-4. Here is the example code:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;row&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-md-3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-md-5&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;row&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-xs-4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that we can use padding attribute to create gutters (gaps between column content). It is offset in rows for the first and the last column via negative margin on .rows.&lt;/p&gt;
&lt;p&gt;4.Put content elements inside columns. Here is the example code:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;row&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-md-3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;a&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-md-5&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;b&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;row&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-xs-4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Below is the official Bootstrap grid examples&lt;br&gt;&lt;a href=&quot;https://getbootstrap.com/examples/grid/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bootstrap Grid Example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And for more details about grid system, check the link of the officail document below:&lt;br&gt;&lt;a href=&quot;http://getbootstrap.com/css/#grid&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bootstrap Grid System&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the definition of Bootstrap grid system from its official document:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Bootstrap includes a responsive, mobile first fluid grid system that appropriately scales up to 12 columns as the device or viewport size increases. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;It includes predefined classes for easy layout options, as well as powerful mixins for generating more semantic layouts.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Bootstrap grid system has a three levels structure for creating page layout and these levels are (from highest to lowest): container, row and column. We can put the content like form, button, panel and table into the columns so that all the page elements are put into the places as we want. Besides, column level can be nested through adding rows and then columns into it but we do not put container into rows or columns.&lt;/p&gt;
&lt;p&gt;Here is the instruction about how to use Bootstrap grid system:&lt;br&gt;
    
    </summary>
    
    
      <category term="Web" scheme="http://yular.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>CDN online libraries for Web Developers</title>
    <link href="http://yular.github.io/2016/02/28/CDN-online-libraries-for-Web-Developers/"/>
    <id>http://yular.github.io/2016/02/28/CDN-online-libraries-for-Web-Developers/</id>
    <published>2016-02-28T20:13:17.000Z</published>
    <updated>2016-03-05T20:46:12.000Z</updated>
    
    <content type="html">&lt;p&gt;Sometimes when we read web page HTML code, we may see the following stuffs:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/angular.js/2.0.0-beta.7/angular2.min.js&quot;&lt;/span&gt; &amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If we paste the link of the src attribute to the browser, we will see the source code of that angular js file. That means we can access the library from Internet resource without download it to our project folder: thus we can save more disk space!&lt;/p&gt;
&lt;p&gt;Here are links of the three of the main CDN services that web developers use for the project.&lt;br&gt;1.cdnjs.com&lt;br&gt;&lt;a href=&quot;https://cdnjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Click Here&lt;/a&gt;.&lt;br&gt;&lt;img src=&quot;https://c2.staticflickr.com/2/1662/25058960300_17505675c9_b.jpg&quot; alt=&quot;cdnjs homepage&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.JSDELIVR&lt;br&gt;&lt;a href=&quot;https://www.jsdelivr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Click Here&lt;/a&gt;.&lt;br&gt;&lt;img src=&quot;https://c2.staticflickr.com/2/1528/24986975619_952eb0e490_b.jpg&quot; alt=&quot;JSDELIVR homepage&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.Google APIs&lt;br&gt;&lt;a href=&quot;https://developers.google.com/speed/libraries/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Click Here&lt;/a&gt;.&lt;br&gt;&lt;img src=&quot;https://c2.staticflickr.com/2/1572/25236359982_7f8b220ccc_b.jpg&quot; alt=&quot;Google APIs&quot;&gt;&lt;/p&gt;
&lt;p&gt;4.Bootstrap CDN&lt;br&gt;&lt;a href=&quot;https://www.bootstrapcdn.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Click Here&lt;/a&gt;.&lt;br&gt;&lt;img src=&quot;https://c2.staticflickr.com/2/1604/25139383580_d31866c6c7_b.jpg&quot; alt=&quot;Bootstrap CDN&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Sometimes when we read web page HTML code, we may see the following stuffs:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
    
    </summary>
    
    
      <category term="Web" scheme="http://yular.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Thinking in Dynamic Programming Algorithm</title>
    <link href="http://yular.github.io/2016/02/21/Thinking-in-Dynamic-Programming-Algorithm/"/>
    <id>http://yular.github.io/2016/02/21/Thinking-in-Dynamic-Programming-Algorithm/</id>
    <published>2016-02-22T06:08:08.000Z</published>
    <updated>2016-03-05T20:46:12.000Z</updated>
    
    <content type="html">&lt;p&gt;This summary is more for algorithm contest but it should be also useful for solving industry problems because sometimes we can simply a real world problem to a ideal mathematical problem with some appropriate constraints.&lt;/p&gt;
&lt;p&gt;Dynamic programming algorithm is widely used in computer science and it helps people to solve various problems efficiently. The basic idea behind dynamic programming algorithm is to save the result of previous steps into a table(s) so that if the result of current step depends on previous ones, then the algorithm can retrieve these historic results immediately and apply them to the computation in current step. This is very important because with the help of this table, algorithm does not need to recompute the results of previous steps which may increase the time complexity greatly. That is the reason why dynamic programming algorithm is usually more efficient than navie brute force search algorithm but will provide correct result or optimization solution than heuristic search. However, of course dynamic programming algorithm usually consume more memory than less efficient algorithms. Usually, we call the computation result of previous steps “solution of subproblems” because the result of current step (global problem) is based on them and with iteration continues, all the current steps will become subproblems of future steps. Note that a problem that has subproblems structure means that it can be recursively divided into problems in smaller scale and those subproblems in the same level are independent with each other, and solution of the problem with higher level depends on its subproblems instead of those have higher level.&lt;/p&gt;
&lt;p&gt;To design an efficient dynamic programming algorithm, the key thing is to figure out the dynamic programming formula. With the given formula, the algorithm will iteratively compute the result of current step based on the result of previous steps saved in tables. So in the formula, we should provide base case initially to start the iterative computation. Here is an example. In Fibonacci sequence, the first and second elements are both one, and for every ith element where i &amp;gt; 2, A[i] = A[i - 1] + A[i - 2]. Obviously, we can use dynamic programming algorithm to compute the value of ith element of this sequence. Thus, we can design the dynamic programming formula as follows:&lt;br&gt;                dp[i] = 1 if i &amp;lt;= 2;&lt;br&gt;                dp[i] = dp[i - 1] + dp[i - 2] if i &amp;gt; 2&lt;br&gt;We save the value of every ith element into an array used as a table mentioned above and we can get the ith element with only O(n) time complexity. Note that different dynamic programming formula will lead to different time complexity or different space complexity. Even with the same dynamic programming algorithm formula, different data structure or different algorithms to retrieve historic results will make the original dynamic programming algorithm more/less efficient.&lt;/p&gt;
&lt;p&gt;Dynamic programming algorithm is not the silver bullet but it is one of the best choices for some specific variety of problems. In my eye, these kinds of problems include optimization problem such as find the maximum value or minmum cost of given situation, and the counting problem like counting the number of times of specific case showing up in the problem. In most of time, the given problem can be solved in navie brute force search algorithm with O(n!) or O(2^n) or O(n^C) where C is a large constant time complexity. But if we use dynamic programming algorithm, sometimes we may not solve the problem in linear time complexity but the solution is feasible in practice. The classic case is the famous &lt;a href=&quot;https://en.wikipedia.org/wiki/Knapsack_problem&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Knapsack problem&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;As described above, to design a good dynamic programming algorithm, we should carry out a computation efficiency dynamic programming formula. But that is not the end. After that, we should also consider following things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What kind of data structure should be used as table to save historic data?&lt;/li&gt;
&lt;li&gt;What kind of query algorithm should be used to retrieve historic data if we can only used basic array as table?&lt;/li&gt;
&lt;li&gt;Could we use some theorems or mathematic approaches to optimize the algorithm?&lt;br&gt;Actually, there will be more issues but the above are the main ones. The followings are answers to above problems.&lt;/li&gt;
&lt;li&gt;The data structures include hash table (ordered_map or ordered_set or equivalent), binary index tree, segment tree, or even multi-dimensonal arrays and etc.&lt;/li&gt;
&lt;li&gt;The query algorithms include binary search, hash search and etc.&lt;/li&gt;
&lt;li&gt;Of course we can. Sometimes if we want to optimize an O(n!) time complexity algorithm to an O(n^2) algorithm, we may have to use some known theorems so that we can do an intelligent derivation for our formula. Sometimes we may find that there are some patterns inside the subproblems structure which is also helpful to decrease time complexity. But usually these patterns mean a new formula and thus, we may have to redesign it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Above all, here is the workflow for dynamic programming algorithm:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Given a problem, consider is it a good fit for dynamic programming algorithm? Think of the subproblem structure.&lt;/li&gt;
&lt;li&gt;If dynamic programming algorithm is a good choice, design the formula of it.&lt;/li&gt;
&lt;li&gt;See whether we can optimize the algorithm with different data structure or table retrieve algorithm or known theorems or special subproblem patterns? If not and time complexity is not acceptable, go back to step two.&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This summary is more for algorithm contest but it should be also useful for solving industry problems because sometimes we can simply a r
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://yular.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Timus Problems for String Solution List</title>
    <link href="http://yular.github.io/2016/02/09/Timus-Problems-for-String-Solution-List/"/>
    <id>http://yular.github.io/2016/02/09/Timus-Problems-for-String-Solution-List/</id>
    <published>2016-02-09T09:06:56.000Z</published>
    <updated>2016-03-05T20:46:12.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Strange-Dialog&quot;&gt;&lt;a href=&quot;#Strange-Dialog&quot; class=&quot;headerlink&quot; title=&quot;Strange Dialog&quot;&gt;&lt;/a&gt;Strange Dialog&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://acm.timus.ru/problem.aspx?space=1&amp;amp;num=1102&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Problem Link&lt;/a&gt;.&lt;br&gt;&lt;a href=&quot;https://github.com/yular/CCplusplus-Project/blob/master/Timus/timus_1102_strangedialog.cpp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code Link&lt;/a&gt;.&lt;br&gt;An DP problem. Set dp[i] as whether substring ranging from 0 to i index of original string is consist of only given strings including “in”,  “output”, “one”, “input”, “out” and “puton”. So if dp[n] is true then output “YES”; otherwise, output “NO”, where n is the length of given string.&lt;br&gt;DP 问题（当然也会有其他解法）。设dp[i]为从0到i的字串是否能够仅由”in”,  “output”, “one”, “input”, “out” and “puton” 这些字符串拼接而成。n为给定字符串长度，那么dp[n]为真，则输出”YES”；否则，输出”NO”。&lt;/p&gt;
&lt;hr&gt;


</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Strange-Dialog&quot;&gt;&lt;a href=&quot;#Strange-Dialog&quot; class=&quot;headerlink&quot; title=&quot;Strange Dialog&quot;&gt;&lt;/a&gt;Strange Dialog&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://acm.ti
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://yular.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>SPOJ Problems Solution List from One to Fifty Four</title>
    <link href="http://yular.github.io/2016/02/07/SPOJ-Problems-Solution-List-from-One-to-Fifty-Four/"/>
    <id>http://yular.github.io/2016/02/07/SPOJ-Problems-Solution-List-from-One-to-Fifty-Four/</id>
    <published>2016-02-08T05:36:27.000Z</published>
    <updated>2016-03-05T20:46:12.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Hash-it&quot;&gt;&lt;a href=&quot;#Hash-it&quot; class=&quot;headerlink&quot; title=&quot;Hash it!&quot;&gt;&lt;/a&gt;Hash it!&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.spoj.com/problems/HASHIT/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Problem Link&lt;/a&gt;.&lt;br&gt;&lt;a href=&quot;https://github.com/yular/CCplusplus-Project/blob/master/SPOJ/spoj_29_HASHIT.cpp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code Link&lt;/a&gt;.&lt;br&gt;An easy implementation problem. Just follow the instruction to build the hash table and do the operation. The maximum number of collision shoud be 19 not 20.&lt;br&gt;实为简单的模拟题。根据题目建好哈希表并依照给定命令进行操作就好。碰撞次数是0-19。&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Hash-it&quot;&gt;&lt;a href=&quot;#Hash-it&quot; class=&quot;headerlink&quot; title=&quot;Hash it!&quot;&gt;&lt;/a&gt;Hash it!&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.spoj.com/problems/HASHIT/&quot; t
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://yular.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Timus Problems for Beginners Solution List</title>
    <link href="http://yular.github.io/2016/02/07/Timus-Problems-for-Beginners-Solution-List/"/>
    <id>http://yular.github.io/2016/02/07/Timus-Problems-for-Beginners-Solution-List/</id>
    <published>2016-02-08T05:10:08.000Z</published>
    <updated>2016-03-05T20:46:12.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the solution list of Timus OJ problems for beginners.&lt;/p&gt;
&lt;h3 id=&quot;Rope&quot;&gt;&lt;a href=&quot;#Rope&quot; class=&quot;headerlink&quot; title=&quot;Rope&quot;&gt;&lt;/a&gt;Rope&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://acm.timus.ru/problem.aspx?space=1&amp;amp;num=1020&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Problem Link&lt;/a&gt;.&lt;br&gt;&lt;a href=&quot;https://github.com/yular/CCplusplus-Project/blob/master/Timus/timus_1020_rope.cpp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code Link&lt;/a&gt;.&lt;br&gt;A basic convex hull problem. The answer is the sum of length of convex hull and length of circle of which the radius is the given r.&lt;br&gt;基本的凸包问题。解法是凸包周长以及圆周长的和。&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;About-Grisha-N&quot;&gt;&lt;a href=&quot;#About-Grisha-N&quot; class=&quot;headerlink&quot; title=&quot;About Grisha N.&quot;&gt;&lt;/a&gt;About Grisha N.&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://acm.timus.ru/problem.aspx?space=1&amp;amp;num=2012&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Problem Link&lt;/a&gt;.&lt;br&gt;&lt;a href=&quot;https://github.com/yular/CCplusplus-Project/blob/master/Timus/timus_2012_aboutgrishan.cpp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code Link&lt;/a&gt;.&lt;br&gt;An very easy implementation problem. If f is no greater than 7, then it is impossible to solve all the problems.&lt;br&gt;简单的模拟题。判断f是否不小于7即可。&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Simple-Expression&quot;&gt;&lt;a href=&quot;#Simple-Expression&quot; class=&quot;headerlink&quot; title=&quot;Simple Expression&quot;&gt;&lt;/a&gt;Simple Expression&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://acm.timus.ru/problem.aspx?space=1&amp;amp;num=2066&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Problem Link&lt;/a&gt;.&lt;br&gt;&lt;a href=&quot;https://github.com/yular/CCplusplus-Project/blob/master/Timus/timus_2066_simpleexpression.cpp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code Link&lt;/a&gt;.&lt;br&gt;An easy math and brute force problem. We enumerate all the orders of given arrays and try all the combination of operators to form the expression. Then calculate the value of each of these expressions and return the minimum one.&lt;br&gt;简单的数学/暴力问题。枚举所有的数字顺序和计算符号组合方法，计算所有的这两种组合产生的表达式的值并返回最小值即可。&lt;/p&gt;
&lt;hr&gt;

</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the solution list of Timus OJ problems for beginners.&lt;/p&gt;
&lt;h3 id=&quot;Rope&quot;&gt;&lt;a href=&quot;#Rope&quot; class=&quot;headerlink&quot; title=&quot;Rope&quot;&gt;&lt;/a&gt;Rope&lt;
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://yular.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Kafka Consumer Java Maven QuickStart</title>
    <link href="http://yular.github.io/2016/01/24/Kafka-Consumer-Java-Maven-QuickStart/"/>
    <id>http://yular.github.io/2016/01/24/Kafka-Consumer-Java-Maven-QuickStart/</id>
    <published>2016-01-25T07:42:59.000Z</published>
    <updated>2016-03-08T07:08:56.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is a quickstart tutorial to implement a kafka consumer using Java and Maven. &lt;a href=&quot;https://cwiki.apache.org/confluence/display/KAFKA/Consumer+Group+Example&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;This link&lt;/a&gt; is the official tutorial but brand new users may find it hard to run it as the tutorial is not complete and the code has some bugs.&lt;/p&gt;
&lt;p&gt;In this tutorial we use kafka 0.8.0. And the application is a multi-thread one. Note:&lt;br&gt;1.Provide more threads than there are partitions on the topic, some threads will never see a message.&lt;br&gt;2.There are more partitions than threads, then some threads will receive data from multiple partitions. In this case, there is NO guarantee about the order consumers receive messages, other than that within the partition the offsets will be sequential.&lt;br&gt;3.More processes/threads will cause Kafka to re-balance, possibly changing the assignment of a Partition to a Thread.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Create-Project-Directory&quot;&gt;&lt;a href=&quot;#Create-Project-Directory&quot; class=&quot;headerlink&quot; title=&quot;Create Project Directory&quot;&gt;&lt;/a&gt;Create Project Directory&lt;/h3&gt;&lt;p&gt;Using the following command to create a project directory&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mvn archetype:generate -DgroupId=com.yulartech.template -DartifactId=kafka-consumer -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then navigate to our project directory.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Edit-pom-xml-File&quot;&gt;&lt;a href=&quot;#Edit-pom-xml-File&quot; class=&quot;headerlink&quot; title=&quot;Edit pom.xml File&quot;&gt;&lt;/a&gt;Edit pom.xml File&lt;/h3&gt;&lt;p&gt;Here we will need some Kafka consumer dependencies:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import kafka.consumer.ConsumerIterator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.consumer.KafkaStream;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Besides, when we run our producer jar file on the kafka cluster, it will be much more convinient if we will use one-jar plugin, especially in product environment. Here is the link of &lt;a href=&quot;http://yular.github.io/2016/01/10/Maven-Including-All-Dependencies-into-One-Jar-Using-Maven-Assemble-Plugins-Tutorial/&quot;&gt;Java Maven One-Jar Plugin Tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is the final version of pom.xml:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;project xmlns=&lt;span class=&quot;string&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; xmlns:xsi=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  xsi:schemaLocation=&lt;span class=&quot;string&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;groupId&amp;gt;com.yulartech.template&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;artifactId&amp;gt;kafka-consumer&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;name&amp;gt;kafka-consumer&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;properties&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;jdk.version&amp;gt;1.7&amp;lt;/jdk.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;kafka.version&amp;gt;0.8.1.1&amp;lt;/kafka.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;junit.version&amp;gt;4.11&amp;lt;/junit.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;maven-compiler-plugin.version&amp;gt;2.3.2&amp;lt;/maven-compiler-plugin.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;onejar-maven-plugin.version&amp;gt;1.4.4&amp;lt;/onejar-maven-plugin.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/properties&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;dependencies&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;version&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;junit.version&amp;#125;&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;scope&amp;gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;groupId&amp;gt;org.apache.kafka&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;artifactId&amp;gt;kafka_2.9.2&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;version&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;kafka.version&amp;#125;&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;exclusions&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;artifactId&amp;gt;jmxri&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;groupId&amp;gt;com.sun.jmx&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;artifactId&amp;gt;jms&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;groupId&amp;gt;javax.jms&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;artifactId&amp;gt;jmxtools&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;groupId&amp;gt;com.sun.jdmk&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/exclusions&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/dependencies&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;build&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;plugins&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;version&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;maven-compiler-plugin.version&amp;#125;&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;configuration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;jdk.version&amp;#125;&lt;/span&gt;&amp;lt;/&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;target&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;jdk.version&amp;#125;&lt;/span&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;maven-jar-plugin&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;configuration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;archive&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;lt;manifest&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;lt;mainClass&amp;gt;com.yulartech.template.KafkaConsumer&amp;lt;/mainClass&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;lt;/manifest&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;/archive&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;maven-jar-plugin&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;configuration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;archive&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;lt;manifest&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;lt;mainClass&amp;gt;com.yulartech.template.KafkaConsumer&amp;lt;/mainClass&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;lt;/manifest&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;/archive&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;groupId&amp;gt;org.dstovall&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;artifactId&amp;gt;onejar-maven-plugin&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;version&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;onejar-maven-plugin.version&amp;#125;&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;executions&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;execution&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;goals&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;lt;goal&amp;gt;one-jar&amp;lt;/goal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/goals&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/execution&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/plugins&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/build&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;pluginRepositories&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;pluginRepository&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;id&amp;gt;onejar-maven-plugin.googlecode.com&amp;lt;/id&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;url&amp;gt;http://onejar-maven-plugin.googlecode.com/svn/mavenrepo&amp;lt;/url&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/pluginRepository&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/pluginRepositories&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Write-Java-Code&quot;&gt;&lt;a href=&quot;#Write-Java-Code&quot; class=&quot;headerlink&quot; title=&quot;Write Java Code&quot;&gt;&lt;/a&gt;Write Java Code&lt;/h3&gt;&lt;p&gt;Under this file path ./src/main/com/yulartech/template/, create a new java file called “KafkaConsumer.java”.&lt;/p&gt;
&lt;p&gt;In the first step of our code, we should define properties for the consumer such as the IP of zookeeper and groupId.&lt;/p&gt;
&lt;p&gt;Here is the example to define these properties:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Properties props = new Properties();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props.put(&lt;span class=&quot;string&quot;&gt;&quot;zookeeper.connect&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;localhost:2181&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props.put(&lt;span class=&quot;string&quot;&gt;&quot;group.id&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;testgroup&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props.put(&lt;span class=&quot;string&quot;&gt;&quot;zookeeper.session.timeout.ms&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;500&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props.put(&lt;span class=&quot;string&quot;&gt;&quot;zookeeper.sync.time.ms&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;250&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props.put(&lt;span class=&quot;string&quot;&gt;&quot;auto.commit.interval.ms&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1000&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Below is the source code of KafkaConsumer.java:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.template;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.api.FetchRequest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.api.FetchRequestBuilder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.api.PartitionOffsetRequestInfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.common.ErrorMapping;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.common.TopicAndPartition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.javaapi.consumer.SimpleConsumer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.message.MessageAndOffset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.consumer.Consumer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.javaapi.consumer.ConsumerConnector;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.consumer.ConsumerConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.consumer.ConsumerIterator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.consumer.KafkaStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.nio.ByteBuffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.ArrayList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.Collections;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.HashMap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.List;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.Map;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.Properties;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.concurrent.ExecutorService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.concurrent.Executors;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class KafkaConsumer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private ExecutorService executor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private final ConsumerConnector consumer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private final String topic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public KafkaConsumer(String zookeeper, String groupId, String topic) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Properties props = new Properties();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;zookeeper.connect&quot;&lt;/span&gt;, zookeeper);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;group.id&quot;&lt;/span&gt;, groupId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;zookeeper.session.timeout.ms&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;500&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;zookeeper.sync.time.ms&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;250&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;auto.commit.interval.ms&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1000&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        consumer = Consumer.createJavaConsumerConnector(new ConsumerConfig(props));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.topic = topic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void runConsumer(int threadCount) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Map&amp;lt;String, Integer&amp;gt; topicCount = new HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        topicCount.put(topic, threadCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Map&amp;lt;String, List&amp;lt;KafkaStream&amp;lt;byte[], byte[]&amp;gt;&amp;gt;&amp;gt; consumerStreams = consumer.createMessageStreams(topicCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        List&amp;lt;KafkaStream&amp;lt;byte[], byte[]&amp;gt;&amp;gt; streams = consumerStreams.get(topic);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        executor = Executors.newFixedThreadPool(threadCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int threadNumber = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (final KafkaStream stream : streams) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            executor.submit(new KafkaConsumerThread(stream, threadNumber));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++ threadNumber;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Thread.sleep(10000);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; catch (InterruptedException ie) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (consumer != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            consumer.shutdown();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (executor != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            executor.shutdown();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void main(String[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String topic = args[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int threadCount = Integer.parseInt(args[1]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        KafkaConsumer kafkaConsumer = new KafkaConsumer(&lt;span class=&quot;string&quot;&gt;&quot;localhost:2181&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;testgroup&quot;&lt;/span&gt;, topic);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        kafkaConsumer.runConsumer(threadCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that a thread class is used in this application. So create another java file called “kafkaConsumerThread.java” under the same directory of the consumer java file and put the following code into it:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.template;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.consumer.ConsumerIterator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.consumer.KafkaStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;final class KafkaConsumerThread implements Runnable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private KafkaStream stream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int threadNumber;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public KafkaConsumerThread(KafkaStream stream, int threadNumber)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.threadNumber = threadNumber;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.stream = stream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ConsumerIterator&amp;lt;byte[], byte[]&amp;gt; it = stream.iterator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (it.hasNext()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Message from thread &quot;&lt;/span&gt; + threadNumber + &lt;span class=&quot;string&quot;&gt;&quot;: &quot;&lt;/span&gt; + new String(it.next().message()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Shutting down thread: &quot;&lt;/span&gt; + threadNumber);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Compile-Deploy-and-Run-the-Jar&quot;&gt;&lt;a href=&quot;#Compile-Deploy-and-Run-the-Jar&quot; class=&quot;headerlink&quot; title=&quot;Compile, Deploy and Run the Jar&quot;&gt;&lt;/a&gt;Compile, Deploy and Run the Jar&lt;/h3&gt;&lt;p&gt;Use these two commands to generate jar file:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mvn clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn package -DskipTests&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If no exceptions are thrown out, we will find a jar file under the new created ./target directory called “kafka-consumer-1.0-SNAPSHOT.one-jar.jar”, which is the jar file we want.&lt;/p&gt;
&lt;p&gt;Then we should start our Kafka cluster, here is the &lt;a href=&quot;http://yular.github.io/2015/09/04/Kafka-Install-and-Basic-Commands/&quot;&gt;tutorial&lt;/a&gt;. After that, execute this command to generate a topic:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 5 --topic page_visits&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;And then start the publisher jar file that we created in &lt;a href=&quot;http://yular.github.io/2016/01/17/Kafka-Publisher-Java-Maven-QuickStart/&quot;&gt;this tutorial&lt;/a&gt; to send message:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -jar kafka-publisher-1.0-SNAPSHOT.one-jar.jar 7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Now &lt;span class=&quot;built_in&quot;&gt;let&lt;/span&gt; us run our jar through this &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java -jar kafka-consumer-1.0-SNAPSHOT.one-jar.jar 5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that the number at the end is the number of thread created.&lt;/p&gt;
&lt;p&gt;If everything runs well, the output should be similar like this:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;4j:WARN No appenders could be found &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; logger (kafka.utils.VerifiableProperties).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;4j:WARN Please initialize the &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;4j system properly.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SLF4J: Failed to load class &lt;span class=&quot;string&quot;&gt;&quot;org.slf4j.impl.StaticLoggerBinder&quot;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SLF4J: Defaulting to no-operation (NOP) logger implementation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SLF4J: See http://www.slf4j.org/codes.html&lt;span class=&quot;comment&quot;&gt;#StaticLoggerBinder for further details.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Message from thread 3: 1453425453604,www.example.com,192.168.2.160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Message from thread 0: 1453425453624,www.example.com,192.168.2.73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Message from thread 4: 1453425453374,www.example.com,192.168.2.107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Message from thread 1: 1453425453594,www.example.com,192.168.2.249&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Message from thread 3: 1453425453635,www.example.com,192.168.2.250&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Message from thread 4: 1453425453616,www.example.com,192.168.2.247&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Message from thread 4: 1453425453643,www.example.com,192.168.2.52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Shutting down thread: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Shutting down thread: 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Shutting down thread: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Shutting down thread: 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Shutting down thread: 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is a quickstart tutorial to implement a kafka consumer using Java and Maven. &lt;a href=&quot;https://cwiki.apache.org/confluence/display/KAFKA/Consumer+Group+Example&quot;&gt;This link&lt;/a&gt; is the official tutorial but brand new users may find it hard to run it as the tutorial is not complete and the code has some bugs.&lt;/p&gt;
&lt;p&gt;In this tutorial we use kafka 0.8.0. And the application is a multi-thread one. Note:&lt;br&gt;1.Provide more threads than there are partitions on the topic, some threads will never see a message.&lt;br&gt;2.There are more partitions than threads, then some threads will receive data from multiple partitions. In this case, there is NO guarantee about the order consumers receive messages, other than that within the partition the offsets will be sequential.&lt;br&gt;3.More processes/threads will cause Kafka to re-balance, possibly changing the assignment of a Partition to a Thread.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="http://yular.github.io/tags/Cloud-Computing/"/>
    
  </entry>
  
  <entry>
    <title>H2O Java POJO Quick Start</title>
    <link href="http://yular.github.io/2016/01/24/H2O-Java-POJO-Quick-Start/"/>
    <id>http://yular.github.io/2016/01/24/H2O-Java-POJO-Quick-Start/</id>
    <published>2016-01-25T07:11:31.000Z</published>
    <updated>2016-03-08T07:11:14.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the &lt;a href=&quot;http://h2o-release.s3.amazonaws.com/h2o/rel-tibshirani/8/docs-website/h2o-docs/index.html#POJO%20Quick%20Start&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official tutorial&lt;/a&gt;. The tutorial below is almost the same as official one.&lt;/p&gt;
&lt;p&gt;H2O allows users to convert the models they have built to a Plain Old Java Object (POJO), which can then be easily deployed within their Java app and scheduled to run on a specified dataset.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Start-and-Run-H2O-Web-Service&quot;&gt;&lt;a href=&quot;#Start-and-Run-H2O-Web-Service&quot; class=&quot;headerlink&quot; title=&quot;Start and Run H2O Web Service&quot;&gt;&lt;/a&gt;Start and Run H2O Web Service&lt;/h3&gt;&lt;p&gt;Install a H2O project and run it using this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ java -jar h2o.jar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then follow these steps to build a model using browser:&lt;br&gt;1.Go to &lt;a href=&quot;http://localhost:54321&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:54321&lt;/a&gt;.&lt;br&gt;2.Click the “view example flow” near the right edge of screen.&lt;br&gt;3.Click GBM_Airlines_Classification.flow&lt;br&gt;4.If a confirmation prompt appears asking you to “Load Notebook”, click it.&lt;br&gt;5.From the “Flow” menu choose the “Run all cells” option.&lt;br&gt;6.Scroll down and find the “Model” cell in the notebook. Click on the Download POJO button as shown in the following screenshot.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Download-the-model-jar-and-Write-Code&quot;&gt;&lt;a href=&quot;#Download-the-model-jar-and-Write-Code&quot; class=&quot;headerlink&quot; title=&quot;Download the model jar and Write Code&quot;&gt;&lt;/a&gt;Download the model jar and Write Code&lt;/h3&gt;&lt;p&gt;Execute the following commands to create a project directory and download the jar file:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mkdir h2opojo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; h2opojo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv ~/Downloads/gbm_pojo_test.java .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ curl http://localhost:54321/3/h2o-genmodel.jar &amp;gt; h2o-genmodel.jar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now create a java file under h2opojo directory and put following code into it:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ vi main.java&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the java code:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; hex.genmodel.easy.RowData;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; hex.genmodel.easy.EasyPredictModelWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; hex.genmodel.easy.prediction.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String modelClassName = &lt;span class=&quot;string&quot;&gt;&quot;gbm_pojo_test&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     hex.genmodel.GenModel rawModel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     rawModel = (hex.genmodel.GenModel) Class.forName(modelClassName).newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     EasyPredictModelWrapper model = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EasyPredictModelWrapper(rawModel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     RowData row = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RowData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     row.put(&lt;span class=&quot;string&quot;&gt;&quot;Year&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1987&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     row.put(&lt;span class=&quot;string&quot;&gt;&quot;Month&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;10&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     row.put(&lt;span class=&quot;string&quot;&gt;&quot;DayofMonth&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;14&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     row.put(&lt;span class=&quot;string&quot;&gt;&quot;DayOfWeek&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     row.put(&lt;span class=&quot;string&quot;&gt;&quot;CRSDepTime&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;730&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     row.put(&lt;span class=&quot;string&quot;&gt;&quot;UniqueCarrier&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;PS&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     row.put(&lt;span class=&quot;string&quot;&gt;&quot;Origin&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;SAN&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     row.put(&lt;span class=&quot;string&quot;&gt;&quot;Dest&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;SFO&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     BinomialModelPrediction p = model.predictBinomial(row);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Label (aka prediction) is flight departure delayed: &quot;&lt;/span&gt; + p.label);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;Class probabilities: &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; p.classProbabilities.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       System.out.print(p.classProbabilities[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Build-POJO-jar-file&quot;&gt;&lt;a href=&quot;#Build-POJO-jar-file&quot; class=&quot;headerlink&quot; title=&quot;Build POJO jar file&quot;&gt;&lt;/a&gt;Build POJO jar file&lt;/h3&gt;&lt;p&gt;Execute the following command to build the jar file and run it:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m gbm_pojo_test.java main.java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ java -cp .:h2o-genmodel.jar main&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If no exceptions are thrown out, the output should be similar to this:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Label (aka prediction) is flight departure delayed: YES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class probabilities: 0.4790490513429604,0.5209509486570396&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the &lt;a href=&quot;http://h2o-release.s3.amazonaws.com/h2o/rel-tibshirani/8/docs-website/h2o-docs/index.html#POJO%20Quick%20Start&quot;&gt;official tutorial&lt;/a&gt;. The tutorial below is almost the same as official one.&lt;/p&gt;
&lt;p&gt;H2O allows users to convert the models they have built to a Plain Old Java Object (POJO), which can then be easily deployed within their Java app and scheduled to run on a specified dataset.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="http://yular.github.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Thinking in Divide and Conquer</title>
    <link href="http://yular.github.io/2016/01/24/Thinking-in-Divide-and-Conquer/"/>
    <id>http://yular.github.io/2016/01/24/Thinking-in-Divide-and-Conquer/</id>
    <published>2016-01-24T22:55:50.000Z</published>
    <updated>2016-03-05T20:46:12.000Z</updated>
    
    <content type="html">&lt;p&gt;Divide and Conquer algorithm is widely used in our daily life and computer science. Many well-known algorithms adopt this idea and they include Merge-Sort, Quick-Sort and so on.&lt;/p&gt;
&lt;p&gt;The basic idea of divide and conquer algorithm is to divide the original  problem into sub problems in scale. The division process continues until no available or legal sub problems can be found. Then we solve each of this sub problems, combine the sub prolems into a larger problems and solve these problems again. This process continue until we reach back to our original problem. To solve the problems that are formed by multiple sub problems, we have to consider these two cases: the solution for their sub problems and the one for the boundary of sub problems. The most tricky thing of divide and conquer is to find an efficient way to solve the problem raised from the boundary of its sub problems.&lt;/p&gt;
&lt;p&gt;Usually the time complexity of divide and conquer is O(nlgn) because in each iteration, we divide the problem into two sub problems which will lead to lgn times of iteration; and in each iteration, we have to go through all the sub problems once (in best case but not always); so the total time complexity is O(n * lgn).&lt;/p&gt;
&lt;p&gt;We often use recursion in divide and conquer. But it will consume more memory usually. So in some memory limited cases, we can use iterative approach in this algorithm.&lt;/p&gt;
&lt;p&gt;In the future, I will recommend some problems that can be solved using divide and conquer. GL &amp;amp;&amp;amp; HF!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Divide and Conquer algorithm is widely used in our daily life and computer science. Many well-known algorithms adopt this idea and they i
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://yular.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Kafka Running Multi-broker Cluster Tutorial</title>
    <link href="http://yular.github.io/2016/01/17/Kafka-Running-Multi-broker-Cluster-Tutorial/"/>
    <id>http://yular.github.io/2016/01/17/Kafka-Running-Multi-broker-Cluster-Tutorial/</id>
    <published>2016-01-18T06:39:33.000Z</published>
    <updated>2016-03-08T07:09:57.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the official &lt;a href=&quot;http://kafka.apache.org/documentation.html#quickstart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tutorial to setup a multi-broker Kafka cluster&lt;/a&gt;. Below is our own tutorial.&lt;/p&gt;
&lt;p&gt;In this tutorial, we will also setup a three-brokers Kafka cluster. To read the single broker Kafka cluster, read this &lt;a href=&quot;http://yular.github.io/2015/09/04/Kafka-Install-and-Basic-Commands/&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here we use Kafka 0.9.0.0.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Create-and-Edit-Properties-Files&quot;&gt;&lt;a href=&quot;#Create-and-Edit-Properties-Files&quot; class=&quot;headerlink&quot; title=&quot;Create and Edit Properties Files&quot;&gt;&lt;/a&gt;Create and Edit Properties Files&lt;/h3&gt;&lt;p&gt;At first, creat another two properties files through the following commands:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cp config/server.properties config/server-1.properties&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp config/server.properties config/server-2.properties&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Open these two properties files and edit the following items of them:&lt;br&gt;For config/server-1.properties file:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;broker.id=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port=9093&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log.dir=/tmp/kafka-logs-1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;For config/server-2.properties file:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;broker.id=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port=9094&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log.dir=/tmp/kafka-logs-2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that if we do not run kafka cluster as root, Kafka may fail to generate the log directory or to save log files there. In this case, we should execute the following commands:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir kafka-logs-1 kafka-logs-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod 777 kafka-logs-1 kafka-logs-2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Remember that broker id should be unique and is the permanent name of each node in the cluster.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Start-the-Multi-brokers-Cluster&quot;&gt;&lt;a href=&quot;#Start-the-Multi-brokers-Cluster&quot; class=&quot;headerlink&quot; title=&quot;Start the Multi-brokers Cluster&quot;&gt;&lt;/a&gt;Start the Multi-brokers Cluster&lt;/h3&gt;&lt;p&gt;At first, we should start the three brokers through the following commands. Before that, remember to start our zookeeper server and here is the &lt;a href=&quot;http://yular.github.io/2015/09/03/Zookeeper-Install-and-Basic-Commands/&quot;&gt;tutorial&lt;/a&gt; to do that.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-server-start.sh config/server.properties &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-server-start.sh config/server-1.properties &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-server-start.sh config/server-2.properties &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Execute this command to check whether all the brokers are running or not:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ps -elf | grep kafka&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The output should be similar like this:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0 S yular   5066     1  0  78   0 - 457155 futex Jan14 ?        00:28:23 /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/bin/java -Xmx1G -Xms1G -server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+DisableExplicitGC -Djava.awt.headless=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; -Xloggc:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kafka_2.11-0.9.0.0/bin/../logs/kafkaServer-gc.log -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; -Dcom.sun.management.jmxremote.ssl=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; -Dkafka.logs.dir=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kafka_2.11-0.9.0.0/bin/../logs -D&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;4j.configuration=file:bin/../config/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;4j.properties -cp :/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kafka_2.11-0.9.0.0/bin/../libs/* kafka.Kafka config/server.properties&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 S yular   5165     1  0  78   0 - 453424 futex Jan14 ?        00:26:05 /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/bin/java -Xmx1G -Xms1G -server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+DisableExplicitGC -Djava.awt.headless=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; -Xloggc:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kafka_2.11-0.9.0.0/bin/../logs/kafkaServer-gc.log -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; -Dcom.sun.management.jmxremote.ssl=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; -Dkafka.logs.dir=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kafka_2.11-0.9.0.0/bin/../logs -D&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;4j.configuration=file:bin/../config/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;4j.properties -cp :/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kafka_2.11-0.9.0.0/bin/../libs/* kafka.Kafka config/server-1.properties&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 S yular   5229     1  0  78   0 - 439978 futex Jan14 ?        00:25:36 /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/bin/java -Xmx1G -Xms1G -server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+DisableExplicitGC -Djava.awt.headless=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; -Xloggc:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kafka_2.11-0.9.0.0/bin/../logs/kafkaServer-gc.log -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; -Dcom.sun.management.jmxremote.ssl=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; -Dkafka.logs.dir=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kafka_2.11-0.9.0.0/bin/../logs -D&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;4j.configuration=file:bin/../config/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;4j.properties -cp :/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kafka_2.11-0.9.0.0/bin/../libs/* kafka.Kafka config/server-2.properties&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 S yular  29288 29101  0  78   0 - 15303 -      19:11 pts/6    00:00:00 grep kafka&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Create-Topics-and-Send-Message&quot;&gt;&lt;a href=&quot;#Create-Topics-and-Send-Message&quot; class=&quot;headerlink&quot; title=&quot;Create Topics and Send Message&quot;&gt;&lt;/a&gt;Create Topics and Send Message&lt;/h3&gt;&lt;p&gt;To create a new topic, use this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 1 --topic three-brokers-topic&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;To check brokers status, execute this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic three-brokers-topic&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;To publish message to our new topic, execute this command to start our publisher:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-console-producer.sh --broker-list localhost:9092 --topic three-brokers-topic&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now if we start our consumer through the following command (we had better open a new terminal tap or window to do that):&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-console-consumer.sh --zookeeper localhost:2181 --from-beginning --topic three-brokers-topic&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;and then in the publisher, everytime when we type new message and send it, consumer end will receive the message:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# publisher end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;haha&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hoho&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hehe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Consumer end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;haha&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hoho&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hehe&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Hope this tutorial will help.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the official &lt;a href=&quot;http://kafka.apache.org/documentation.html#quickstart&quot;&gt;tutorial to setup a multi-broker Kafka cluster&lt;/a&gt;. Below is our own tutorial.&lt;/p&gt;
&lt;p&gt;In this tutorial, we will also setup a three-brokers Kafka cluster. To read the single broker Kafka cluster, read this &lt;a href=&quot;http://yular.github.io/2015/09/04/Kafka-Install-and-Basic-Commands/&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here we use Kafka 0.9.0.0.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="http://yular.github.io/tags/Cloud-Computing/"/>
    
  </entry>
  
  <entry>
    <title>Kafka Publisher Java Maven QuickStart</title>
    <link href="http://yular.github.io/2016/01/17/Kafka-Publisher-Java-Maven-QuickStart/"/>
    <id>http://yular.github.io/2016/01/17/Kafka-Publisher-Java-Maven-QuickStart/</id>
    <published>2016-01-18T06:38:34.000Z</published>
    <updated>2016-03-05T20:46:12.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is a quickstart tutorial to implement a kafka publisher using Java and Maven. &lt;a href=&quot;https://cwiki.apache.org/confluence/display/KAFKA/0.8.0+Producer+Example&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;This link&lt;/a&gt; is the official tutorial but brand new users may find it hard to run it as the tutorial is not complete and the code has some bugs.&lt;/p&gt;
&lt;p&gt;In this tutorial we use kafka 0.8.0.&lt;/p&gt;
&lt;h3 id=&quot;Create-Project-Directory&quot;&gt;&lt;a href=&quot;#Create-Project-Directory&quot; class=&quot;headerlink&quot; title=&quot;Create Project Directory&quot;&gt;&lt;/a&gt;Create Project Directory&lt;/h3&gt;&lt;p&gt;Using the following command to create a project directory&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mvn archetype:generate -DgroupId=com.yulartech.template -DartifactId=kafka-publisher -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then navigate to our project directory.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Edit-pom-xml-File&quot;&gt;&lt;a href=&quot;#Edit-pom-xml-File&quot; class=&quot;headerlink&quot; title=&quot;Edit pom.xml File&quot;&gt;&lt;/a&gt;Edit pom.xml File&lt;/h3&gt;&lt;p&gt;The Producer class is used to create new messages for a specific Topic and optional Partition. The following packages must be included in our project as dependencies:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import kafka.javaapi.producer.Producer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.producer.KeyedMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.producer.ProducerConfig;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Besides, when we run our producer jar file on the kafka cluster, it will be much more convinient if we will use one-jar plugin, especially in product environment. Here is the link of &lt;a href=&quot;http://yular.github.io/2016/01/10/Maven-Including-All-Dependencies-into-One-Jar-Using-Maven-Assemble-Plugins-Tutorial/&quot;&gt;Java Maven One-Jar Plugin Tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So here is the final version of our pom.xml:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;project xmlns=&lt;span class=&quot;string&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; xmlns:xsi=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  xsi:schemaLocation=&lt;span class=&quot;string&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;groupId&amp;gt;com.yulartech.template&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;artifactId&amp;gt;kafka-publisher&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;name&amp;gt;kafka-publisher&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;properties&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;jdk.version&amp;gt;1.7&amp;lt;/jdk.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;kafka.version&amp;gt;0.8.1.1&amp;lt;/kafka.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;junit.version&amp;gt;4.11&amp;lt;/junit.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;maven-compiler-plugin.version&amp;gt;2.3.2&amp;lt;/maven-compiler-plugin.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;onejar-maven-plugin.version&amp;gt;1.4.4&amp;lt;/onejar-maven-plugin.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/properties&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;dependencies&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;version&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;junit.version&amp;#125;&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;scope&amp;gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;groupId&amp;gt;org.apache.kafka&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;artifactId&amp;gt;kafka_2.9.2&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;version&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;kafka.version&amp;#125;&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;exclusions&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;artifactId&amp;gt;jmxri&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;groupId&amp;gt;com.sun.jmx&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;artifactId&amp;gt;jms&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;groupId&amp;gt;javax.jms&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;artifactId&amp;gt;jmxtools&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;groupId&amp;gt;com.sun.jdmk&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/exclusion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/exclusions&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/dependencies&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;build&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;plugins&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;version&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;maven-compiler-plugin.version&amp;#125;&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;configuration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;jdk.version&amp;#125;&lt;/span&gt;&amp;lt;/&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;target&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;jdk.version&amp;#125;&lt;/span&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;maven-jar-plugin&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;configuration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;archive&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;lt;manifest&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;lt;mainClass&amp;gt;com.yulartech.template.KafkaPublisher&amp;lt;/mainClass&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;lt;/manifest&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;/archive&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;groupId&amp;gt;org.dstovall&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;artifactId&amp;gt;onejar-maven-plugin&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;version&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;onejar-maven-plugin.version&amp;#125;&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;executions&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;execution&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;goals&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;lt;goal&amp;gt;one-jar&amp;lt;/goal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/goals&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/execution&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;/executions&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/plugins&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/build&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;pluginRepositories&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;pluginRepository&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;id&amp;gt;onejar-maven-plugin.googlecode.com&amp;lt;/id&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;url&amp;gt;http://onejar-maven-plugin.googlecode.com/svn/mavenrepo&amp;lt;/url&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/pluginRepository&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/pluginRepositories&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Write-Java-Code&quot;&gt;&lt;a href=&quot;#Write-Java-Code&quot; class=&quot;headerlink&quot; title=&quot;Write Java Code&quot;&gt;&lt;/a&gt;Write Java Code&lt;/h3&gt;&lt;p&gt;Under this file path ./src/main/com/yulartech/template/, create a new java file called “KafkaPublisher.java”.&lt;/p&gt;
&lt;p&gt;In the first step of our code, we should define properties for how the Producer finds the cluster, serializes the messages and if appropriate directs the message to a specific Partition.&lt;/p&gt;
&lt;p&gt;Here is the example to define these properties:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Properties props = new Properties();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props.put(&lt;span class=&quot;string&quot;&gt;&quot;metadata.broker.list&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;localhost:9092,localhost:9093&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props.put(&lt;span class=&quot;string&quot;&gt;&quot;serializer.class&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;kafka.serializer.StringEncoder&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props.put(&lt;span class=&quot;string&quot;&gt;&quot;partitioner.class&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;com.yulartech.template.SimplePartitioner&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props.put(&lt;span class=&quot;string&quot;&gt;&quot;request.required.acks&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ProducerConfig config = new ProducerConfig(props);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that if we only want to run the jar on single broker, the “metadata.broker.list” should contain only one broker URL; otherwise, we should list all the broker URLs like the above example. Since we will put the jar file on the Kafka cluster, the host name of URL is localhost.&lt;/p&gt;
&lt;p&gt;Below is the source code of KafkaPublisher.java:&lt;br&gt;This one is for single broker:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.template;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.javaapi.producer.Producer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.producer.KeyedMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.producer.ProducerConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class KafkaPublisher&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Producer&amp;lt;String, String&amp;gt; producer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ProducerConfig config;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;KafkaPublisher&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Properties props = new Properties();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;metadata.broker.list&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;localhost:9092&quot;&lt;/span&gt;); //Single Publisher Version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;serializer.class&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;kafka.serializer.StringEncoder&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;partitioner.class&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;com.yulartech.template.SimplePartitioner&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;request.required.acks&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config = new ProducerConfig(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	producer = new Producer&amp;lt;String, String&amp;gt;(config);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void runPublisher(long events)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Random rnd = new Random();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (long nEvents = 0; nEvents &amp;lt; events; nEvents++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               long runtime = new Date().getTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               String ip = &lt;span class=&quot;string&quot;&gt;&quot;192.168.2.&quot;&lt;/span&gt; + rnd.nextInt(255);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               String msg = runtime + &lt;span class=&quot;string&quot;&gt;&quot;,www.example.com,&quot;&lt;/span&gt; + ip;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               KeyedMessage&amp;lt;String, String&amp;gt; data = new KeyedMessage&amp;lt;String, String&amp;gt;(&lt;span class=&quot;string&quot;&gt;&quot;page_visits&quot;&lt;/span&gt;, ip, msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               producer.send(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        producer.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void main( String[] args )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        long events = Long.parseLong(args[0]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	KafkaPublisher kafkaPublisher = new KafkaPublisher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	kafkaPublisher.runPublisher(events);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This one is multi-brokers version:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.template;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.javaapi.producer.Producer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.producer.KeyedMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.producer.ProducerConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class KafkaPublisher&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void main( String[] args )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        long events = Long.parseLong(args[0]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Random rnd = new Random();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Properties props = new Properties();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	props.put(&lt;span class=&quot;string&quot;&gt;&quot;metadata.broker.list&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;localhost:9092,localhost:9093&quot;&lt;/span&gt;); //Multiple Publisher Vesion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;serializer.class&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;kafka.serializer.StringEncoder&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;partitioner.class&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;com.yulartech.template.SimplePartitioner&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props.put(&lt;span class=&quot;string&quot;&gt;&quot;request.required.acks&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ProducerConfig config = new ProducerConfig(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Producer&amp;lt;String, String&amp;gt; producer = new Producer&amp;lt;String, String&amp;gt;(config);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (long nEvents = 0; nEvents &amp;lt; events; nEvents++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               long runtime = new Date().getTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               String ip = &lt;span class=&quot;string&quot;&gt;&quot;192.168.2.&quot;&lt;/span&gt; + rnd.nextInt(255);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               String msg = runtime + &lt;span class=&quot;string&quot;&gt;&quot;,www.example.com,&quot;&lt;/span&gt; + ip;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               KeyedMessage&amp;lt;String, String&amp;gt; data = new KeyedMessage&amp;lt;String, String&amp;gt;(&lt;span class=&quot;string&quot;&gt;&quot;page_visits&quot;&lt;/span&gt;, ip, msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               producer.send(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        producer.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then under the same file path, create another new java file “SimplePartitioner.java”.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.template;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.producer.Partitioner;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import kafka.utils.VerifiableProperties;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class SimplePartitioner implements Partitioner &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public SimplePartitioner (VerifiableProperties props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int partition(Object key, int a_numPartitions) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int partition = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String stringKey = (String) key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int offset = stringKey.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offset &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           partition = Integer.parseInt( stringKey.substring(offset+1)) % a_numPartitions;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; partition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Compile-Deploy-and-Run-the-Jar&quot;&gt;&lt;a href=&quot;#Compile-Deploy-and-Run-the-Jar&quot; class=&quot;headerlink&quot; title=&quot;Compile, Deploy and Run the Jar&quot;&gt;&lt;/a&gt;Compile, Deploy and Run the Jar&lt;/h3&gt;&lt;p&gt;Use these two commands to generate jar file:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mvn clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn package -DskipTests&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If no exceptions are thrown out, we will find a jar file under the new created ./target directory called “kafka-publisher-1.0-SNAPSHOT.one-jar.jar”, which is the jar file we want.&lt;/p&gt;
&lt;p&gt;Then we should start our Kafka cluster, here is the &lt;a href=&quot;http://yular.github.io/2015/09/04/Kafka-Install-and-Basic-Commands/&quot;&gt;tutorial&lt;/a&gt; and we will run mulit-brokers on it. Besides, we also run a consumer to receive the message published by our Kafka jar.&lt;/p&gt;
&lt;p&gt;Execute this command when all the three brokers are running successfully:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 5 --topic page_visits&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now let us run our jar through this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -jar kafka-publisher-1.0-SNAPSHOT.one-jar.jar 9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that the digit is the number of messages that will be sent.&lt;/p&gt;
&lt;p&gt;So the output should be similar like this:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1452801130483,www.example.com,192.168.2.225&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1452801130781,www.example.com,192.168.2.37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1452801130791,www.example.com,192.168.2.226&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1452801130805,www.example.com,192.168.2.106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1452801130817,www.example.com,192.168.2.179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1452801130829,www.example.com,192.168.2.191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1452801130841,www.example.com,192.168.2.18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1452801130847,www.example.com,192.168.2.42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1452801130867,www.example.com,192.168.2.18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Hope this tutorial will help.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is a quickstart tutorial to implement a kafka publisher using Java and Maven. &lt;a href=&quot;https://cwiki.apache.org/confluence/display/K
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="http://yular.github.io/tags/Cloud-Computing/"/>
    
  </entry>
  
  <entry>
    <title>Maven Including All Dependencies into One Jar Using Maven Assemble Plugins Tutorial</title>
    <link href="http://yular.github.io/2016/01/10/Maven-Including-All-Dependencies-into-One-Jar-Using-Maven-Assemble-Plugins-Tutorial/"/>
    <id>http://yular.github.io/2016/01/10/Maven-Including-All-Dependencies-into-One-Jar-Using-Maven-Assemble-Plugins-Tutorial/</id>
    <published>2016-01-10T20:22:04.000Z</published>
    <updated>2016-03-05T20:46:12.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Maven Including All Dependencies into One Jar Tutorial</title>
    <link href="http://yular.github.io/2016/01/10/Maven-Including-All-Dependencies-into-One-Jar-Tutorial/"/>
    <id>http://yular.github.io/2016/01/10/Maven-Including-All-Dependencies-into-One-Jar-Tutorial/</id>
    <published>2016-01-10T20:16:45.000Z</published>
    <updated>2016-03-05T20:46:12.000Z</updated>
    
    <content type="html">&lt;p&gt;When we compile Java Maven project into a jar file, we should include third party jars that are used in the program; otherwise, our programs will fail because of No Class Found Error while running. Here are some ways to include all third party indenpencies into only one jar.&lt;/p&gt;
&lt;p&gt;1.Just download the third party jars, save them into project directories and then compile and create our program jar file using command line.&lt;/p&gt;
&lt;p&gt;2.Use &lt;a href=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Maven Assemble Plugin&lt;/a&gt; in our project. In this case, we will get only one jar for our project and all dependencies are included into that jar file. Here is the detailed &lt;a href=&quot;&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;3.Use &lt;a href=&quot;https://code.google.com/p/onejar-maven-plugin/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Maven One Jar Plugin&lt;/a&gt; in our project. In this case, we also get only one jar for our project and all dependencies are included into that jar file. Here is the detailed &lt;a href=&quot;&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;When we compile Java Maven project into a jar file, we should include third party jars that are used in the program; otherwise, our progr
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
</feed>
