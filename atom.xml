<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YBC HomePage</title>
  <subtitle>Study~ Work~ Life~ Everything is here~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yular.github.io/"/>
  <updated>2018-01-29T02:11:40.000Z</updated>
  <id>http://yular.github.io/</id>
  
  <author>
    <name>BaiChuan Yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Reading Note of Programming in Lua 4th Edition II</title>
    <link href="http://yular.github.io/2018/01/28/Reading-Note-of-Programming-in-Lua-4th-Edition-II/"/>
    <id>http://yular.github.io/2018/01/28/Reading-Note-of-Programming-in-Lua-4th-Edition-II/</id>
    <published>2018-01-29T00:39:37.000Z</published>
    <updated>2018-01-29T02:11:40.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Lua" scheme="http://yular.github.io/tags/Lua/"/>
    
  </entry>
  
  <entry>
    <title>LintCode Problem Solution List</title>
    <link href="http://yular.github.io/2018/01/22/LintCode-Problem-Solution-List/"/>
    <id>http://yular.github.io/2018/01/22/LintCode-Problem-Solution-List/</id>
    <published>2018-01-23T07:26:02.000Z</published>
    <updated>2018-01-23T07:45:31.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the solution list of some of the algorithm problems in &lt;a href=&quot;http://www.lintcode.com/problem/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LintCode Online Judge&lt;/a&gt;. Here is the link of &lt;a href=&quot;https://github.com/yular/CC--InterviewProblem/blob/master/LintCode/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Solution List&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The list will be updated whenever I solve (or optimize the solution) an algorithm problems of LintCode OJ.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the solution list of some of the algorithm problems in &lt;a href=&quot;http://www.lintcode.com/problem/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://yular.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode Problem Solution List</title>
    <link href="http://yular.github.io/2018/01/22/LeetCode-Problem-Solution-List/"/>
    <id>http://yular.github.io/2018/01/22/LeetCode-Problem-Solution-List/</id>
    <published>2018-01-23T07:24:37.000Z</published>
    <updated>2018-01-23T07:29:54.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the solution list of some of the algorithm problems in &lt;a href=&quot;https://leetcode.com/problemset/algorithms&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeetCode Online Judge&lt;/a&gt;. Here is the link of &lt;a href=&quot;https://github.com/yular/CC--InterviewProblem/blob/master/LeetCode/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Solution List&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The list will be updated whenever I solve (or optimize the solution) an algorithm problems of LeetCode OJ.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the solution list of some of the algorithm problems in &lt;a href=&quot;https://leetcode.com/problemset/algorithms&quot; target=&quot;_blank&quot; rel=&quot;
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://yular.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Timus Online Judge Problem Solution List</title>
    <link href="http://yular.github.io/2018/01/22/Timus-Online-Judge-Problem-Solution-List/"/>
    <id>http://yular.github.io/2018/01/22/Timus-Online-Judge-Problem-Solution-List/</id>
    <published>2018-01-23T04:42:20.000Z</published>
    <updated>2018-01-23T04:50:02.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the solution list of some of the algorithm problems in &lt;a href=&quot;http://acm.timus.ru/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Timus Online Judge&lt;/a&gt;. Here is the link of &lt;a href=&quot;https://github.com/yular/CCplusplus-Project/blob/master/Timus/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Solution List&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The problems are categoried by the algorithm solution types. Of course some problems will have different solutions. So please do not think that the solution provided is the only one for a given problem.&lt;/p&gt;
&lt;p&gt;Later may create summary of different kinds of algorithm problem solution.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the solution list of some of the algorithm problems in &lt;a href=&quot;http://acm.timus.ru/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Timus Online
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://yular.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Java Summary IV</title>
    <link href="http://yular.github.io/2018/01/22/Java-Summary-IV/"/>
    <id>http://yular.github.io/2018/01/22/Java-Summary-IV/</id>
    <published>2018-01-22T09:38:19.000Z</published>
    <updated>2018-01-22T09:38:33.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Programming in Lua 4th Edition I</title>
    <link href="http://yular.github.io/2018/01/20/Reading-Note-of-Programming-in-Lua-4th-Edition/"/>
    <id>http://yular.github.io/2018/01/20/Reading-Note-of-Programming-in-Lua-4th-Edition/</id>
    <published>2018-01-21T01:32:04.000Z</published>
    <updated>2018-01-29T02:11:08.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Basic&quot;&gt;&lt;a href=&quot;#Basic&quot; class=&quot;headerlink&quot; title=&quot;Basic&quot;&gt;&lt;/a&gt;Basic&lt;/h3&gt;&lt;h4 id=&quot;Stand-Alone-Interpreter&quot;&gt;&lt;a href=&quot;#Stand-Alone-Interpreter&quot; class=&quot;headerlink&quot; title=&quot;Stand-Alone Interpreter&quot;&gt;&lt;/a&gt;Stand-Alone Interpreter&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Useful Lua idiom&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x = x or v&lt;/code&gt; is equivalent to &lt;code&gt;if not x then x = v end&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;((a and b)or c) is equivalent to C expression&lt;/code&gt;a?b:c`.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Arithmetic-Operators&quot;&gt;&lt;a href=&quot;#Arithmetic-Operators&quot; class=&quot;headerlink&quot; title=&quot;Arithmetic Operators&quot;&gt;&lt;/a&gt;Arithmetic Operators&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Division&lt;ul&gt;
&lt;li&gt;float division is &lt;code&gt;/&lt;/code&gt;, which is the same as other programming lanuage.&lt;/li&gt;
&lt;li&gt;integer division is &lt;code&gt;//&lt;/code&gt;, which is called “floor division”.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Strings&quot;&gt;&lt;a href=&quot;#Strings&quot; class=&quot;headerlink&quot; title=&quot;Strings&quot;&gt;&lt;/a&gt;Strings&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Strings in Lua are immutable values.&lt;/li&gt;
&lt;li&gt;Strings in Lua are subject to automatic memory management, like all other Lua objects (table, functions, etc).&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;..&lt;/code&gt; to concatenate two strings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Any numeric operation applied to a string tries to convert the string to a number. This coersion is also applied in other places that expect a number, such as the argument to &lt;code&gt;math.sin&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Tables&quot;&gt;&lt;a href=&quot;#Tables&quot; class=&quot;headerlink&quot; title=&quot;Tables&quot;&gt;&lt;/a&gt;Tables&lt;/h3&gt;&lt;h4 id=&quot;Safe-Navigation&quot;&gt;&lt;a href=&quot;#Safe-Navigation&quot; class=&quot;headerlink&quot; title=&quot;Safe Navigation&quot;&gt;&lt;/a&gt;Safe Navigation&lt;/h4&gt;&lt;p&gt;To know whether a given function from a given library is present, use this statement: &lt;code&gt;res = lib?.object1?.object2?.function&lt;/code&gt; or &lt;code&gt;res = (((lib or {}).object1 or {}).object2 or {}).function&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;Libraries&quot;&gt;&lt;a href=&quot;#Libraries&quot; class=&quot;headerlink&quot; title=&quot;Libraries&quot;&gt;&lt;/a&gt;Libraries&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;table.insert: insert an element in a given position of a sequence.&lt;/li&gt;
&lt;li&gt;table.remove: removes and returns an element from the given position in a sequence.&lt;/li&gt;
&lt;li&gt;table.move: moves the elements in table a from index f until e (both inclusive) to position t or another table.&lt;/li&gt;
&lt;li&gt;table.pack: receive any number of arguments and returns a new table with all its arguments (just like {…}).&lt;/li&gt;
&lt;li&gt;table.unpack: transform a real Lua list (a table) into a return list, which can be given as the parameter list to another function.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Functions&quot;&gt;&lt;a href=&quot;#Functions&quot; class=&quot;headerlink&quot; title=&quot;Functions&quot;&gt;&lt;/a&gt;Functions&lt;/h3&gt;&lt;h4 id=&quot;Generic&quot;&gt;&lt;a href=&quot;#Generic&quot; class=&quot;headerlink&quot; title=&quot;Generic&quot;&gt;&lt;/a&gt;Generic&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Return multiple results from a function: &lt;code&gt;return res1, res2, res3&lt;/code&gt;. And a statement like &lt;code&gt;return (f(x))&lt;/code&gt; always returns one single value.&lt;/li&gt;
&lt;li&gt;Variadic function, taking a variable number of arguments, uses three dots(…) in the parameter list:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function func(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   do sth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Tail-Calls&quot;&gt;&lt;a href=&quot;#Tail-Calls&quot; class=&quot;headerlink&quot; title=&quot;Tail Calls&quot;&gt;&lt;/a&gt;Tail Calls&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Lua does tail-call elimination. So in following code:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function f(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	x = x + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return g(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;When g returns, control will return directly to the point calling f, and thus, do not use any extra stack space when doing a tail call.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;IO&quot;&gt;&lt;a href=&quot;#IO&quot; class=&quot;headerlink&quot; title=&quot;IO&quot;&gt;&lt;/a&gt;IO&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;io.read: read strings from current input stream. The input parameter includes &lt;code&gt;&amp;quot;a&amp;quot;, &amp;quot;l&amp;quot;, &amp;quot;L&amp;quot;, &amp;quot;n&amp;quot; and number&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;io.write: write strings to current output stream. Use &lt;code&gt;string.format&lt;/code&gt; for full control over the numbers to strings conversion.&lt;/li&gt;
&lt;li&gt;io.open: open a file.&lt;/li&gt;
&lt;li&gt;io.flush: flush the current output stream.&lt;/li&gt;
&lt;li&gt;io.popen: runs a system command and connects the command output (or input) to a new local stream and returns that stream.&lt;/li&gt;
&lt;li&gt;os.exit: terminates the execution of a program.&lt;/li&gt;
&lt;li&gt;os.getenv: gets the value of an environment variable. ex: &lt;code&gt;os.getenv(&amp;quot;HOME&amp;quot;)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;os.execute: runs a system command.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Variable-and-Control-Structure&quot;&gt;&lt;a href=&quot;#Variable-and-Control-Structure&quot; class=&quot;headerlink&quot; title=&quot;Variable and Control Structure&quot;&gt;&lt;/a&gt;Variable and Control Structure&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Lua treats all values (including 0 and empty string) as true except false and nil.&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Basic&quot;&gt;&lt;a href=&quot;#Basic&quot; class=&quot;headerlink&quot; title=&quot;Basic&quot;&gt;&lt;/a&gt;Basic&lt;/h3&gt;&lt;h4 id=&quot;Stand-Alone-Interpreter&quot;&gt;&lt;a href=&quot;#Stand-Alone-Interp
    
    </summary>
    
    
      <category term="Lua" scheme="http://yular.github.io/tags/Lua/"/>
    
  </entry>
  
  <entry>
    <title>Java Summary III</title>
    <link href="http://yular.github.io/2018/01/16/Java-Summary-III/"/>
    <id>http://yular.github.io/2018/01/16/Java-Summary-III/</id>
    <published>2018-01-17T06:01:59.000Z</published>
    <updated>2018-01-17T06:02:09.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java Summary II</title>
    <link href="http://yular.github.io/2018/01/16/Java-Summary-II-1/"/>
    <id>http://yular.github.io/2018/01/16/Java-Summary-II-1/</id>
    <published>2018-01-17T06:01:19.000Z</published>
    <updated>2018-01-17T06:01:19.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Advanced Encryption Standard (AES) Summary</title>
    <link href="http://yular.github.io/2018/01/09/Advanced-Encryption-Standard-AES-Summary/"/>
    <id>http://yular.github.io/2018/01/09/Advanced-Encryption-Standard-AES-Summary/</id>
    <published>2018-01-09T08:28:35.000Z</published>
    <updated>2018-01-09T08:41:38.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Overiew&quot;&gt;&lt;a href=&quot;#Overiew&quot; class=&quot;headerlink&quot; title=&quot;Overiew&quot;&gt;&lt;/a&gt;Overiew&lt;/h3&gt;&lt;p&gt;Here is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Wikipedia link of AES&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Different-Modes-of-AES&quot;&gt;&lt;a href=&quot;#Different-Modes-of-AES&quot; class=&quot;headerlink&quot; title=&quot;Different Modes of AES&quot;&gt;&lt;/a&gt;Different Modes of AES&lt;/h3&gt;&lt;h4 id=&quot;ECB&quot;&gt;&lt;a href=&quot;#ECB&quot; class=&quot;headerlink&quot; title=&quot;ECB&quot;&gt;&lt;/a&gt;ECB&lt;/h4&gt;&lt;h4 id=&quot;PCBC&quot;&gt;&lt;a href=&quot;#PCBC&quot; class=&quot;headerlink&quot; title=&quot;PCBC&quot;&gt;&lt;/a&gt;PCBC&lt;/h4&gt;&lt;h4 id=&quot;CFB&quot;&gt;&lt;a href=&quot;#CFB&quot; class=&quot;headerlink&quot; title=&quot;CFB&quot;&gt;&lt;/a&gt;CFB&lt;/h4&gt;&lt;h4 id=&quot;OFB&quot;&gt;&lt;a href=&quot;#OFB&quot; class=&quot;headerlink&quot; title=&quot;OFB&quot;&gt;&lt;/a&gt;OFB&lt;/h4&gt;&lt;h4 id=&quot;CTR&quot;&gt;&lt;a href=&quot;#CTR&quot; class=&quot;headerlink&quot; title=&quot;CTR&quot;&gt;&lt;/a&gt;CTR&lt;/h4&gt;&lt;h4 id=&quot;CBC&quot;&gt;&lt;a href=&quot;#CBC&quot; class=&quot;headerlink&quot; title=&quot;CBC&quot;&gt;&lt;/a&gt;CBC&lt;/h4&gt;&lt;h4 id=&quot;GCM&quot;&gt;&lt;a href=&quot;#GCM&quot; class=&quot;headerlink&quot; title=&quot;GCM&quot;&gt;&lt;/a&gt;GCM&lt;/h4&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Overiew&quot;&gt;&lt;a href=&quot;#Overiew&quot; class=&quot;headerlink&quot; title=&quot;Overiew&quot;&gt;&lt;/a&gt;Overiew&lt;/h3&gt;&lt;p&gt;Here is the &lt;a href=&quot;https://en.wikipedia.org/wiki
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://yular.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of How To Win Friends and Influence People</title>
    <link href="http://yular.github.io/2018/01/06/Reading-Note-of-How-To-Win-Friends-and-Influence-People/"/>
    <id>http://yular.github.io/2018/01/06/Reading-Note-of-How-To-Win-Friends-and-Influence-People/</id>
    <published>2018-01-06T22:48:54.000Z</published>
    <updated>2018-01-06T22:49:17.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Life" scheme="http://yular.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Code Complete V</title>
    <link href="http://yular.github.io/2017/12/26/Reading-Note-of-Code-Complete-V/"/>
    <id>http://yular.github.io/2017/12/26/Reading-Note-of-Code-Complete-V/</id>
    <published>2017-12-26T09:21:51.000Z</published>
    <updated>2017-12-26T09:22:17.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Software Development" scheme="http://yular.github.io/tags/Software-Development/"/>
    
  </entry>
  
  <entry>
    <title>Java Summary II</title>
    <link href="http://yular.github.io/2017/12/23/Java-Summary-II/"/>
    <id>http://yular.github.io/2017/12/23/Java-Summary-II/</id>
    <published>2017-12-24T06:22:42.000Z</published>
    <updated>2018-01-17T06:01:41.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java Summary I</title>
    <link href="http://yular.github.io/2017/12/22/Java-Summary-I/"/>
    <id>http://yular.github.io/2017/12/22/Java-Summary-I/</id>
    <published>2017-12-22T22:46:37.000Z</published>
    <updated>2017-12-22T22:46:45.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Code Complete IV</title>
    <link href="http://yular.github.io/2017/12/11/Reading-Note-of-Code-Complete-IV/"/>
    <id>http://yular.github.io/2017/12/11/Reading-Note-of-Code-Complete-IV/</id>
    <published>2017-12-11T08:22:46.000Z</published>
    <updated>2017-12-11T08:23:17.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Software Development" scheme="http://yular.github.io/tags/Software-Development/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Clean Code</title>
    <link href="http://yular.github.io/2017/12/03/Reading-Note-of-Clean-Code/"/>
    <id>http://yular.github.io/2017/12/03/Reading-Note-of-Clean-Code/</id>
    <published>2017-12-03T21:34:25.000Z</published>
    <updated>2017-12-03T21:38:12.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Software Development" scheme="http://yular.github.io/tags/Software-Development/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Code Complete III</title>
    <link href="http://yular.github.io/2017/12/03/Reading-Note-of-Code-Complete-III/"/>
    <id>http://yular.github.io/2017/12/03/Reading-Note-of-Code-Complete-III/</id>
    <published>2017-12-03T21:22:27.000Z</published>
    <updated>2017-12-03T21:24:37.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Software Development" scheme="http://yular.github.io/tags/Software-Development/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Code Complete II</title>
    <link href="http://yular.github.io/2017/12/03/Reading-Note-of-Code-Complete-II/"/>
    <id>http://yular.github.io/2017/12/03/Reading-Note-of-Code-Complete-II/</id>
    <published>2017-12-03T21:22:21.000Z</published>
    <updated>2017-12-03T21:24:28.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Software Development" scheme="http://yular.github.io/tags/Software-Development/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Code Complete I</title>
    <link href="http://yular.github.io/2017/12/03/Reading-Note-of-Code-Complete-I/"/>
    <id>http://yular.github.io/2017/12/03/Reading-Note-of-Code-Complete-I/</id>
    <published>2017-12-03T21:22:17.000Z</published>
    <updated>2018-01-22T09:51:10.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the summary of the book &lt;code&gt;Code Complete&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h3&gt;&lt;h4 id=&quot;Definition&quot;&gt;&lt;a href=&quot;#Definition&quot; class=&quot;headerlink&quot; title=&quot;Definition&quot;&gt;&lt;/a&gt;Definition&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Problem Definition: A problem definition defines what the problem is without any reference to possible solutions. The problem definition should be in user language, and described from a useras point of view. &lt;/li&gt;
&lt;li&gt;Requirement: Requirements describe in detail what a software system is supposed to do, and they are the first step toward a solution.&lt;/li&gt;
&lt;li&gt;Data Design: Data should be normally accessed directly by only one subsystem or class, except through access classes or routines allowing access to the data in controlled and abstract ways.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Basic&quot;&gt;&lt;a href=&quot;#Basic&quot; class=&quot;headerlink&quot; title=&quot;Basic&quot;&gt;&lt;/a&gt;Basic&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Marjor classes: 20% of the classes make up 80% of the system behaviour.&lt;/li&gt;
&lt;li&gt;Things to do to make the best of changing requirements during construction:&lt;ul&gt;
&lt;li&gt;Use the requirements checklist to access the quality of requirement.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the summary of the book &lt;code&gt;Code Complete&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;I
    
    </summary>
    
    
      <category term="Software Development" scheme="http://yular.github.io/tags/Software-Development/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Java Concurrency in Practice IV</title>
    <link href="http://yular.github.io/2017/11/13/Reading-Note-of-Java-Concurrency-in-Practice-IV/"/>
    <id>http://yular.github.io/2017/11/13/Reading-Note-of-Java-Concurrency-in-Practice-IV/</id>
    <published>2017-11-13T08:59:24.000Z</published>
    <updated>2017-11-13T08:59:36.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Java Concurrency in Practice III</title>
    <link href="http://yular.github.io/2017/11/05/Reading-Note-of-Java-Concurrency-in-Practice-III/"/>
    <id>http://yular.github.io/2017/11/05/Reading-Note-of-Java-Concurrency-in-Practice-III/</id>
    <published>2017-11-06T07:25:12.000Z</published>
    <updated>2017-11-06T07:25:24.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
</feed>
