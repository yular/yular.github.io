<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YBC HomePage</title>
  <subtitle>Study~ Work~ Life~ Everything is here~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yular.github.io/"/>
  <updated>2017-09-11T08:57:16.000Z</updated>
  <id>http://yular.github.io/</id>
  
  <author>
    <name>BaiChuan Yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Aspect Oriented Programming</title>
    <link href="http://yular.github.io/2017/09/11/Aspect-Oriented-Programming/"/>
    <id>http://yular.github.io/2017/09/11/Aspect-Oriented-Programming/</id>
    <published>2017-09-11T08:51:57.000Z</published>
    <updated>2017-09-11T08:57:16.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is &lt;a href=&quot;https://en.wikipedia.org/wiki/Aspect-oriented_programming&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Aspect-oriented programming in Wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aspect-oriented programming (AOP) is a programming paradigm that aims to increase modularity by allowing the separation of cross-cutting concerns. It does so by adding additional behavior to existing code (an advice) without modifying the code itself, instead separately specifying which code is modified via a “pointcut” specification, such as “log all function calls when the function’s name begins with ‘set’”. This allows behaviors that are not central to the business logic (such as logging) to be added to a program without cluttering the code, core to the functionality. AOP forms a basis for aspect-oriented software development.&lt;/p&gt;
&lt;p&gt;Note that AOP usually uses &lt;a href=&quot;http://yular.github.io/2017/09/10/Proxy-Pattern-In-Java/&quot;&gt;Proxy Pattern&lt;/a&gt; in its implementation.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is &lt;a href=&quot;https://en.wikipedia.org/wiki/Aspect-oriented_programming&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Aspect-oriented programming in
    
    </summary>
    
    
      <category term="Design Pattern" scheme="http://yular.github.io/tags/Design-Pattern/"/>
    
  </entry>
  
  <entry>
    <title>Proxy Pattern (In Java)</title>
    <link href="http://yular.github.io/2017/09/10/Proxy-Pattern-In-Java/"/>
    <id>http://yular.github.io/2017/09/10/Proxy-Pattern-In-Java/</id>
    <published>2017-09-11T00:02:49.000Z</published>
    <updated>2017-09-11T01:31:17.000Z</updated>
    
    <content type="html">&lt;p&gt;See the meaning of &lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Proxy in Wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As we know, when we visit a web service, we may not directly get the access of the hosts where the service is deployed but the hosts which sends the same or reasonable response as the service does. And those hosts are proxies.&lt;/p&gt;
&lt;p&gt;So in the design pattern, proxy pattern uses the similar mechanism. A class (proxy class) represents the functionality of the other class. Proxy class implements or extends the same interface or abstract class as the class proxied does, and proxy instance contains the instance proxied.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy_pattern&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Proxy Pattern in Wikipedia&lt;/a&gt;. The diagram there can help to understand the structure of this design pattern.&lt;/p&gt;
&lt;p&gt;Here is some sample code about Proxy Pattern.&lt;/p&gt;
&lt;h3 id=&quot;Sample-Code&quot;&gt;&lt;a href=&quot;#Sample-Code&quot; class=&quot;headerlink&quot; title=&quot;Sample Code&quot;&gt;&lt;/a&gt;Sample Code&lt;/h3&gt;&lt;p&gt;Here is the link of below &lt;a href=&quot;https://github.com/yular/Java-CodeLibrary/tree/master/DesignPattern/ProxyPattern/src/com/yulartech/designpattern/proxypattern&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sample code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Firt of all, here is the service interface:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.designpattern.proxypattern;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public interface ImageService &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void showImage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Then the real image service and proxy image service must implement this interface.&lt;/p&gt;
&lt;p&gt;Real image service source code is below:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.designpattern.proxypattern;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class RealImageService implements ImageService &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String imageFileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RealImageService(String imageFileName)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.imageFileName = imageFileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        upLoadImage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private void upLoadImage() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final String msg = String.format(&amp;quot;Successfully upload image %s to the service.&amp;quot;, imageFileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void showImage() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final String msg = String.format(&amp;quot;Show the image %s.&amp;quot;, imageFileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Proxy image service source code is below:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.designpattern.proxypattern;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class ProxyImageService implements ImageService&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private RealImageService realImageService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String imageFileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private boolean isImageCached;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public ProxyImageService(String imageFileName)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.imageFileName = imageFileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.isImageCached = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void showImage() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (realImageService == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            realImageService = new RealImageService(imageFileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (isImageCached) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            final String msg = String.format(&amp;quot;Get image %s from cache in proxy. &amp;quot;, imageFileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.print(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        realImageService.showImage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cacheImageInProxy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private void cacheImageInProxy() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isImageCached = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;At last, implement a Main class to run the demo:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.yulartech.designpattern.proxypattern;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class Main &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void main(String[] args)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String imageFileName = &amp;quot;test-image.png&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ProxyImageService proxyImageService = new ProxyImageService(imageFileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //Show image from actual service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxyImageService.showImage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //Show image from proxy service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxyImageService.showImage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And if everything goes well, output should be:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Successfully upload image test-image.png to the service.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Show the image test-image.png.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Get image test-image.png from cache in proxy. Show the image test-image.png.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;That means we can retrieve images from proxy in cache instead of actual image service: Proxy class just represents the functionality of the other class.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;See the meaning of &lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Proxy in Wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As we know
    
    </summary>
    
    
      <category term="Design Pattern" scheme="http://yular.github.io/tags/Design-Pattern/"/>
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Effective Java I</title>
    <link href="http://yular.github.io/2017/09/07/Reading-Note-of-Effective-Java-I/"/>
    <id>http://yular.github.io/2017/09/07/Reading-Note-of-Effective-Java-I/</id>
    <published>2017-09-07T08:00:28.000Z</published>
    <updated>2017-09-11T08:26:19.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Item-1-Consider-static-factory-methods-instead-of-constructors&quot;&gt;&lt;a href=&quot;#Item-1-Consider-static-factory-methods-instead-of-constructors&quot; class=&quot;headerlink&quot; title=&quot;Item 1. Consider static factory methods instead of constructors&quot;&gt;&lt;/a&gt;Item 1. Consider static factory methods instead of constructors&lt;/h3&gt;&lt;p&gt;Static factory method, which is different from regular factory pattern. With a well-chosen name is easier to use and the resulting client code easier to read. Not required to create a new object each time they are invoked, singleton factory for example. Can return an object of any subtype of their return type. Requires the client to refer to the returned object by its interface rather than its implementation class, which is generally good practice. Reduce the verbosity of creating parameterized type instances.&lt;/p&gt;
&lt;p&gt;But this pattern has some disadvantages. Main disadvantage is that classes without public or protected constructors cannot be subclassed. They are not readily distinguishable from other static methods.&lt;/p&gt;
&lt;h3 id=&quot;Item-2-Consider-a-builder-when-faced-with-many-constructor-parameters&quot;&gt;&lt;a href=&quot;#Item-2-Consider-a-builder-when-faced-with-many-constructor-parameters&quot; class=&quot;headerlink&quot; title=&quot;Item 2. Consider a builder when faced with many constructor parameters.&quot;&gt;&lt;/a&gt;Item 2. Consider a builder when faced with many constructor parameters.&lt;/h3&gt;&lt;p&gt;Builder is a static class.&lt;/p&gt;
&lt;p&gt;The main disadvantage of a builder is that cost of creating builder is unlikely to be noticeable.&lt;/p&gt;
&lt;h3 id=&quot;Item-3-Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type&quot;&gt;&lt;a href=&quot;#Item-3-Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type&quot; class=&quot;headerlink&quot; title=&quot;Item 3. Enforce the singleton property with a private constructor or an enum type.&quot;&gt;&lt;/a&gt;Item 3. Enforce the singleton property with a private constructor or an enum type.&lt;/h3&gt;&lt;p&gt;Making a class a singleton can make it difficult to test its clients as it is impossible for mocking unless an interface is provided.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Item-1-Consider-static-factory-methods-instead-of-constructors&quot;&gt;&lt;a href=&quot;#Item-1-Consider-static-factory-methods-instead-of-construc
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Java in a Nutshell</title>
    <link href="http://yular.github.io/2017/09/07/Reading-Note-of-Java-in-a-Nutshell/"/>
    <id>http://yular.github.io/2017/09/07/Reading-Note-of-Java-in-a-Nutshell/</id>
    <published>2017-09-07T07:48:01.000Z</published>
    <updated>2017-09-07T07:48:01.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux Text Processing Command I</title>
    <link href="http://yular.github.io/2017/09/04/Linux-Text-Processing-Command-I/"/>
    <id>http://yular.github.io/2017/09/04/Linux-Text-Processing-Command-I/</id>
    <published>2017-09-05T05:21:45.000Z</published>
    <updated>2017-09-05T05:50:50.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;sort&quot;&gt;&lt;a href=&quot;#sort&quot; class=&quot;headerlink&quot; title=&quot;sort&quot;&gt;&lt;/a&gt;sort&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;File sort utility, often used as a filter in a pipe.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;tsort&quot;&gt;&lt;a href=&quot;#tsort&quot; class=&quot;headerlink&quot; title=&quot;tsort&quot;&gt;&lt;/a&gt;tsort&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Topological sort.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;uniq&quot;&gt;&lt;a href=&quot;#uniq&quot; class=&quot;headerlink&quot; title=&quot;uniq&quot;&gt;&lt;/a&gt;uniq&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Remove duplicate lines from a sorted file.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;expand-unexpand&quot;&gt;&lt;a href=&quot;#expand-unexpand&quot; class=&quot;headerlink&quot; title=&quot;expand, unexpand&quot;&gt;&lt;/a&gt;expand, unexpand&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;expand: a filter converting tabs to spaces. Ofen used in a pipe.&lt;/li&gt;
&lt;li&gt;unexpand: reverse effect of expand.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;cut&quot;&gt;&lt;a href=&quot;#cut&quot; class=&quot;headerlink&quot; title=&quot;cut&quot;&gt;&lt;/a&gt;&lt;strong&gt;cut&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Widely used for text processing.&lt;/li&gt;
&lt;li&gt;A tool for extracting fields from files. Can be used in a pipe.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;paste&quot;&gt;&lt;a href=&quot;#paste&quot; class=&quot;headerlink&quot; title=&quot;paste&quot;&gt;&lt;/a&gt;&lt;strong&gt;paste&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Tool for merging together different files into a single, multi-column file.&lt;/li&gt;
&lt;li&gt;When combining with &lt;code&gt;cut&lt;/code&gt;, useful for creating system log files.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;join&quot;&gt;&lt;a href=&quot;#join&quot; class=&quot;headerlink&quot; title=&quot;join&quot;&gt;&lt;/a&gt;&lt;strong&gt;join&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Tool for merging two files in a meaningful fashion, creating a simple version of relational database.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;head&quot;&gt;&lt;a href=&quot;#head&quot; class=&quot;headerlink&quot; title=&quot;head&quot;&gt;&lt;/a&gt;&lt;strong&gt;head&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Lists the begining of a file to &lt;code&gt;stdout&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;tail&quot;&gt;&lt;a href=&quot;#tail&quot; class=&quot;headerlink&quot; title=&quot;tail&quot;&gt;&lt;/a&gt;&lt;strong&gt;tail&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;List the end of a file to &lt;code&gt;stdout&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;With &lt;code&gt;-f&lt;/code&gt; option, useful for monitoring system.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;grep&quot;&gt;&lt;a href=&quot;#grep&quot; class=&quot;headerlink&quot; title=&quot;grep&quot;&gt;&lt;/a&gt;&lt;strong&gt;grep&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;A multi-purpose file search tool that uses Regular Expressions.&lt;/li&gt;
&lt;li&gt;Command pattern: grep pattern [files …]&lt;/li&gt;
&lt;li&gt;Very useful in pipe.&lt;/li&gt;
&lt;li&gt;-i: a case sensitive search.&lt;/li&gt;
&lt;li&gt;-w: matches only whole words.&lt;/li&gt;
&lt;li&gt;-r: searches files recursively.&lt;/li&gt;
&lt;li&gt;-n: lists the matching lines.&lt;/li&gt;
&lt;li&gt;-v: filters out matches.&lt;/li&gt;
&lt;li&gt;-c: gives a numerical count of matches.&lt;/li&gt;
&lt;li&gt;–color: marks the matching string in color.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;agrep&quot;&gt;&lt;a href=&quot;#agrep&quot; class=&quot;headerlink&quot; title=&quot;agrep&quot;&gt;&lt;/a&gt;&lt;strong&gt;agrep&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Approximate grep, extending the capabilities of &lt;code&gt;grep&lt;/code&gt; to approximate matching.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;look&quot;&gt;&lt;a href=&quot;#look&quot; class=&quot;headerlink&quot; title=&quot;look&quot;&gt;&lt;/a&gt;look&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Works like &lt;code&gt;grep&lt;/code&gt;, but does a look up on a “dictionary”, a sorted word list in &lt;code&gt;/usr/dict/words&lt;/code&gt; by default.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;sed&quot;&gt;&lt;a href=&quot;#sed&quot; class=&quot;headerlink&quot; title=&quot;sed&quot;&gt;&lt;/a&gt;&lt;strong&gt;sed&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Non-interactive stream editor, permitting using many ex commands in batch mode.&lt;/li&gt;
&lt;li&gt;Useful in shell scripts and pipe.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;awk&quot;&gt;&lt;a href=&quot;#awk&quot; class=&quot;headerlink&quot; title=&quot;awk&quot;&gt;&lt;/a&gt;&lt;strong&gt;awk&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Programmable file extractor and formatter, good for manipulating and/or extracting fields(columns) in structured text files. Has syntax similar to C.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;wc&quot;&gt;&lt;a href=&quot;#wc&quot; class=&quot;headerlink&quot; title=&quot;wc&quot;&gt;&lt;/a&gt;wc&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Give a “word count” on a file or I/O stream.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;tr&quot;&gt;&lt;a href=&quot;#tr&quot; class=&quot;headerlink&quot; title=&quot;tr&quot;&gt;&lt;/a&gt;&lt;strong&gt;tr&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Character translation filter.&lt;/li&gt;
&lt;li&gt;Must use quoting and/or brackets as appropriate.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;fold&quot;&gt;&lt;a href=&quot;#fold&quot; class=&quot;headerlink&quot; title=&quot;fold&quot;&gt;&lt;/a&gt;fold&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;A filter that wraps lines of input to a specified width.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;fmt&quot;&gt;&lt;a href=&quot;#fmt&quot; class=&quot;headerlink&quot; title=&quot;fmt&quot;&gt;&lt;/a&gt;fmt&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Simple-minded file formatter, used as a filter in a pipe to wrap long lines of text output.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;col&quot;&gt;&lt;a href=&quot;#col&quot; class=&quot;headerlink&quot; title=&quot;col&quot;&gt;&lt;/a&gt;col&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;column&quot;&gt;&lt;a href=&quot;#column&quot; class=&quot;headerlink&quot; title=&quot;column&quot;&gt;&lt;/a&gt;column&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Column formatter.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;colrm&quot;&gt;&lt;a href=&quot;#colrm&quot; class=&quot;headerlink&quot; title=&quot;colrm&quot;&gt;&lt;/a&gt;colrm&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Column removal filter.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;nl&quot;&gt;&lt;a href=&quot;#nl&quot; class=&quot;headerlink&quot; title=&quot;nl&quot;&gt;&lt;/a&gt;nl&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Line numbering filter.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;pr&quot;&gt;&lt;a href=&quot;#pr&quot; class=&quot;headerlink&quot; title=&quot;pr&quot;&gt;&lt;/a&gt;pr&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Print formatting filter.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;gettext&quot;&gt;&lt;a href=&quot;#gettext&quot; class=&quot;headerlink&quot; title=&quot;gettext&quot;&gt;&lt;/a&gt;gettext&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;A set of utilities for localizing and translating the text output of programs into foreign languages.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;msgfmt&quot;&gt;&lt;a href=&quot;#msgfmt&quot; class=&quot;headerlink&quot; title=&quot;msgfmt&quot;&gt;&lt;/a&gt;msgfmt&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;iconv&quot;&gt;&lt;a href=&quot;#iconv&quot; class=&quot;headerlink&quot; title=&quot;iconv&quot;&gt;&lt;/a&gt;iconv&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;recode&quot;&gt;&lt;a href=&quot;#recode&quot; class=&quot;headerlink&quot; title=&quot;recode&quot;&gt;&lt;/a&gt;recode&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;TeX-gs&quot;&gt;&lt;a href=&quot;#TeX-gs&quot; class=&quot;headerlink&quot; title=&quot;TeX,gs&quot;&gt;&lt;/a&gt;TeX,gs&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;texexec&quot;&gt;&lt;a href=&quot;#texexec&quot; class=&quot;headerlink&quot; title=&quot;texexec&quot;&gt;&lt;/a&gt;texexec&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;enscript&quot;&gt;&lt;a href=&quot;#enscript&quot; class=&quot;headerlink&quot; title=&quot;enscript&quot;&gt;&lt;/a&gt;enscript&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;groff-tbl-eqn&quot;&gt;&lt;a href=&quot;#groff-tbl-eqn&quot; class=&quot;headerlink&quot; title=&quot;groff, tbl, eqn&quot;&gt;&lt;/a&gt;groff, tbl, eqn&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;lex-yacc&quot;&gt;&lt;a href=&quot;#lex-yacc&quot; class=&quot;headerlink&quot; title=&quot;lex, yacc&quot;&gt;&lt;/a&gt;lex, yacc&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Lexical analyzer commands.&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;sort&quot;&gt;&lt;a href=&quot;#sort&quot; class=&quot;headerlink&quot; title=&quot;sort&quot;&gt;&lt;/a&gt;sort&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;File sort utility, often used as a filter in a pipe.&lt;/li
    
    </summary>
    
    
      <category term="Linux" scheme="http://yular.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux System and Adminstrative Commands V</title>
    <link href="http://yular.github.io/2017/09/04/Linux-System-and-Adminstrative-Commands-V/"/>
    <id>http://yular.github.io/2017/09/04/Linux-System-and-Adminstrative-Commands-V/</id>
    <published>2017-09-05T05:11:11.000Z</published>
    <updated>2017-09-05T05:18:04.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;System-Resources&quot;&gt;&lt;a href=&quot;#System-Resources&quot; class=&quot;headerlink&quot; title=&quot;System Resources&quot;&gt;&lt;/a&gt;System Resources&lt;/h2&gt;&lt;h3 id=&quot;ulimit&quot;&gt;&lt;a href=&quot;#ulimit&quot; class=&quot;headerlink&quot; title=&quot;ulimit&quot;&gt;&lt;/a&gt;ulimit&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Set an upper limit on use of system resources.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;quota&quot;&gt;&lt;a href=&quot;#quota&quot; class=&quot;headerlink&quot; title=&quot;quota&quot;&gt;&lt;/a&gt;quota&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Display user or group disk quota.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;setquota&quot;&gt;&lt;a href=&quot;#setquota&quot; class=&quot;headerlink&quot; title=&quot;setquota&quot;&gt;&lt;/a&gt;setquota&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Set user or group disk quotas from command-line.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;umask&quot;&gt;&lt;a href=&quot;#umask&quot; class=&quot;headerlink&quot; title=&quot;umask&quot;&gt;&lt;/a&gt;umask&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;User file creation permission mask.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;rdev&quot;&gt;&lt;a href=&quot;#rdev&quot; class=&quot;headerlink&quot; title=&quot;rdev&quot;&gt;&lt;/a&gt;rdev&lt;/h3&gt;&lt;h2 id=&quot;Module&quot;&gt;&lt;a href=&quot;#Module&quot; class=&quot;headerlink&quot; title=&quot;Module&quot;&gt;&lt;/a&gt;Module&lt;/h2&gt;&lt;h3 id=&quot;lsmod&quot;&gt;&lt;a href=&quot;#lsmod&quot; class=&quot;headerlink&quot; title=&quot;lsmod&quot;&gt;&lt;/a&gt;lsmod&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;List installed kernel modules.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;insmod&quot;&gt;&lt;a href=&quot;#insmod&quot; class=&quot;headerlink&quot; title=&quot;insmod&quot;&gt;&lt;/a&gt;insmod&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Force installation of a kernel module.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;rmmod&quot;&gt;&lt;a href=&quot;#rmmod&quot; class=&quot;headerlink&quot; title=&quot;rmmod&quot;&gt;&lt;/a&gt;rmmod&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;modprobe&quot;&gt;&lt;a href=&quot;#modprobe&quot; class=&quot;headerlink&quot; title=&quot;modprobe&quot;&gt;&lt;/a&gt;modprobe&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Module loader that is normally invoked automatically in a startup script.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;depmod&quot;&gt;&lt;a href=&quot;#depmod&quot; class=&quot;headerlink&quot; title=&quot;depmod&quot;&gt;&lt;/a&gt;depmod&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Creates module dependency file.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;modinfo&quot;&gt;&lt;a href=&quot;#modinfo&quot; class=&quot;headerlink&quot; title=&quot;modinfo&quot;&gt;&lt;/a&gt;modinfo&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Output information about a loadable module.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Miscellaneous&quot;&gt;&lt;a href=&quot;#Miscellaneous&quot; class=&quot;headerlink&quot; title=&quot;Miscellaneous&quot;&gt;&lt;/a&gt;Miscellaneous&lt;/h2&gt;&lt;h3 id=&quot;env&quot;&gt;&lt;a href=&quot;#env&quot; class=&quot;headerlink&quot; title=&quot;env&quot;&gt;&lt;/a&gt;env&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Runs a program or script with certain environmental variables set or changed without changing the overall system environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;ldd&quot;&gt;&lt;a href=&quot;#ldd&quot; class=&quot;headerlink&quot; title=&quot;ldd&quot;&gt;&lt;/a&gt;ldd&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;watch&quot;&gt;&lt;a href=&quot;#watch&quot; class=&quot;headerlink&quot; title=&quot;watch&quot;&gt;&lt;/a&gt;watch&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Run a command repeatedly at specified time intervals.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;strip&quot;&gt;&lt;a href=&quot;#strip&quot; class=&quot;headerlink&quot; title=&quot;strip&quot;&gt;&lt;/a&gt;strip&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;nm&quot;&gt;&lt;a href=&quot;#nm&quot; class=&quot;headerlink&quot; title=&quot;nm&quot;&gt;&lt;/a&gt;nm&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;xrandr&quot;&gt;&lt;a href=&quot;#xrandr&quot; class=&quot;headerlink&quot; title=&quot;xrandr&quot;&gt;&lt;/a&gt;xrandr&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;rdist&quot;&gt;&lt;a href=&quot;#rdist&quot; class=&quot;headerlink&quot; title=&quot;rdist&quot;&gt;&lt;/a&gt;rdist&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;System-Resources&quot;&gt;&lt;a href=&quot;#System-Resources&quot; class=&quot;headerlink&quot; title=&quot;System Resources&quot;&gt;&lt;/a&gt;System Resources&lt;/h2&gt;&lt;h3 id=&quot;ulimit&quot;&gt;&lt;
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Linux System and Adminstrative Commands IV</title>
    <link href="http://yular.github.io/2017/09/04/Linux-System-and-Adminstrative-Commands-IV/"/>
    <id>http://yular.github.io/2017/09/04/Linux-System-and-Adminstrative-Commands-IV/</id>
    <published>2017-09-05T02:40:54.000Z</published>
    <updated>2017-09-05T05:10:12.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Network&quot;&gt;&lt;a href=&quot;#Network&quot; class=&quot;headerlink&quot; title=&quot;Network&quot;&gt;&lt;/a&gt;Network&lt;/h2&gt;&lt;h3 id=&quot;nmap&quot;&gt;&lt;a href=&quot;#nmap&quot; class=&quot;headerlink&quot; title=&quot;nmap&quot;&gt;&lt;/a&gt;nmap&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Network mapper and port scanner.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;ifconfig&quot;&gt;&lt;a href=&quot;#ifconfig&quot; class=&quot;headerlink&quot; title=&quot;ifconfig&quot;&gt;&lt;/a&gt;ifconfig&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Network interface configuration and tuning utility.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;netstat&quot;&gt;&lt;a href=&quot;#netstat&quot; class=&quot;headerlink&quot; title=&quot;netstat&quot;&gt;&lt;/a&gt;netstat&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show current network statistics and information, such as routing tables and active connection.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;iwconfig&quot;&gt;&lt;a href=&quot;#iwconfig&quot; class=&quot;headerlink&quot; title=&quot;iwconfig&quot;&gt;&lt;/a&gt;iwconfig&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Command set of wireless network configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;ip&quot;&gt;&lt;a href=&quot;#ip&quot; class=&quot;headerlink&quot; title=&quot;ip&quot;&gt;&lt;/a&gt;ip&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Utility for setting up, changing, and analyzing IP networks and attached devices.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;route&quot;&gt;&lt;a href=&quot;#route&quot; class=&quot;headerlink&quot; title=&quot;route&quot;&gt;&lt;/a&gt;route&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show info about or making changes to the kernel routing table.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;iptables&quot;&gt;&lt;a href=&quot;#iptables&quot; class=&quot;headerlink&quot; title=&quot;iptables&quot;&gt;&lt;/a&gt;iptables&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;chkconfig&quot;&gt;&lt;a href=&quot;#chkconfig&quot; class=&quot;headerlink&quot; title=&quot;chkconfig&quot;&gt;&lt;/a&gt;chkconfig&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Check network and system configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;tcpdump&quot;&gt;&lt;a href=&quot;#tcpdump&quot; class=&quot;headerlink&quot; title=&quot;tcpdump&quot;&gt;&lt;/a&gt;tcpdump&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;A tool for analyzing and troubleshooting traffic on a network by dumping packet headers matching specified criteria.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Filesystem&quot;&gt;&lt;a href=&quot;#Filesystem&quot; class=&quot;headerlink&quot; title=&quot;Filesystem&quot;&gt;&lt;/a&gt;Filesystem&lt;/h2&gt;&lt;h3 id=&quot;mount&quot;&gt;&lt;a href=&quot;#mount&quot; class=&quot;headerlink&quot; title=&quot;mount&quot;&gt;&lt;/a&gt;mount&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Mount a filesystem, usually on an external device.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;unmount&quot;&gt;&lt;a href=&quot;#unmount&quot; class=&quot;headerlink&quot; title=&quot;unmount&quot;&gt;&lt;/a&gt;unmount&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;gnome-mount&quot;&gt;&lt;a href=&quot;#gnome-mount&quot; class=&quot;headerlink&quot; title=&quot;gnome-mount&quot;&gt;&lt;/a&gt;gnome-mount&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;sync&quot;&gt;&lt;a href=&quot;#sync&quot; class=&quot;headerlink&quot; title=&quot;sync&quot;&gt;&lt;/a&gt;sync&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Force an immediate write of all updated data from buffers to hard drive.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;losetup&quot;&gt;&lt;a href=&quot;#losetup&quot; class=&quot;headerlink&quot; title=&quot;losetup&quot;&gt;&lt;/a&gt;losetup&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Set up and configure loopback devices.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;mkswap&quot;&gt;&lt;a href=&quot;#mkswap&quot; class=&quot;headerlink&quot; title=&quot;mkswap&quot;&gt;&lt;/a&gt;mkswap&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;swapon-swapoff&quot;&gt;&lt;a href=&quot;#swapon-swapoff&quot; class=&quot;headerlink&quot; title=&quot;swapon, swapoff&quot;&gt;&lt;/a&gt;swapon, swapoff&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Enable/disable swap partition or file.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;mke2fs&quot;&gt;&lt;a href=&quot;#mke2fs&quot; class=&quot;headerlink&quot; title=&quot;mke2fs&quot;&gt;&lt;/a&gt;mke2fs&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Create a Linux ext2 filesystem.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;mkdosfs&quot;&gt;&lt;a href=&quot;#mkdosfs&quot; class=&quot;headerlink&quot; title=&quot;mkdosfs&quot;&gt;&lt;/a&gt;mkdosfs&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;tune2fs&quot;&gt;&lt;a href=&quot;#tune2fs&quot; class=&quot;headerlink&quot; title=&quot;tune2fs&quot;&gt;&lt;/a&gt;tune2fs&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;dumpe2fs&quot;&gt;&lt;a href=&quot;#dumpe2fs&quot; class=&quot;headerlink&quot; title=&quot;dumpe2fs&quot;&gt;&lt;/a&gt;dumpe2fs&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;hdparm&quot;&gt;&lt;a href=&quot;#hdparm&quot; class=&quot;headerlink&quot; title=&quot;hdparm&quot;&gt;&lt;/a&gt;hdparm&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;fdisk&quot;&gt;&lt;a href=&quot;#fdisk&quot; class=&quot;headerlink&quot; title=&quot;fdisk&quot;&gt;&lt;/a&gt;fdisk&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;fsck-e2fsck-debugfs&quot;&gt;&lt;a href=&quot;#fsck-e2fsck-debugfs&quot; class=&quot;headerlink&quot; title=&quot;fsck, e2fsck, debugfs&quot;&gt;&lt;/a&gt;fsck, e2fsck, debugfs&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;badlocks&quot;&gt;&lt;a href=&quot;#badlocks&quot; class=&quot;headerlink&quot; title=&quot;badlocks&quot;&gt;&lt;/a&gt;badlocks&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;lsusb-usbmodules&quot;&gt;&lt;a href=&quot;#lsusb-usbmodules&quot; class=&quot;headerlink&quot; title=&quot;lsusb, usbmodules&quot;&gt;&lt;/a&gt;lsusb, usbmodules&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;lspci&quot;&gt;&lt;a href=&quot;#lspci&quot; class=&quot;headerlink&quot; title=&quot;lspci&quot;&gt;&lt;/a&gt;lspci&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;mkbootdisk&quot;&gt;&lt;a href=&quot;#mkbootdisk&quot; class=&quot;headerlink&quot; title=&quot;mkbootdisk&quot;&gt;&lt;/a&gt;mkbootdisk&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;mkisofs&quot;&gt;&lt;a href=&quot;#mkisofs&quot; class=&quot;headerlink&quot; title=&quot;mkisofs&quot;&gt;&lt;/a&gt;mkisofs&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;chroot&quot;&gt;&lt;a href=&quot;#chroot&quot; class=&quot;headerlink&quot; title=&quot;chroot&quot;&gt;&lt;/a&gt;chroot&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;lockfile&quot;&gt;&lt;a href=&quot;#lockfile&quot; class=&quot;headerlink&quot; title=&quot;lockfile&quot;&gt;&lt;/a&gt;lockfile&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;flock&quot;&gt;&lt;a href=&quot;#flock&quot; class=&quot;headerlink&quot; title=&quot;flock&quot;&gt;&lt;/a&gt;flock&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;mknod&quot;&gt;&lt;a href=&quot;#mknod&quot; class=&quot;headerlink&quot; title=&quot;mknod&quot;&gt;&lt;/a&gt;mknod&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;MAKEDEV&quot;&gt;&lt;a href=&quot;#MAKEDEV&quot; class=&quot;headerlink&quot; title=&quot;MAKEDEV&quot;&gt;&lt;/a&gt;MAKEDEV&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;tmpwatch&quot;&gt;&lt;a href=&quot;#tmpwatch&quot; class=&quot;headerlink&quot; title=&quot;tmpwatch&quot;&gt;&lt;/a&gt;tmpwatch&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;dump-restore&quot;&gt;&lt;a href=&quot;#dump-restore&quot; class=&quot;headerlink&quot; title=&quot;dump, restore&quot;&gt;&lt;/a&gt;dump, restore&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;fdformat&quot;&gt;&lt;a href=&quot;#fdformat&quot; class=&quot;headerlink&quot; title=&quot;fdformat&quot;&gt;&lt;/a&gt;fdformat&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Network&quot;&gt;&lt;a href=&quot;#Network&quot; class=&quot;headerlink&quot; title=&quot;Network&quot;&gt;&lt;/a&gt;Network&lt;/h2&gt;&lt;h3 id=&quot;nmap&quot;&gt;&lt;a href=&quot;#nmap&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Linux System and Adminstrative Commands III</title>
    <link href="http://yular.github.io/2017/09/04/Linux-System-and-Adminstrative-Commands-III/"/>
    <id>http://yular.github.io/2017/09/04/Linux-System-and-Adminstrative-Commands-III/</id>
    <published>2017-09-05T02:22:58.000Z</published>
    <updated>2017-09-05T02:41:45.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Job-Control&quot;&gt;&lt;a href=&quot;#Job-Control&quot; class=&quot;headerlink&quot; title=&quot;Job Control&quot;&gt;&lt;/a&gt;Job Control&lt;/h2&gt;&lt;h3 id=&quot;ps&quot;&gt;&lt;a href=&quot;#ps&quot; class=&quot;headerlink&quot; title=&quot;ps&quot;&gt;&lt;/a&gt;ps&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Process Statistics: list currently executing processes by owner and PID (process ID).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;pgrep-pkill&quot;&gt;&lt;a href=&quot;#pgrep-pkill&quot; class=&quot;headerlink&quot; title=&quot;pgrep, pkill&quot;&gt;&lt;/a&gt;pgrep, pkill&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Combining the ps command with grep or kill.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;pstree&quot;&gt;&lt;a href=&quot;#pstree&quot; class=&quot;headerlink&quot; title=&quot;pstree&quot;&gt;&lt;/a&gt;pstree&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;List currently executing processes in &lt;code&gt;tree&lt;/code&gt; format.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;top&quot;&gt;&lt;a href=&quot;#top&quot; class=&quot;headerlink&quot; title=&quot;top&quot;&gt;&lt;/a&gt;top&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Continously updated display of most cpu-intensive processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;nice&quot;&gt;&lt;a href=&quot;#nice&quot; class=&quot;headerlink&quot; title=&quot;nice&quot;&gt;&lt;/a&gt;nice&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Run a background job with an altered priority.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;nohup&quot;&gt;&lt;a href=&quot;#nohup&quot; class=&quot;headerlink&quot; title=&quot;nohup&quot;&gt;&lt;/a&gt;nohup&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Keeps a command running even after user logs off.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;pidof&quot;&gt;&lt;a href=&quot;#pidof&quot; class=&quot;headerlink&quot; title=&quot;pidof&quot;&gt;&lt;/a&gt;pidof&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Identifies processID (PID) of a running job.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;fuser&quot;&gt;&lt;a href=&quot;#fuser&quot; class=&quot;headerlink&quot; title=&quot;fuser&quot;&gt;&lt;/a&gt;fuser&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Identify the process (by PID) accessing a given file, set of files or directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;cron&quot;&gt;&lt;a href=&quot;#cron&quot; class=&quot;headerlink&quot; title=&quot;cron&quot;&gt;&lt;/a&gt;cron&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Administrative program scheduler, performing such duties as cleaning up and deleting system log files and updating the slocate database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Process-Control-and-Booting&quot;&gt;&lt;a href=&quot;#Process-Control-and-Booting&quot; class=&quot;headerlink&quot; title=&quot;Process Control and Booting&quot;&gt;&lt;/a&gt;Process Control and Booting&lt;/h2&gt;&lt;h3 id=&quot;init&quot;&gt;&lt;a href=&quot;#init&quot; class=&quot;headerlink&quot; title=&quot;init&quot;&gt;&lt;/a&gt;init&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;telinit&quot;&gt;&lt;a href=&quot;#telinit&quot; class=&quot;headerlink&quot; title=&quot;telinit&quot;&gt;&lt;/a&gt;telinit&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;runlevel&quot;&gt;&lt;a href=&quot;#runlevel&quot; class=&quot;headerlink&quot; title=&quot;runlevel&quot;&gt;&lt;/a&gt;runlevel&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Shows the current and last runlevel.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;halt-shutdown-reboot&quot;&gt;&lt;a href=&quot;#halt-shutdown-reboot&quot; class=&quot;headerlink&quot; title=&quot;halt, shutdown, reboot&quot;&gt;&lt;/a&gt;halt, shutdown, reboot&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;service&quot;&gt;&lt;a href=&quot;#service&quot; class=&quot;headerlink&quot; title=&quot;service&quot;&gt;&lt;/a&gt;service&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Starts or stops a system service.&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Job-Control&quot;&gt;&lt;a href=&quot;#Job-Control&quot; class=&quot;headerlink&quot; title=&quot;Job Control&quot;&gt;&lt;/a&gt;Job Control&lt;/h2&gt;&lt;h3 id=&quot;ps&quot;&gt;&lt;a href=&quot;#ps&quot; class=&quot;head
    
    </summary>
    
    
      <category term="Linux" scheme="http://yular.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux System and Adminstrative Commands II</title>
    <link href="http://yular.github.io/2017/09/04/Linux-System-and-Adminstrative-Commands-II/"/>
    <id>http://yular.github.io/2017/09/04/Linux-System-and-Adminstrative-Commands-II/</id>
    <published>2017-09-05T02:06:10.000Z</published>
    <updated>2017-09-05T02:21:21.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Information-and-Statistics&quot;&gt;&lt;a href=&quot;#Information-and-Statistics&quot; class=&quot;headerlink&quot; title=&quot;Information and Statistics&quot;&gt;&lt;/a&gt;Information and Statistics&lt;/h2&gt;&lt;h3 id=&quot;uname&quot;&gt;&lt;a href=&quot;#uname&quot; class=&quot;headerlink&quot; title=&quot;uname&quot;&gt;&lt;/a&gt;uname&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;arch&quot;&gt;&lt;a href=&quot;#arch&quot; class=&quot;headerlink&quot; title=&quot;arch&quot;&gt;&lt;/a&gt;arch&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show system architecture.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;lastcomm&quot;&gt;&lt;a href=&quot;#lastcomm&quot; class=&quot;headerlink&quot; title=&quot;lastcomm&quot;&gt;&lt;/a&gt;lastcomm&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Gives information of previous commands, as stored in the &lt;code&gt;/var/account/pacct&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;lastlog&quot;&gt;&lt;a href=&quot;#lastlog&quot; class=&quot;headerlink&quot; title=&quot;lastlog&quot;&gt;&lt;/a&gt;lastlog&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;lsof&quot;&gt;&lt;a href=&quot;#lsof&quot; class=&quot;headerlink&quot; title=&quot;lsof&quot;&gt;&lt;/a&gt;lsof&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;List open files.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;strace&quot;&gt;&lt;a href=&quot;#strace&quot; class=&quot;headerlink&quot; title=&quot;strace&quot;&gt;&lt;/a&gt;strace&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;System trace: diagnostic and debugging tool for tracing system calls and signals.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;ltrace&quot;&gt;&lt;a href=&quot;#ltrace&quot; class=&quot;headerlink&quot; title=&quot;ltrace&quot;&gt;&lt;/a&gt;ltrace&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Library trace: diagnostic and debugging tool that traces library calls invoked by a given command.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;nc&quot;&gt;&lt;a href=&quot;#nc&quot; class=&quot;headerlink&quot; title=&quot;nc&quot;&gt;&lt;/a&gt;nc&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;A complete toolkit for connecting to and listening to TCP and UDP ports.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;free&quot;&gt;&lt;a href=&quot;#free&quot; class=&quot;headerlink&quot; title=&quot;free&quot;&gt;&lt;/a&gt;free&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show memory and cache usage in tabular form.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;proinfo&quot;&gt;&lt;a href=&quot;#proinfo&quot; class=&quot;headerlink&quot; title=&quot;proinfo&quot;&gt;&lt;/a&gt;proinfo&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Extract and list information and statistics from the &lt;code&gt;/proc&lt;/code&gt; pseudo-filesystem.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;lsdev&quot;&gt;&lt;a href=&quot;#lsdev&quot; class=&quot;headerlink&quot; title=&quot;lsdev&quot;&gt;&lt;/a&gt;lsdev&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;List devices (installed hardware).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;du&quot;&gt;&lt;a href=&quot;#du&quot; class=&quot;headerlink&quot; title=&quot;du&quot;&gt;&lt;/a&gt;du&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show disk file usage recusively.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;df&quot;&gt;&lt;a href=&quot;#df&quot; class=&quot;headerlink&quot; title=&quot;df&quot;&gt;&lt;/a&gt;df&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show filesystem usage in tabular form.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;dmesg&quot;&gt;&lt;a href=&quot;#dmesg&quot; class=&quot;headerlink&quot; title=&quot;dmesg&quot;&gt;&lt;/a&gt;dmesg&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;stat&quot;&gt;&lt;a href=&quot;#stat&quot; class=&quot;headerlink&quot; title=&quot;stat&quot;&gt;&lt;/a&gt;stat&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Gives detailed and verbose statistics on a given file or set of files.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;vmstat&quot;&gt;&lt;a href=&quot;#vmstat&quot; class=&quot;headerlink&quot; title=&quot;vmstat&quot;&gt;&lt;/a&gt;vmstat&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show virtual memory statistics.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;uptime&quot;&gt;&lt;a href=&quot;#uptime&quot; class=&quot;headerlink&quot; title=&quot;uptime&quot;&gt;&lt;/a&gt;uptime&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show how long the system has been running.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;hostname&quot;&gt;&lt;a href=&quot;#hostname&quot; class=&quot;headerlink&quot; title=&quot;hostname&quot;&gt;&lt;/a&gt;hostname&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Lists the hostname of system.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;hostid&quot;&gt;&lt;a href=&quot;#hostid&quot; class=&quot;headerlink&quot; title=&quot;hostid&quot;&gt;&lt;/a&gt;hostid&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Echo a 32-bit hexadecimal numerical identifier for the host machine.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;sar&quot;&gt;&lt;a href=&quot;#sar&quot; class=&quot;headerlink&quot; title=&quot;sar&quot;&gt;&lt;/a&gt;sar&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;readelf&quot;&gt;&lt;a href=&quot;#readelf&quot; class=&quot;headerlink&quot; title=&quot;readelf&quot;&gt;&lt;/a&gt;readelf&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;size&quot;&gt;&lt;a href=&quot;#size&quot; class=&quot;headerlink&quot; title=&quot;size&quot;&gt;&lt;/a&gt;size&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show the segment sizes of a binary executable or archive file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;System-Logs&quot;&gt;&lt;a href=&quot;#System-Logs&quot; class=&quot;headerlink&quot; title=&quot;System Logs&quot;&gt;&lt;/a&gt;System Logs&lt;/h2&gt;&lt;h3 id=&quot;logger&quot;&gt;&lt;a href=&quot;#logger&quot; class=&quot;headerlink&quot; title=&quot;logger&quot;&gt;&lt;/a&gt;logger&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Append a user-generated message to the system log &lt;code&gt;/var/log/messages&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;logrotate&quot;&gt;&lt;a href=&quot;#logrotate&quot; class=&quot;headerlink&quot; title=&quot;logrotate&quot;&gt;&lt;/a&gt;logrotate&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Manage the system log files, rotating, compressing, deleting, and/or e-mailing them, as appropriate.&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Information-and-Statistics&quot;&gt;&lt;a href=&quot;#Information-and-Statistics&quot; class=&quot;headerlink&quot; title=&quot;Information and Statistics&quot;&gt;&lt;/a&gt;Informat
    
    </summary>
    
    
      <category term="Linux" scheme="http://yular.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux System and Adminstrative Commands I</title>
    <link href="http://yular.github.io/2017/09/04/Linux-System-and-Adminstrative-Commands-I/"/>
    <id>http://yular.github.io/2017/09/04/Linux-System-and-Adminstrative-Commands-I/</id>
    <published>2017-09-05T01:44:41.000Z</published>
    <updated>2017-09-05T02:04:52.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Users-and-Groups&quot;&gt;&lt;a href=&quot;#Users-and-Groups&quot; class=&quot;headerlink&quot; title=&quot;Users and Groups&quot;&gt;&lt;/a&gt;Users and Groups&lt;/h2&gt;&lt;h3 id=&quot;users&quot;&gt;&lt;a href=&quot;#users&quot; class=&quot;headerlink&quot; title=&quot;users&quot;&gt;&lt;/a&gt;users&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show all logged on users.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;groups&quot;&gt;&lt;a href=&quot;#groups&quot; class=&quot;headerlink&quot; title=&quot;groups&quot;&gt;&lt;/a&gt;groups&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;List the current user and the gourps s/he belongs to.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;chown-chgrp&quot;&gt;&lt;a href=&quot;#chown-chgrp&quot; class=&quot;headerlink&quot; title=&quot;chown, chgrp&quot;&gt;&lt;/a&gt;chown, chgrp&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;useradd-userdel&quot;&gt;&lt;a href=&quot;#useradd-userdel&quot; class=&quot;headerlink&quot; title=&quot;useradd, userdel&quot;&gt;&lt;/a&gt;useradd, userdel&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;usermod&quot;&gt;&lt;a href=&quot;#usermod&quot; class=&quot;headerlink&quot; title=&quot;usermod&quot;&gt;&lt;/a&gt;usermod&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Modify a useraccount’s password, group membership, expiration date and etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;groupmod&quot;&gt;&lt;a href=&quot;#groupmod&quot; class=&quot;headerlink&quot; title=&quot;groupmod&quot;&gt;&lt;/a&gt;groupmod&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;id&quot;&gt;&lt;a href=&quot;#id&quot; class=&quot;headerlink&quot; title=&quot;id&quot;&gt;&lt;/a&gt;id&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Lists the real and effective user IDs and the group IDs of the user associated with the current process.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;lid&quot;&gt;&lt;a href=&quot;#lid&quot; class=&quot;headerlink&quot; title=&quot;lid&quot;&gt;&lt;/a&gt;lid&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Shows the group(s) a given user belongs to, or the users belonging to a given group.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;who&quot;&gt;&lt;a href=&quot;#who&quot; class=&quot;headerlink&quot; title=&quot;who&quot;&gt;&lt;/a&gt;who&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;w&quot;&gt;&lt;a href=&quot;#w&quot; class=&quot;headerlink&quot; title=&quot;w&quot;&gt;&lt;/a&gt;w&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;logname&quot;&gt;&lt;a href=&quot;#logname&quot; class=&quot;headerlink&quot; title=&quot;logname&quot;&gt;&lt;/a&gt;logname&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show current user’s login name.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;su&quot;&gt;&lt;a href=&quot;#su&quot; class=&quot;headerlink&quot; title=&quot;su&quot;&gt;&lt;/a&gt;su&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;sudo&quot;&gt;&lt;a href=&quot;#sudo&quot; class=&quot;headerlink&quot; title=&quot;sudo&quot;&gt;&lt;/a&gt;sudo&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;passwd&quot;&gt;&lt;a href=&quot;#passwd&quot; class=&quot;headerlink&quot; title=&quot;passwd&quot;&gt;&lt;/a&gt;passwd&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Sets, changes, or manages a user’s password.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;ac&quot;&gt;&lt;a href=&quot;#ac&quot; class=&quot;headerlink&quot; title=&quot;ac&quot;&gt;&lt;/a&gt;ac&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show users’ logged in time.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;last&quot;&gt;&lt;a href=&quot;#last&quot; class=&quot;headerlink&quot; title=&quot;last&quot;&gt;&lt;/a&gt;last&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;List last logged in users.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;mewgrp&quot;&gt;&lt;a href=&quot;#mewgrp&quot; class=&quot;headerlink&quot; title=&quot;mewgrp&quot;&gt;&lt;/a&gt;mewgrp&lt;/h3&gt;&lt;hr&gt;

&lt;h2 id=&quot;Terminals&quot;&gt;&lt;a href=&quot;#Terminals&quot; class=&quot;headerlink&quot; title=&quot;Terminals&quot;&gt;&lt;/a&gt;Terminals&lt;/h2&gt;&lt;hr&gt;

&lt;h3 id=&quot;tty&quot;&gt;&lt;a href=&quot;#tty&quot; class=&quot;headerlink&quot; title=&quot;tty&quot;&gt;&lt;/a&gt;tty&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Echoes the terminal filename of current users’ terminal.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;stty&quot;&gt;&lt;a href=&quot;#stty&quot; class=&quot;headerlink&quot; title=&quot;stty&quot;&gt;&lt;/a&gt;stty&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Shows and/or changes terminal settings.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;stterm&quot;&gt;&lt;a href=&quot;#stterm&quot; class=&quot;headerlink&quot; title=&quot;stterm&quot;&gt;&lt;/a&gt;stterm&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Set certain terminal attributes.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;tset&quot;&gt;&lt;a href=&quot;#tset&quot; class=&quot;headerlink&quot; title=&quot;tset&quot;&gt;&lt;/a&gt;tset&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Show or initialize terminal settings.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;setserial&quot;&gt;&lt;a href=&quot;#setserial&quot; class=&quot;headerlink&quot; title=&quot;setserial&quot;&gt;&lt;/a&gt;setserial&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;getty-agetty&quot;&gt;&lt;a href=&quot;#getty-agetty&quot; class=&quot;headerlink&quot; title=&quot;getty, agetty&quot;&gt;&lt;/a&gt;getty, agetty&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;mesg&quot;&gt;&lt;a href=&quot;#mesg&quot; class=&quot;headerlink&quot; title=&quot;mesg&quot;&gt;&lt;/a&gt;mesg&lt;/h3&gt;&lt;hr&gt;

&lt;h3 id=&quot;wall&quot;&gt;&lt;a href=&quot;#wall&quot; class=&quot;headerlink&quot; title=&quot;wall&quot;&gt;&lt;/a&gt;wall&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Sending a message to all users at every terminal logged into the network.&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Users-and-Groups&quot;&gt;&lt;a href=&quot;#Users-and-Groups&quot; class=&quot;headerlink&quot; title=&quot;Users and Groups&quot;&gt;&lt;/a&gt;Users and Groups&lt;/h2&gt;&lt;h3 id=&quot;users&quot;&gt;&lt;a
    
    </summary>
    
    
      <category term="Linux" scheme="http://yular.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Java Non Access Modifiers Summary</title>
    <link href="http://yular.github.io/2017/09/04/Java-Non-Access-Modifiers-Summary/"/>
    <id>http://yular.github.io/2017/09/04/Java-Non-Access-Modifiers-Summary/</id>
    <published>2017-09-04T22:13:27.000Z</published>
    <updated>2017-09-04T23:00:46.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is a short summary of Java non access modifiers, which include static, final, abstract, synchronized, transient and volatile. Here are the references: &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/jls8.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JSL8&lt;/a&gt; and &lt;a href=&quot;https://www.tutorialspoint.com/java/java_nonaccess_modifiers.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java Non Access Modifiers from TutorialsPoint&lt;/a&gt;. &lt;/p&gt;
&lt;h3 id=&quot;Static-Modifier&quot;&gt;&lt;a href=&quot;#Static-Modifier&quot; class=&quot;headerlink&quot; title=&quot;Static Modifier&quot;&gt;&lt;/a&gt;Static Modifier&lt;/h3&gt;&lt;p&gt;Static modifier can be used as variable and method modifier.&lt;/p&gt;
&lt;h4 id=&quot;Static-Variable&quot;&gt;&lt;a href=&quot;#Static-Variable&quot; class=&quot;headerlink&quot; title=&quot;Static Variable&quot;&gt;&lt;/a&gt;Static Variable&lt;/h4&gt;&lt;p&gt;Static variables will exist independently for all the instances of the class. There is only one copy of every static variable in the memory. It is a kind of class variable and local variables cannot be declared static.&lt;/p&gt;
&lt;h4 id=&quot;Static-Method&quot;&gt;&lt;a href=&quot;#Static-Method&quot; class=&quot;headerlink&quot; title=&quot;Static Method&quot;&gt;&lt;/a&gt;Static Method&lt;/h4&gt;&lt;p&gt;Static methods will exist independently for all the instances of the class. Static methods can be used directly without any instance variables of any object of the class they are defined in.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Final-Modifier&quot;&gt;&lt;a href=&quot;#Final-Modifier&quot; class=&quot;headerlink&quot; title=&quot;Final Modifier&quot;&gt;&lt;/a&gt;Final Modifier&lt;/h3&gt;&lt;p&gt;Final modifier is used to finalize the implementation/creation of variales, methods, and classes.&lt;/p&gt;
&lt;h4 id=&quot;Final-Variable&quot;&gt;&lt;a href=&quot;#Final-Variable&quot; class=&quot;headerlink&quot; title=&quot;Final Variable&quot;&gt;&lt;/a&gt;Final Variable&lt;/h4&gt;&lt;p&gt;Every final variable can be explicitly initialized only once and then they cannot be reassigned to refer to a different object. But even though final variables use the same reference all the time, the value of their members can be changed.&lt;/p&gt;
&lt;p&gt;Usually, final and static modifiers are used together to define constants.&lt;/p&gt;
&lt;h4 id=&quot;Final-Method&quot;&gt;&lt;a href=&quot;#Final-Method&quot; class=&quot;headerlink&quot; title=&quot;Final Method&quot;&gt;&lt;/a&gt;Final Method&lt;/h4&gt;&lt;p&gt;Final methods cannot be overriddedn by any subclasses. It indicates that the content of these methods should not be changed by any clients.&lt;/p&gt;
&lt;h4 id=&quot;Final-Class&quot;&gt;&lt;a href=&quot;#Final-Class&quot; class=&quot;headerlink&quot; title=&quot;Final Class&quot;&gt;&lt;/a&gt;Final Class&lt;/h4&gt;&lt;p&gt;Final classes cannot be extended by other classes. It indicates that these classes should not be inherited.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Abstract-Modifier&quot;&gt;&lt;a href=&quot;#Abstract-Modifier&quot; class=&quot;headerlink&quot; title=&quot;Abstract Modifier&quot;&gt;&lt;/a&gt;Abstract Modifier&lt;/h3&gt;&lt;p&gt;Abstract modifier can be used for methods and classes, indicating &lt;code&gt;&amp;quot;change&amp;quot;&lt;/code&gt; the content of these methods or classes in subclasses.&lt;/p&gt;
&lt;h4 id=&quot;Abstract-Method&quot;&gt;&lt;a href=&quot;#Abstract-Method&quot; class=&quot;headerlink&quot; title=&quot;Abstract Method&quot;&gt;&lt;/a&gt;Abstract Method&lt;/h4&gt;&lt;p&gt;Abstract methods do not have method body and their implementation should be provided by subclasses. Abstract methods can never be final or strict.&lt;br&gt;If a class has one or more abstract methods, it must be declared as abstract.&lt;/p&gt;
&lt;h4 id=&quot;Abstract-Class&quot;&gt;&lt;a href=&quot;#Abstract-Class&quot; class=&quot;headerlink&quot; title=&quot;Abstract Class&quot;&gt;&lt;/a&gt;Abstract Class&lt;/h4&gt;&lt;p&gt;Abstract classes cannot be instantiated and they are designed for inheritance. Abstract classes can never be final and they can contain both abstract methods and normal methods.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Synchronized-Modifier&quot;&gt;&lt;a href=&quot;#Synchronized-Modifier&quot; class=&quot;headerlink&quot; title=&quot;Synchronized Modifier&quot;&gt;&lt;/a&gt;Synchronized Modifier&lt;/h3&gt;&lt;p&gt;Synchronized modifier can be used for methods and applied on variables (lock a specific variable). It indicates that these methods can be accessed by only one thread at a time. Synchronized modifier is widely used in concurrent situation.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Transient-Modifier&quot;&gt;&lt;a href=&quot;#Transient-Modifier&quot; class=&quot;headerlink&quot; title=&quot;Transient Modifier&quot;&gt;&lt;/a&gt;Transient Modifier&lt;/h3&gt;&lt;p&gt;Transient modifier can be used for variables. It indicates that JVM will skip these variables when it is serializing the objects containing them.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Volatile-Modifier&quot;&gt;&lt;a href=&quot;#Volatile-Modifier&quot; class=&quot;headerlink&quot; title=&quot;Volatile Modifier&quot;&gt;&lt;/a&gt;Volatile Modifier&lt;/h3&gt;&lt;p&gt;Volatile modifier can be used for variables. It indicates that a thread accessing these variables must always merge its own copy of them with the master copy in the memory.&lt;br&gt;Volatile modifier can only be used for variables in instances, which are of type object or private. A volatile object reference can be null.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is a short summary of Java non access modifiers, which include static, final, abstract, synchronized, transient and volatile. Here a
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Test Driven Development by Example</title>
    <link href="http://yular.github.io/2017/08/06/Reading-Note-of-Test-Driven-Development-by-Example/"/>
    <id>http://yular.github.io/2017/08/06/Reading-Note-of-Test-Driven-Development-by-Example/</id>
    <published>2017-08-07T06:30:50.000Z</published>
    <updated>2017-09-07T07:54:13.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the summary of &lt;code&gt;Test Driven Development&lt;/code&gt; book.&lt;/p&gt;
&lt;h2 id=&quot;Overall-Rules&quot;&gt;&lt;a href=&quot;#Overall-Rules&quot; class=&quot;headerlink&quot; title=&quot;Overall Rules&quot;&gt;&lt;/a&gt;Overall Rules&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In Test-Driven Development, there are two basic rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write new code only if there is a failing automated test.&lt;/li&gt;
&lt;li&gt;Eliminate duplication.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The two rules above imply the order of tasks of programming:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Red: Write a little test that does not work, even does not compile at first&lt;/li&gt;
&lt;li&gt;Green: Make the test work quickly, committing whatever sins necessary in the process&lt;/li&gt;
&lt;li&gt;Refactor: Eliminate all the duplication created in just getting the test to work&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The three basic steps of Test Driven Development are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start simply&lt;/li&gt;
&lt;li&gt;Write automated tests&lt;/li&gt;
&lt;li&gt;Refactor to add design decisions one at a time&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Two topics where TDD is not good at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Security software&lt;/li&gt;
&lt;li&gt;Concurrency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rhythm of TDD:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Quickly add a test&lt;/li&gt;
&lt;li&gt;Run all tests and see the new one fails&lt;/li&gt;
&lt;li&gt;Make a little change&lt;/li&gt;
&lt;li&gt;Run all tests and see them all succeed&lt;/li&gt;
&lt;li&gt;Refactor to remove duplication&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the summary of &lt;code&gt;Test Driven Development&lt;/code&gt; book.&lt;/p&gt;
&lt;h2 id=&quot;Overall-Rules&quot;&gt;&lt;a href=&quot;#Overall-Rules&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Design Pattern Elements of Reusable Object-Oriented Software</title>
    <link href="http://yular.github.io/2017/08/05/Reading-Note-of-Design-Pattern-Elements-of-Reusable-Object-Oriented-Software/"/>
    <id>http://yular.github.io/2017/08/05/Reading-Note-of-Design-Pattern-Elements-of-Reusable-Object-Oriented-Software/</id>
    <published>2017-08-05T07:00:29.000Z</published>
    <updated>2017-09-10T23:56:03.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Design Pattern" scheme="http://yular.github.io/tags/Design-Pattern/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Working Effectively with Legacy Code</title>
    <link href="http://yular.github.io/2017/08/04/Reading-Note-of-Working-Effectively-with-Legacy-Code/"/>
    <id>http://yular.github.io/2017/08/04/Reading-Note-of-Working-Effectively-with-Legacy-Code/</id>
    <published>2017-08-05T06:59:20.000Z</published>
    <updated>2017-08-07T06:40:25.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Software Development" scheme="http://yular.github.io/tags/Software-Development/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Code Complete</title>
    <link href="http://yular.github.io/2017/08/04/Reading-Note-of-Code-Complete/"/>
    <id>http://yular.github.io/2017/08/04/Reading-Note-of-Code-Complete/</id>
    <published>2017-08-05T06:54:08.000Z</published>
    <updated>2017-08-07T06:39:47.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Software Development" scheme="http://yular.github.io/tags/Software-Development/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Clean Code</title>
    <link href="http://yular.github.io/2017/08/04/Reading-Note-of-Clean-Code/"/>
    <id>http://yular.github.io/2017/08/04/Reading-Note-of-Clean-Code/</id>
    <published>2017-08-05T06:54:00.000Z</published>
    <updated>2017-09-11T08:14:59.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the overall summary of Clean Code priciples.&lt;/p&gt;
&lt;h3 id=&quot;注释&quot;&gt;&lt;a href=&quot;#注释&quot; class=&quot;headerlink&quot; title=&quot;注释&quot;&gt;&lt;/a&gt;注释&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;应该去除的注释:&lt;ul&gt;
&lt;li&gt;不恰当的信息&lt;/li&gt;
&lt;li&gt;废弃的注释&lt;/li&gt;
&lt;li&gt;冗余的注释&lt;/li&gt;
&lt;li&gt;糟糕的注释&lt;/li&gt;
&lt;li&gt;注释掉的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;应当能单个命令签出并构建系统。&lt;/li&gt;
&lt;li&gt;应当能单个命令运行全部测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;输入参数尽量少。没参数最好，一个次之，两个再次，三个更次。三个以上应坚决避免。&lt;/li&gt;
&lt;li&gt;别输出输入参数。非要修改的话，则修改函数其所在对象的状态。&lt;/li&gt;
&lt;li&gt;布尔值输入(selector)参数宣告了函数不止做了一件事，会令人迷惑，应当消灭掉。&lt;/li&gt;
&lt;li&gt;死函数，也就是不被调用的函数，要坚决去掉。&lt;/li&gt;
&lt;li&gt;不能忽视安全（不一定指网络攻击，函数不做不合法输入的检测也算）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;语言&quot;&gt;&lt;a href=&quot;#语言&quot; class=&quot;headerlink&quot; title=&quot;语言&quot;&gt;&lt;/a&gt;语言&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;尽量减少源文件的语言数量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;设计&quot;&gt;&lt;a href=&quot;#设计&quot; class=&quot;headerlink&quot; title=&quot;设计&quot;&gt;&lt;/a&gt;设计&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Do not repeat yourself (DRY). 别重复。&lt;/li&gt;
&lt;li&gt;别在错误的抽象层级上写代码。要有正确的抽象模型，较高层次抽象在基类，较低层次抽象在派生类（与实现细节有关），不同层级的概念要放入不同的容器当中。&lt;/li&gt;
&lt;li&gt;基类应当对派生类一无所知。若无法去除耦合，将基类和派生类部署到不同的jar中来实现物理解耦。&lt;/li&gt;
&lt;li&gt;接口需要的信息不能过多。比如需要调用过多的函数获得输入参数，从而导致耦合度过高。&lt;/li&gt;
&lt;li&gt;不互相依赖的东西或模块不该耦合，应当花时间研究声明函数，变量和常量的地方。&lt;/li&gt;
&lt;li&gt;变量和函数应在靠近被调用的地方定义，本地变量则在首次被使用的位置上声明。&lt;/li&gt;
&lt;li&gt;若使用静态函数，应确保它没有多态行为（函数名一样但输入输出不同）。&lt;/li&gt;
&lt;li&gt;用多态替代if/else和switch。&lt;/li&gt;
&lt;li&gt;把逻辑依赖改为物理依赖。依赖者模块不应对被依赖者模块有假定，它应当明确地询问后者全部信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;测试不足： 只要还有没被测试探测过的条件或者验证过的计算，测试就是不足够的。&lt;/li&gt;
&lt;li&gt;测试中使用覆盖率工具。&lt;/li&gt;
&lt;li&gt;别忽略小测试。被忽略的测试就是对不确定事物的疑问。&lt;/li&gt;
&lt;li&gt;测试边界条件（尤其是算法）。&lt;/li&gt;
&lt;li&gt;全面测试相近的缺陷。&lt;/li&gt;
&lt;li&gt;测试覆盖率的模式有启发性测试，应该快速出结果。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the overall summary of Clean Code priciples.&lt;/p&gt;
&lt;h3 id=&quot;注释&quot;&gt;&lt;a href=&quot;#注释&quot; class=&quot;headerlink&quot; title=&quot;注释&quot;&gt;&lt;/a&gt;注释&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;应该去除
    
    </summary>
    
    
      <category term="Software Development" scheme="http://yular.github.io/tags/Software-Development/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of Effective Java</title>
    <link href="http://yular.github.io/2017/08/04/Reading-Note-of-Effective-Java/"/>
    <id>http://yular.github.io/2017/08/04/Reading-Note-of-Effective-Java/</id>
    <published>2017-08-05T06:53:29.000Z</published>
    <updated>2017-09-07T08:08:05.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Overall-Summary&quot;&gt;&lt;a href=&quot;#Overall-Summary&quot; class=&quot;headerlink&quot; title=&quot;Overall Summary&quot;&gt;&lt;/a&gt;Overall Summary&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Clarity and simplicity are important and users of a module should never be surprised by its behavior. &lt;/li&gt;
&lt;li&gt;Modules should be as small as possible but no smaller. &lt;/li&gt;
&lt;li&gt;Code should be reused rather than copied.&lt;/li&gt;
&lt;li&gt;The dependencies between modules should be kept to a minimum.&lt;/li&gt;
&lt;li&gt;Errors should be detected as soon as possible after they are made, ideally at compile time.&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Overall-Summary&quot;&gt;&lt;a href=&quot;#Overall-Summary&quot; class=&quot;headerlink&quot; title=&quot;Overall Summary&quot;&gt;&lt;/a&gt;Overall Summary&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Clarity and 
    
    </summary>
    
    
      <category term="Java" scheme="http://yular.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>DynamoDB QuickStart Guide</title>
    <link href="http://yular.github.io/2017/07/31/DynamoDB-QuickStart-Guide/"/>
    <id>http://yular.github.io/2017/07/31/DynamoDB-QuickStart-Guide/</id>
    <published>2017-07-31T08:05:16.000Z</published>
    <updated>2017-07-31T08:05:38.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Database" scheme="http://yular.github.io/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>Setup API Gateway Custom Authorizer Lambda Function in Java</title>
    <link href="http://yular.github.io/2017/07/31/Setup-API-Gateway-Custom-Authorizer-Lambda-Function-in-Java/"/>
    <id>http://yular.github.io/2017/07/31/Setup-API-Gateway-Custom-Authorizer-Lambda-Function-in-Java/</id>
    <published>2017-07-31T08:03:46.000Z</published>
    <updated>2017-07-31T08:04:41.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="http://yular.github.io/tags/Cloud-Computing/"/>
    
  </entry>
  
  <entry>
    <title>Reading Note of The Pragmatic Programmer</title>
    <link href="http://yular.github.io/2017/07/30/Reading-Note-of-The-Pragmatic-Programmer/"/>
    <id>http://yular.github.io/2017/07/30/Reading-Note-of-The-Pragmatic-Programmer/</id>
    <published>2017-07-30T07:09:01.000Z</published>
    <updated>2017-08-05T04:16:38.000Z</updated>
    
    <content type="html">&lt;p&gt;I just finished reading a book called &lt;code&gt;The Pragmatic Programmer&lt;/code&gt;, and found that this book was really helpful for entry level software engineer. I collected and then categorized the useful tips (personally I think) from that book, and noted and shared them here. And discussion is welcomed.&lt;/p&gt;
&lt;p&gt;Tips with a question mark at the end means that I do not fully understand what the tip means.&lt;/p&gt;
&lt;h3 id=&quot;Fundamental-Guideline-Principle&quot;&gt;&lt;a href=&quot;#Fundamental-Guideline-Principle&quot; class=&quot;headerlink&quot; title=&quot;Fundamental Guideline/Principle&quot;&gt;&lt;/a&gt;Fundamental Guideline/Principle&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;DRY: Do not Repeat Yourself&lt;br&gt;Need to get rid of following four kinds of duplication&lt;br&gt;&lt;strong&gt; Imposed duplication
&lt;/strong&gt; Inadvertent duplication&lt;br&gt;&lt;strong&gt; Impatient duplication
&lt;/strong&gt; Interdeveloper duplication&lt;br&gt;Keep the the low-level knowledge in the code, where it belongs, and reserve the comments for other, high-level explanations.&lt;br&gt;And the goal is :&lt;br&gt;** Make It Easy to Reuse&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Orthogonality&lt;br&gt;It means that signify a kind of independence or decoupling. Two or more things are orthogonal if changes in one do not affect any of the others.&lt;br&gt;The goal is:&lt;br&gt;&lt;strong&gt; Eliminate Effects Between Unrelated Things.&lt;br&gt;To maintain orthogonality:
&lt;/strong&gt; Keep code decoupled&lt;br&gt;&lt;strong&gt; Avoid global data
&lt;/strong&gt; Avoid similar functions&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Examples of orthogonality:&lt;br&gt;&lt;strong&gt; AOP
&lt;/strong&gt; CORBA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;No Broken Windows&lt;br&gt;The team should take the responsibility for the quality of product. High code quality can encourage developers to continue to write high quality of code for the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Boiled Frogs&lt;br&gt;Make sure everyone actively monitors the environment for changes and solve the problems as soon as possible.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Understand-the-Goal-Requirement&quot;&gt;&lt;a href=&quot;#Understand-the-Goal-Requirement&quot; class=&quot;headerlink&quot; title=&quot;Understand the Goal/Requirement&quot;&gt;&lt;/a&gt;Understand the Goal/Requirement&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There are NO final decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Tracer Bullets to Find the Target&lt;br&gt;Prototyping is the reconnaissance and intelligence gathering that takes place before a single trace bullet is fired.&lt;br&gt;Tracer bullets should be a more concrete design plan for customers to view?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prototype to Learn&lt;br&gt;Here are things to prototype:&lt;br&gt;&lt;strong&gt; Architecture
&lt;/strong&gt; New functionality in an existing system&lt;br&gt;&lt;strong&gt; Structure or contents of external data
&lt;/strong&gt; Performance issues&lt;br&gt;** User interface design&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Program Close to the Problem domain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not Gather Requirement - Dig for them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Work with a User to Think like a User.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Abstractions Live Longer than Details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use a Project Glossary.&lt;br&gt;** Project items dictionary.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Estimation&quot;&gt;&lt;a href=&quot;#Estimation&quot; class=&quot;headerlink&quot; title=&quot;Estimation&quot;&gt;&lt;/a&gt;Estimation&lt;/h3&gt;&lt;p&gt;Estimates are based on models of given problem. Here are the basic steps to do estimation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Understand what is being asked.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build a model of the system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Break the model into components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Give each parameter a value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Calculate the answers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keep track of estimating powers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Estimating project schedules (Steps are as follows).&lt;br&gt;&lt;strong&gt; Check requirements
&lt;/strong&gt; Analyze risk&lt;br&gt;&lt;strong&gt; Design, implement, integrate
&lt;/strong&gt; Validate with the users&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Tools&quot;&gt;&lt;a href=&quot;#Tools&quot; class=&quot;headerlink&quot; title=&quot;Tools&quot;&gt;&lt;/a&gt;Tools&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Keep knowledge in Plain Text&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;User the Power of Command Shells.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use a Single Editor Well.&lt;br&gt;It is better to know one editor very well, and use it for all editing tasks: code, documentation, memos, system administration, and so on.&lt;br&gt;A good editor should have following features:&lt;br&gt;&lt;strong&gt; Configurable
&lt;/strong&gt; Extensible&lt;br&gt;&lt;strong&gt; Programmable
&lt;/strong&gt; Syntax highlighting&lt;br&gt;&lt;strong&gt; Auto-completion
&lt;/strong&gt; Auto-indentation&lt;br&gt;&lt;strong&gt; Initial code or document boilerplate
&lt;/strong&gt; IDE-like features&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Always Use Source Code Control&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn a Text Manipulation Language&lt;br&gt;For example, &lt;code&gt;awk&lt;/code&gt; and &lt;code&gt;sed&lt;/code&gt; commands in Shell.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Write Code that Writes Code (Code Generator)&lt;br&gt;&lt;strong&gt; Passive code generators are run once to produce a result. (Java Immutable class)
&lt;/strong&gt; Active code generators are used each time their results are required. (Any examples?)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Design&quot;&gt;&lt;a href=&quot;#Design&quot; class=&quot;headerlink&quot; title=&quot;Design&quot;&gt;&lt;/a&gt;Design&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Design with Contracts.&lt;br&gt;** Shy contract - A way of separate concerns and decoupling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Design by Contract.&lt;br&gt;Focus on documenting (and agreeing to) the rights and responsibilities of software modules to ensure program correctness. Does no more and no less than the document claims to do.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Law of Demeter for Functions&lt;br&gt;** Minimize Coupling Between Modules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Analyze Workflow to Improve Concurrency&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Design Using Service&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Always Design for Concurrency&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Blackboards to Coordinate Workflow&lt;br&gt;** Use the blackboard to coordinate disparate facts and agents, while still maintaining independence and even isolation among participants.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Some Things are Better Done than Described.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not be a Slave to Formal Methods.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Expensive Too Do Not Produce Better Design.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Coding-Implementation-Practice&quot;&gt;&lt;a href=&quot;#Coding-Implementation-Practice&quot; class=&quot;headerlink&quot; title=&quot;Coding/Implementation Practice&quot;&gt;&lt;/a&gt;Coding/Implementation Practice&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Crash Early.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If it Can not Happen, User Assertions to Ensure That It Will not.&lt;br&gt;Precondition Check.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Exceptions for Exceptional Problems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finish What You Start&lt;br&gt;The routine or object that allocates a resource should be responsible for deallocating it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dynamic Configuration: Configure, Do not Integrate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Metadata-Driven Application: Put Abstractions in Code Details in Metadata.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Estimate the Order of Your Algorithms. And Test the estimates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not program coincidence&lt;br&gt;Need to know the idea behind the code clearly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not be a slave to history. Do not let existing code dictate future code.&lt;br&gt;Be critical to existing code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Refactor (Following is the reason to do refactor)&lt;br&gt;&lt;strong&gt; Duplication
&lt;/strong&gt; Nonorthogonal design&lt;br&gt;&lt;strong&gt; Outdated knowledge
&lt;/strong&gt; Performance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Refactor early and often&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not use Wizard Code You Do not Understand.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Best-Practice&quot;&gt;&lt;a href=&quot;#Best-Practice&quot; class=&quot;headerlink&quot; title=&quot;Best Practice(?)&quot;&gt;&lt;/a&gt;Best Practice(?)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Do not Use Manual Procedures.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Debug&quot;&gt;&lt;a href=&quot;#Debug&quot; class=&quot;headerlink&quot; title=&quot;Debug&quot;&gt;&lt;/a&gt;Debug&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fix the Problem Not the Blame.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not panic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make bug reproducible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not Assume It - Prove It.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check my code first, and then bugs from third party.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Test&quot;&gt;&lt;a href=&quot;#Test&quot; class=&quot;headerlink&quot; title=&quot;Test&quot;&gt;&lt;/a&gt;Test&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Test early, test often, test automatically.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Saboteurs to test your testing.&lt;br&gt;It means that appoint a project saboteur, take a separate copy of the source tree, introduce bugs on purpose, and verify that the tests will catch them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test stage coverage, not code/line coverage&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Find bugs once.&lt;br&gt;Once a human tester finds a bug, it should be the last time a human tester finds that bug.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Coding is not done until all the tests run&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test against contract in unit test&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Divide and conquer in testing&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Documentation&quot;&gt;&lt;a href=&quot;#Documentation&quot; class=&quot;headerlink&quot; title=&quot;Documentation&quot;&gt;&lt;/a&gt;Documentation&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Treat English as just another programming language.&lt;br&gt;It means that it is important to keep the documentation in a good way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build documentation in. Do not bolt it on.(?)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Expectation&quot;&gt;&lt;a href=&quot;#Expectation&quot; class=&quot;headerlink&quot; title=&quot;Expectation&quot;&gt;&lt;/a&gt;Expectation&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Gently Exceed Your Users’ Expectations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sign Your Work.&lt;br&gt;Be pround of what your have done. (Ownership.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;I just finished reading a book called &lt;code&gt;The Pragmatic Programmer&lt;/code&gt;, and found that this book was really helpful for entry level 
    
    </summary>
    
    
      <category term="Software Development" scheme="http://yular.github.io/tags/Software-Development/"/>
    
  </entry>
  
</feed>
