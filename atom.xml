<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YBC HomePage</title>
  <subtitle>Study~ Work~ Life~ Everything is here~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yular.github.io/"/>
  <updated>2017-01-29T21:14:04.000Z</updated>
  <id>http://yular.github.io/</id>
  
  <author>
    <name>BaiChuan Yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Penn Treebank Part-Of-Speech Tags List</title>
    <link href="http://yular.github.io/2017/01/29/Penn-Treebank-Part-Of-Speech-Tags-List/"/>
    <id>http://yular.github.io/2017/01/29/Penn-Treebank-Part-Of-Speech-Tags-List/</id>
    <published>2017-01-29T21:07:54.000Z</published>
    <updated>2017-01-29T21:14:04.000Z</updated>
    
    <content type="html">&lt;p&gt;Below is the list of tags defined in Penn Treebank project. Now they are well-known as POS (Part-Of-Speech) tags used in NLP. Here is &lt;a href=&quot;https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;the link of original list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;1.CC - Coordinating conjunction&lt;br&gt;2.CD - Cardinal number&lt;br&gt;3.DT - Determiner&lt;br&gt;4.EX - Existential there&lt;br&gt;5.FW -Foreign word&lt;br&gt;6.IN - Preposition or subordinating conjunction&lt;br&gt;7.JJ - Adjective&lt;br&gt;8.JJR - Adjective, comparative&lt;br&gt;9.JJS - Adjective, superlative&lt;br&gt;10.LS - List item marker&lt;br&gt;11.MD - Modal&lt;br&gt;12.NN - Noun, singular or mass&lt;br&gt;13.NNS - Noun, plural&lt;br&gt;14.NNP - Proper noun, singular&lt;br&gt;15.NNPS - Proper noun, plural&lt;br&gt;16.PDT - Predeterminer&lt;br&gt;17.POS - Possessive ending&lt;br&gt;18.PRP - Personal pronoun&lt;br&gt;19.PRP$ - Possessive pronoun&lt;br&gt;20.RB - Adverb&lt;br&gt;21.RBR - Adverb, comparative&lt;br&gt;22.RBS - Adverb, superlative&lt;br&gt;23.RP - Particle&lt;br&gt;24.SYM - Symbol&lt;br&gt;25.TO - to&lt;br&gt;26.UH - Interjection&lt;br&gt;27.VB - Verb, base form&lt;br&gt;28.VBD - Verb, past tense&lt;br&gt;29.VBG - Verb, gerund or present participle&lt;br&gt;30.VBN - Verb, past participle&lt;br&gt;31.VBP - Verb, non-3rd person singular present&lt;br&gt;32.VBZ - Verb, 3rd person singular present&lt;br&gt;33.WDT - Wh-determiner&lt;br&gt;34.WP - Wh-pronoun&lt;br&gt;35.WP$ - Possessive wh-pronoun&lt;br&gt;36.WRB - Wh-adverb&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Below is the list of tags defined in Penn Treebank project. Now they are well-known as POS (Part-Of-Speech) tags used in NLP. Here is &lt;a 
    
    </summary>
    
    
      <category term="Machine Learning" scheme="http://yular.github.io/tags/Machine-Learning/"/>
    
      <category term="Natural Language Processing" scheme="http://yular.github.io/tags/Natural-Language-Processing/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch QuickStart: Basic Commands Usage</title>
    <link href="http://yular.github.io/2017/01/29/ElasticSearch-QuickStart-Basic-Commands-Usage/"/>
    <id>http://yular.github.io/2017/01/29/ElasticSearch-QuickStart-Basic-Commands-Usage/</id>
    <published>2017-01-29T21:03:06.000Z</published>
    <updated>2017-01-30T09:15:05.000Z</updated>
    
    <content type="html">&lt;p&gt;Below is the frequent/basic commands of Elasticsearch.&lt;/p&gt;
&lt;h2 id=&quot;Check-Cluster-Health&quot;&gt;&lt;a href=&quot;#Check-Cluster-Health&quot; class=&quot;headerlink&quot; title=&quot;Check Cluster Health&quot;&gt;&lt;/a&gt;Check Cluster Health&lt;/h2&gt;&lt;p&gt;Here is the command to get cluster health of Elasticsearch.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl localhost:9200/_cat/health?v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the sample output:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;epoch      timestamp cluster       status node.total node.data shards pri relo init unassign pending_tasks max_task_&lt;span class=&quot;built_in&quot;&gt;wait&lt;/span&gt;_time active_shards_percent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1485763076 23:57:56  elasticsearch green           1         1      0   0    0    0        0             0                  -                100.0%&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the command to get nodes health of Elasticsearch.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl localhost:9200/_cat/nodes?v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the sample output:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ip        heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127.0.0.1            6          95   6    0.12    0.09     0.29 mdi       *      JXmT8Hz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;List-All-Indices&quot;&gt;&lt;a href=&quot;#List-All-Indices&quot; class=&quot;headerlink&quot; title=&quot;List All Indices&quot;&gt;&lt;/a&gt;List All Indices&lt;/h2&gt;&lt;p&gt;Here is the command to list all indices of cluster:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl localhost:9200/_cat/indices?v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the sample output:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;health status index uuid pri rep docs.count docs.deleted store.size pri.store.size&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Since we do not save any data in Elasticsearch, we could not see any records.&lt;/p&gt;
&lt;h2 id=&quot;Indexing-Documents&quot;&gt;&lt;a href=&quot;#Indexing-Documents&quot; class=&quot;headerlink&quot; title=&quot;Indexing Documents&quot;&gt;&lt;/a&gt;Indexing Documents&lt;/h2&gt;&lt;p&gt;Here is a sample command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -H &lt;span class=&quot;string&quot;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt; -X PUT &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;name&quot;:&quot;John Doe&quot;&amp;#125;&#39;&lt;/span&gt; localhost:9200/customer/external/1?pretty&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that customer is index, external is type and the Json object {name:John Doe} is the document while 1 is the document ID and it is optional.&lt;/p&gt;
&lt;p&gt;Here is the sample output:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_index&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;customer&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;external&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_version&quot;&lt;/span&gt; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;created&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_shards&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt; : 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;successful&quot;&lt;/span&gt; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;failed&quot;&lt;/span&gt; : 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;created&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If we execute the same command with different Json object, then this document will be replaced with new Json object.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -H &lt;span class=&quot;string&quot;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt; -X PUT &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;name&quot;:&quot;James Bryant&quot;&amp;#125;&#39;&lt;/span&gt; localhost:9200/customer/external/1?pretty&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the sample output:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_index&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;customer&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;external&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_version&quot;&lt;/span&gt; : 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;updated&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_shards&quot;&lt;/span&gt; : &amp;#123;                                                                                                                                              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt; : 2,                                                                                                                                             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;successful&quot;&lt;/span&gt; : 1,                                                                                                                                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;failed&quot;&lt;/span&gt; : 0                                                                                                                                             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,                                                                                                                                                         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;created&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;                                                                                                                                          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that version is different (1 becomes 2).&lt;/p&gt;
&lt;p&gt;Here is sample command without specifying document ID:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -H &lt;span class=&quot;string&quot;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt; -X POST &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;name&quot;:&quot;JJ Redic&quot;&amp;#125;&#39;&lt;/span&gt; localhost:9200/customer/external/?pretty&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the sample output:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_index&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;customer&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;external&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;AVnueShHh1ol1utH2JD7&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_version&quot;&lt;/span&gt; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;created&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_shards&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt; : 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;successful&quot;&lt;/span&gt; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;failed&quot;&lt;/span&gt; : 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;created&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Updating-Document&quot;&gt;&lt;a href=&quot;#Updating-Document&quot; class=&quot;headerlink&quot; title=&quot;Updating Document&quot;&gt;&lt;/a&gt;Updating Document&lt;/h2&gt;&lt;p&gt;Here is the command to update document:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -H &lt;span class=&quot;string&quot;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt; -X POST &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;doc&quot;:&amp;#123;&quot;name&quot;:&quot;JJ Redic&quot;,&quot;age&quot;:20&amp;#125;&amp;#125;&#39;&lt;/span&gt; localhost:9200/customer/external/1/_update?pretty&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the sample output:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_index&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;customer&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;external&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_version&quot;&lt;/span&gt; : 3,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;updated&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_shards&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt; : 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;successful&quot;&lt;/span&gt; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;failed&quot;&lt;/span&gt; : 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deleting-Document&quot;&gt;&lt;a href=&quot;#Deleting-Document&quot; class=&quot;headerlink&quot; title=&quot;Deleting Document&quot;&gt;&lt;/a&gt;Deleting Document&lt;/h3&gt;&lt;p&gt;Here is the command to delete document:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -H &lt;span class=&quot;string&quot;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt; -X DELETE localhost:9200/customer/external/2?pretty&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the sample output:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;found&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_index&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;customer&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;external&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_version&quot;&lt;/span&gt; : 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;deleted&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_shards&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt; : 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;successful&quot;&lt;/span&gt; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;failed&quot;&lt;/span&gt; : 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Bulk-Processing-Document&quot;&gt;&lt;a href=&quot;#Bulk-Processing-Document&quot; class=&quot;headerlink&quot; title=&quot;Bulk Processing Document&quot;&gt;&lt;/a&gt;Bulk Processing Document&lt;/h2&gt;&lt;p&gt;Check this &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/_batch_processing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Below is the frequent/basic commands of Elasticsearch.&lt;/p&gt;
&lt;h2 id=&quot;Check-Cluster-Health&quot;&gt;&lt;a href=&quot;#Check-Cluster-Health&quot; class=&quot;headerlin
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="http://yular.github.io/tags/Cloud-Computing/"/>
    
      <category term="Database" scheme="http://yular.github.io/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch QuickStart: Introduction and Installation</title>
    <link href="http://yular.github.io/2017/01/29/ElasticSearch-QuickStart-Introduction-and-Installation/"/>
    <id>http://yular.github.io/2017/01/29/ElasticSearch-QuickStart-Introduction-and-Installation/</id>
    <published>2017-01-29T21:02:49.000Z</published>
    <updated>2017-01-30T07:52:04.000Z</updated>
    
    <content type="html">&lt;p&gt;Elasticsearch is a highly scalable (distributed) open-source full-text search and analytics engine. It allows users to store, search, and analyze big volumes of data quickly and in near real time. It is generally used as the underlying engine/technology that powers applications that have complex search features and requirements. Here is the &lt;a href=&quot;https://www.elastic.co/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official website of Elastic Search&lt;/a&gt;. And here is its &lt;a href=&quot;https://github.com/elastic/elasticsearch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github Repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Below is the introduction of Elasticsearch and its installation guide.&lt;/p&gt;
&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;Here is the explanation of terminologies defined in Elastic Search. And here is the link of &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/_basic_concepts.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official webiste&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Near-Real-Time-NRT&quot;&gt;&lt;a href=&quot;#Near-Real-Time-NRT&quot; class=&quot;headerlink&quot; title=&quot;Near Real Time (NRT)&quot;&gt;&lt;/a&gt;Near Real Time (NRT)&lt;/h3&gt;&lt;p&gt;Elasticsearch is a near real time engine, which means that it has a slight latency (normally 1s) from the time users index a document until the time it becomes searchable.&lt;/p&gt;
&lt;h3 id=&quot;Cluster&quot;&gt;&lt;a href=&quot;#Cluster&quot; class=&quot;headerlink&quot; title=&quot;Cluster&quot;&gt;&lt;/a&gt;Cluster&lt;/h3&gt;&lt;p&gt;A cluster is a collection of one or more nodes (servers) that together holds entire data and provides federated indexing and search capabilities across all nodes. A cluster is identified by a unique name which by default is “elasticsearch”. This name is important because a node can only be part of a cluster if the node is set up to join the cluster by its name.&lt;/p&gt;
&lt;h3 id=&quot;Node&quot;&gt;&lt;a href=&quot;#Node&quot; class=&quot;headerlink&quot; title=&quot;Node&quot;&gt;&lt;/a&gt;Node&lt;/h3&gt;&lt;p&gt;A node is a single server that is part of cluster, stores data, and participates in the cluster’s indexing and search capabilities. Just like a cluster, a node is identified by a name which by default is a random Universally Unique IDentifier (UUID) that is assigned to the node at startup. You can define any node name we want if we do not want the default. This name is important for administration purposes where we want to identify which servers in network correspond to which nodes in wer Elasticsearch cluster.&lt;/p&gt;
&lt;h3 id=&quot;Index&quot;&gt;&lt;a href=&quot;#Index&quot; class=&quot;headerlink&quot; title=&quot;Index&quot;&gt;&lt;/a&gt;Index&lt;/h3&gt;&lt;p&gt;An index is a collection of documents that have somewhat similar characteristics. An index is identified by a name (that must be all lowercase) and this name is used to refer to the index when performing indexing, search, update, and delete operations against the documents in it.&lt;br&gt;In a single cluster, we can define as many indexes as we want.&lt;/p&gt;
&lt;p&gt;Index is similar to database defined in SQL.&lt;/p&gt;
&lt;h3 id=&quot;Type&quot;&gt;&lt;a href=&quot;#Type&quot; class=&quot;headerlink&quot; title=&quot;Type&quot;&gt;&lt;/a&gt;Type&lt;/h3&gt;&lt;p&gt;Within an index, we can define one or more types. A type is a logical category/partition of index whose semantics is completely up to us. In general, a type is defined for documents that have a set of common fields.&lt;/p&gt;
&lt;p&gt;Type is similar to table defined in SQL.&lt;/p&gt;
&lt;h3 id=&quot;Document&quot;&gt;&lt;a href=&quot;#Document&quot; class=&quot;headerlink&quot; title=&quot;Document&quot;&gt;&lt;/a&gt;Document&lt;/h3&gt;&lt;p&gt;A document is a basic unit of information that can be indexed. This document is expressed in JSON (JavaScript Object Notation) which is an ubiquitous internet data interchange format.&lt;/p&gt;
&lt;p&gt;Within an index/type, we can store as many documents as we want. &lt;/p&gt;
&lt;h3 id=&quot;Shards&quot;&gt;&lt;a href=&quot;#Shards&quot; class=&quot;headerlink&quot; title=&quot;Shards&quot;&gt;&lt;/a&gt;Shards&lt;/h3&gt;&lt;p&gt;An index can potentially store a large amount of data that can exceed the hardware limits of a single node. To solve this problem, Elasticsearch provides the ability to subdivide our index into multiple pieces called shards. When we create an index, we can simply define the number of shards that we want. Each shard is in itself a fully-functional and independent “index” that can be hosted on any node in the cluster.&lt;/p&gt;
&lt;p&gt;Sharding is important for two primary reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It allows us to horizontally split/scale our content volume&lt;/li&gt;
&lt;li&gt;It allows us to distribute and parallelize operations across shards (potentially on multiple nodes) thus increasing performance/throughput&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each Elasticsearch shard is a Lucene index. There is a maximum number of documents you can have in a single Lucene index. As of LUCENE-5843, the limit is 2,147,483,519 (= Integer.MAX_VALUE - 128) documents.&lt;/p&gt;
&lt;h3 id=&quot;Replication&quot;&gt;&lt;a href=&quot;#Replication&quot; class=&quot;headerlink&quot; title=&quot;Replication&quot;&gt;&lt;/a&gt;Replication&lt;/h3&gt;&lt;p&gt;Replication is important for two primary reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It provides high availability in case a shard/node fails. For this reason, it is important to note that a replica shard is never allocated on the same node as the original/primary shard that it was copied from.&lt;/li&gt;
&lt;li&gt;It allows we to scale out our search volume/throughput since searches can be executed on all replicas in parallel.&lt;br&gt;To summarize, each index can be split into multiple shards. An index can also be replicated zero (meaning no replicas) or more times. Once replicated, each index will have primary shards (the original shards that were replicated from) and replica shards (the copies of the primary shards). The number of shards and replicas can be defined per index at the time the index is created. After the index is created, we may change the number of replicas dynamically anytime but we cannot change the number of shards after-the-fact.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By default, each index in Elasticsearch is allocated 5 primary shards and 1 replica which means that if we have at least two nodes in our cluster, our index will have 5 primary shards and another 5 replica shards (1 complete replica) for a total of 10 shards per index.&lt;/p&gt;
&lt;h2 id=&quot;Installation&quot;&gt;&lt;a href=&quot;#Installation&quot; class=&quot;headerlink&quot; title=&quot;Installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;&lt;p&gt;Here is the &lt;a href=&quot;https://www.elastic.co/downloads/elasticsearch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download Elasticsearch from this &lt;a href=&quot;https://www.elastic.co/downloads/elasticsearch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here we use CentOS 7. So use this command to start Elasticsearch webservice:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bin/elasticsearch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the output of above command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:19,600][INFO ][o.e.n.Node               ] [] initializing ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:19,854][INFO ][o.e.e.NodeEnvironment    ] [JXmT8Hz] using [1] data paths, mounts [[/ (rootfs)]], net usable_space [33.3gb], net total_space [45.5gb], spins? [unknown], types [rootfs]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:19,855][INFO ][o.e.e.NodeEnvironment    ] [JXmT8Hz] heap size [1.9gb], compressed ordinary object pointers [&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:19,857][INFO ][o.e.n.Node               ] node name [JXmT8Hz] derived from node ID [JXmT8Hz_SA6brqro8ay6NQ]; &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; [node.name] to override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:19,862][INFO ][o.e.n.Node               ] version[5.1.2], pid[20877], build[c8c4c16/2017-01-11T20:18:39.146Z], OS[Linux/3.10.0-327.el7.x86_64/amd64], JVM[Oracle Corporation/OpenJDK 64-Bit Server VM/1.8.0_91/25.91-b14]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,245][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] loaded module [aggs-matrix-stats]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,245][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] loaded module [ingest-common]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,246][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] loaded module [lang-expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,246][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] loaded module [lang-groovy]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,246][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] loaded module [lang-mustache]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,246][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] loaded module [lang-painless]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,247][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] loaded module [percolator]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,247][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] loaded module [reindex]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,247][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] loaded module [transport-netty3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,247][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] loaded module [transport-netty4]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:21,248][INFO ][o.e.p.PluginsService     ] [JXmT8Hz] no plugins loaded&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:25,232][INFO ][o.e.n.Node               ] initialized&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:25,233][INFO ][o.e.n.Node               ] [JXmT8Hz] starting ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:25,612][INFO ][o.e.t.TransportService   ] [JXmT8Hz] publish_address &amp;#123;127.0.0.1:9300&amp;#125;, bound_addresses &amp;#123;[::1]:9300&amp;#125;, &amp;#123;127.0.0.1:9300&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:25,626][WARN ][o.e.b.BootstrapCheck     ] [JXmT8Hz] max file descriptors [4096] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; elasticsearch process is too low, increase to at least [65536]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:25,626][WARN ][o.e.b.BootstrapCheck     ] [JXmT8Hz] max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:28,875][INFO ][o.e.c.s.ClusterService   ] [JXmT8Hz] new_master &amp;#123;JXmT8Hz&amp;#125;&amp;#123;JXmT8Hz_SA6brqro8ay6NQ&amp;#125;&amp;#123;DStICV93SS-A2aPzZlpKxA&amp;#125;&amp;#123;127.0.0.1&amp;#125;&amp;#123;127.0.0.1:9300&amp;#125;, reason: zen-disco-elected-as-master ([0] nodes joined)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:28,925][INFO ][o.e.h.HttpServer         ] [JXmT8Hz] publish_address &amp;#123;127.0.0.1:9200&amp;#125;, bound_addresses &amp;#123;[::1]:9200&amp;#125;, &amp;#123;127.0.0.1:9200&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:28,926][INFO ][o.e.n.Node               ] [JXmT8Hz] started&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2017-01-29T23:20:28,955][INFO ][o.e.g.GatewayService     ] [JXmT8Hz] recovered [0] indices into cluster_state&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now visit the following url in browser:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://localhost:9200/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The web page will show:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;JXmT8Hz&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;cluster_name&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;elasticsearch&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;cluster_uuid&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;2n2W_a6iSx-OmPgLNcqt0A&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;version&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;number&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;5.1.2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;build_hash&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;c8c4c16&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;build_date&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;2017-01-11T20:18:39.146Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;build_snapshot&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;lucene_version&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;6.3.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;tagline&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;You Know, for Search&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Elasticsearch is a highly scalable (distributed) open-source full-text search and analytics engine. It allows users to store, search, and
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="http://yular.github.io/tags/Cloud-Computing/"/>
    
      <category term="Database" scheme="http://yular.github.io/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>C Redis QuickStart</title>
    <link href="http://yular.github.io/2017/01/28/C-Redis-QuickStart/"/>
    <id>http://yular.github.io/2017/01/28/C-Redis-QuickStart/</id>
    <published>2017-01-29T05:43:13.000Z</published>
    <updated>2017-01-29T08:09:57.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the quickstart tutorial to use hiredis C library to build connection between C program and redis. Here is &lt;a href=&quot;https://github.com/redis/hiredis&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hiredis Github Repository&lt;/a&gt;. The environment here is CentOS 7.&lt;/p&gt;
&lt;h2 id=&quot;Download-and-Install-hiredis&quot;&gt;&lt;a href=&quot;#Download-and-Install-hiredis&quot; class=&quot;headerlink&quot; title=&quot;Download and Install hiredis&quot;&gt;&lt;/a&gt;Download and Install hiredis&lt;/h2&gt;&lt;p&gt;At first, we need to download the source code using following command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/redis/hiredis.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; code is written &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; C.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Then go to hiredis directory and install hiredis library into system:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; hiredis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that the command make will generate all the required libraries and head files for development while the command make install can create directories and save libraries as well as head files there. Since hiredis will put the libraries and head files under /usr/local/ folder, the C program will fail in compilation with “hiredis.h” not found error.&lt;/p&gt;
&lt;p&gt;So we need to do following things:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir /usr/include/hiredis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo cp libhiredis.so /usr/lib/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo cp hiredis.h /usr/include/hiredis/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo cp read.h /usr/include/hiredis/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo cp sds.h /usr/include/hiredis/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ldconfig&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Compile-and-Run-C-program&quot;&gt;&lt;a href=&quot;#Compile-and-Run-C-program&quot; class=&quot;headerlink&quot; title=&quot;Compile and Run C program&quot;&gt;&lt;/a&gt;Compile and Run C program&lt;/h2&gt;&lt;p&gt;Below is the sample code example.c under ./hiredis/examples folder. We need to modify the head file location.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include &amp;lt;hiredis/hiredis.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main(int argc, char **argv) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned int j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    redisContext *c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    redisReply *reply;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const char *hostname = (argc &amp;gt; 1) ? argv[1] : &lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int port = (argc &amp;gt; 2) ? atoi(argv[2]) : 6379;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct timeval timeout = &amp;#123; 1, 500000 &amp;#125;; // 1.5 seconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = redisConnectWithTimeout(hostname, port, timeout);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c == NULL || c-&amp;gt;err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Connection error: %s\n&quot;&lt;/span&gt;, c-&amp;gt;errstr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            redisFree(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Connection error: can&#39;t allocate redis context\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* PING server */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply = redisCommand(c,&lt;span class=&quot;string&quot;&gt;&quot;PING&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;PING: %s\n&quot;&lt;/span&gt;, reply-&amp;gt;str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    freeReplyObject(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* Set a key */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply = redisCommand(c,&lt;span class=&quot;string&quot;&gt;&quot;SET %s %s&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;SET: %s\n&quot;&lt;/span&gt;, reply-&amp;gt;str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    freeReplyObject(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* Set a key using binary safe API */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply = redisCommand(c,&lt;span class=&quot;string&quot;&gt;&quot;SET %b %b&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;, (size_t) 3, &lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;, (size_t) 5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;SET (binary API): %s\n&quot;&lt;/span&gt;, reply-&amp;gt;str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    freeReplyObject(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* Try a GET and two INCR */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply = redisCommand(c,&lt;span class=&quot;string&quot;&gt;&quot;GET foo&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;GET foo: %s\n&quot;&lt;/span&gt;, reply-&amp;gt;str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    freeReplyObject(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply = redisCommand(c,&lt;span class=&quot;string&quot;&gt;&quot;INCR counter&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;INCR counter: %lld\n&quot;&lt;/span&gt;, reply-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;integer&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    freeReplyObject(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* again ... */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply = redisCommand(c,&lt;span class=&quot;string&quot;&gt;&quot;INCR counter&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;INCR counter: %lld\n&quot;&lt;/span&gt;, reply-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;integer&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    freeReplyObject(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* Create a list of numbers, from 0 to 9 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply = redisCommand(c,&lt;span class=&quot;string&quot;&gt;&quot;DEL mylist&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    freeReplyObject(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (j = 0; j &amp;lt; 10; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        char buf[64];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        snprintf(buf,64,&lt;span class=&quot;string&quot;&gt;&quot;%u&quot;&lt;/span&gt;,j);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply = redisCommand(c,&lt;span class=&quot;string&quot;&gt;&quot;LPUSH mylist element-%s&quot;&lt;/span&gt;, buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        freeReplyObject(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* Let&lt;span class=&quot;string&quot;&gt;&#39;s check what we have inside the list */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply = redisCommand(c,&quot;LRANGE mylist 0 -1&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (reply-&amp;gt;type == REDIS_REPLY_ARRAY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (j = 0; j &amp;lt; reply-&amp;gt;elements; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            printf(&quot;%u) %s\n&quot;, j, reply-&amp;gt;element[j]-&amp;gt;str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    freeReplyObject(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* Disconnects and frees the context */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    redisFree(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;To compile the program, execute the following command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gcc example.c -o example -lhiredis&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;To execute the program, run the following command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./example&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The output is like as follows:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PING: PONG&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SET: OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SET (binary API): OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET foo: hello world&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INCR counter: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INCR counter: 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0) element-9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1) element-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2) element-7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3) element-6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4) element-5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5) element-4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6) element-3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7) element-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8) element-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9) element-0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the quickstart tutorial to use hiredis C library to build connection between C program and redis. Here is &lt;a href=&quot;https://github
    
    </summary>
    
    
      <category term="C" scheme="http://yular.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>2017 Reading List</title>
    <link href="http://yular.github.io/2017/01/28/2017-Reading-List/"/>
    <id>http://yular.github.io/2017/01/28/2017-Reading-List/</id>
    <published>2017-01-29T05:23:11.000Z</published>
    <updated>2017-01-29T05:41:45.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the list of books that should be read in 2016:&lt;/p&gt;
&lt;p&gt;1.Mindset&lt;/p&gt;
&lt;p&gt;2.包公传&lt;/p&gt;
&lt;p&gt;3.名人传&lt;/p&gt;
&lt;p&gt;4.Java 语言编程设计（进阶）&lt;/p&gt;
&lt;p&gt;5.Machine Learning (Murphy)&lt;/p&gt;
&lt;p&gt;6.挑战编程&lt;/p&gt;
&lt;p&gt;7.Principles of Data Integration&lt;/p&gt;
&lt;p&gt;8.JVM website &lt;a href=&quot;http://rednaxelafx.iteye.com/blog/362738&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;click here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9.犯罪嫌疑人X之献身&lt;/p&gt;
&lt;p&gt;10.开放社会：改革全球资本主义&lt;/p&gt;
&lt;p&gt;11.文明的冲突与世界秩序的重建&lt;/p&gt;
&lt;p&gt;12.旧欧洲 新欧洲 核心欧洲&lt;/p&gt;
&lt;p&gt;13.欧洲中世纪史&lt;/p&gt;
&lt;p&gt;14.互联网产品经理全方位入门（44本）&lt;/p&gt;
&lt;p&gt;15.史记&lt;/p&gt;
&lt;p&gt;16.道德经&lt;/p&gt;
&lt;p&gt;17.哈尔罗杰历险记&lt;/p&gt;
&lt;p&gt;18.Out of Control&lt;/p&gt;
&lt;p&gt;19.庄子今注今译&lt;/p&gt;
&lt;p&gt;20.沃伦.巴菲特的投资组合&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the list of books that should be read in 2016:&lt;/p&gt;
&lt;p&gt;1.Mindset&lt;/p&gt;
&lt;p&gt;2.包公传&lt;/p&gt;
&lt;p&gt;3.名人传&lt;/p&gt;
&lt;p&gt;4.Java 语言编程设计（进阶）&lt;/p&gt;
&lt;p&gt;5.Machi
    
    </summary>
    
    
      <category term="Life" scheme="http://yular.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>Redis Command and DataStructure</title>
    <link href="http://yular.github.io/2017/01/22/Redis-Command-and-DataStructure/"/>
    <id>http://yular.github.io/2017/01/22/Redis-Command-and-DataStructure/</id>
    <published>2017-01-22T09:17:38.000Z</published>
    <updated>2017-02-02T07:02:24.000Z</updated>
    
    <content type="html">&lt;p&gt;Redis has various data types and data structure which are helpful to efficiently manage data. Here is the &lt;a href=&quot;https://redis.io/topics/data-types-intro&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official introduction&lt;/a&gt;  and &lt;a href=&quot;https://redis.io/topics/data-types&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official website&lt;/a&gt; about data types and their command lines.&lt;/p&gt;
&lt;p&gt;Below is our summary.&lt;/p&gt;
&lt;h2 id=&quot;String&quot;&gt;&lt;a href=&quot;#String&quot; class=&quot;headerlink&quot; title=&quot;String&quot;&gt;&lt;/a&gt;String&lt;/h2&gt;&lt;p&gt;Strings are the most basic Redis data type and they are binary safe, which means that they can contain any kind of data, for instance a JPEG image or a serialized Ruby object.&lt;br&gt;A String value can be at max 512 Megabytes in length.&lt;/p&gt;
&lt;p&gt;Here is the &lt;a href=&quot;https://redis.io/commands/#string&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;list of commands supported by String&lt;/a&gt; and below is most common ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;INCR, DECR, and INCRBY: Use Strings as atomic counters with commands in the INCR family.&lt;/li&gt;
&lt;li&gt;APPEND: Append to strings.&lt;/li&gt;
&lt;li&gt;GETRANGE and SETRANGE: Use Strings as a random access vectors.&lt;/li&gt;
&lt;li&gt;GETBIT and SETBIT: Encode a lot of data in little space, or create a Redis backed Bloom Filter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;List&quot;&gt;&lt;a href=&quot;#List&quot; class=&quot;headerlink&quot; title=&quot;List&quot;&gt;&lt;/a&gt;List&lt;/h2&gt;&lt;p&gt;Lists are simply lists of strings, sorted by insertion order. It is possible to add elements to a Redis List pushing new elements on the head (on the left) or on the tail (on the right) of the list. They are basically linked lists.&lt;br&gt;The max length of a list is 2^32 - 1 elements.&lt;/p&gt;
&lt;p&gt;Here is the &lt;a href=&quot;https://redis.io/commands#list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;list of commands supported by List&lt;/a&gt; and below is most common ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LPUSH: Inserts a new element on the head of List.&lt;/li&gt;
&lt;li&gt;RPUSH: Inserts a new element on the tail of List.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Sets&quot;&gt;&lt;a href=&quot;#Sets&quot; class=&quot;headerlink&quot; title=&quot;Sets&quot;&gt;&lt;/a&gt;Sets&lt;/h2&gt;&lt;p&gt;Sets are an unordered and unique collection of Strings. It is possible to add, remove, and test for existence of members in O(1) (constant time regardless of the number of elements contained inside the Set). Unions, intersections, differences of sets can be executed in very short time.&lt;br&gt;The max number of members in a set is 2^32 - 1.&lt;/p&gt;
&lt;p&gt;Here is the &lt;a href=&quot;https://redis.io/commands#set&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;list of commands supported by Set&lt;/a&gt; and below is most common ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SADD: Inserts a new element into Set.&lt;/li&gt;
&lt;li&gt;SPOP and SRANDMEMBER: Extract elements at random.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Sorted-Sets&quot;&gt;&lt;a href=&quot;#Sorted-Sets&quot; class=&quot;headerlink&quot; title=&quot;Sorted Sets&quot;&gt;&lt;/a&gt;Sorted Sets&lt;/h2&gt;&lt;p&gt;Sorted Sets are, similarly to Redis Sets, non repeating collections of Strings. The difference is that every member of a Sorted Set is associated with score, that is used in order to take the sorted set ordered, from the smallest to the greatest score. While members are unique, scores may be repeated. Sorted Sets can add, remove, or update elements in a very fast way (in a time proportional to the logarithm of the number of elements) and can get ranges by score or by rank (position) in a very fast way.&lt;br&gt;The max number of members in a sorted set is 2^32 - 1.&lt;/p&gt;
&lt;p&gt;Here is the &lt;a href=&quot;https://redis.io/commands#sorted_set&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;list of commands supported by Sorted Sets&lt;/a&gt; and below is most common ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ZADD: Inserts a new element into Sorted Set.&lt;/li&gt;
&lt;li&gt;ZRANGE: Get the elements of which their keys are within the given range.&lt;/li&gt;
&lt;li&gt;ZRANGEBYSCORE: Get the elements of which their scores are within the given range.&lt;/li&gt;
&lt;li&gt;ZRANK: Get the rank (or position) of given element.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Hashes&quot;&gt;&lt;a href=&quot;#Hashes&quot; class=&quot;headerlink&quot; title=&quot;Hashes&quot;&gt;&lt;/a&gt;Hashes&lt;/h2&gt;&lt;p&gt;Hashes are maps between string fields and string values, so they are the perfect data type to represent objects. A hash with a few fields (where few means up to one hundred or so) is stored in a way that takes very little space.&lt;br&gt;The max number of members in a hash is 2^32 - 1.&lt;/p&gt;
&lt;p&gt;Here is the &lt;a href=&quot;&quot;&gt;list of commands supported by Hash&lt;/a&gt; and below is most common ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HMSET: Insert a new element (object) into Hash.&lt;/li&gt;
&lt;li&gt;HSET: Insert a new field into Hash object.&lt;/li&gt;
&lt;li&gt;HGETALL: Get the information of element (object).&lt;/li&gt;
&lt;li&gt;HGET: Get the information of a field of element (object).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Bit-arrays-Bitmaps&quot;&gt;&lt;a href=&quot;#Bit-arrays-Bitmaps&quot; class=&quot;headerlink&quot; title=&quot;Bit arrays (Bitmaps)&quot;&gt;&lt;/a&gt;Bit arrays (Bitmaps)&lt;/h2&gt;&lt;p&gt;Bit arrays can set and clear individual bits, count all the bits set to 1, find the first set or unset bit, and so forth.&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;HyperLogLogs&quot;&gt;&lt;a href=&quot;#HyperLogLogs&quot; class=&quot;headerlink&quot; title=&quot;HyperLogLogs&quot;&gt;&lt;/a&gt;HyperLogLogs&lt;/h2&gt;&lt;p&gt;HyperLogLogs is a probabilistic data structure which is used in order to estimate the cardinality of a set.&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Keys&quot;&gt;&lt;a href=&quot;#Keys&quot; class=&quot;headerlink&quot; title=&quot;Keys&quot;&gt;&lt;/a&gt;Keys&lt;/h2&gt;&lt;p&gt;keys are binary safe, this means that we can use any binary sequence as a key, from a string like “foo” to the content of a JPEG file. The empty string is also a valid key.&lt;/p&gt;
&lt;p&gt;A few rules about keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Very long keys are not a good idea.&lt;/li&gt;
&lt;li&gt;Very short keys are often not a good idea.&lt;/li&gt;
&lt;li&gt;Try to stick with a schema.&lt;/li&gt;
&lt;li&gt;The maximum allowed key size is 512 MB.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Redis-expires&quot;&gt;&lt;a href=&quot;#Redis-expires&quot; class=&quot;headerlink&quot; title=&quot;Redis expires&quot;&gt;&lt;/a&gt;Redis expires&lt;/h2&gt;&lt;p&gt;Redis expires means keys with limited time to live. Basically we can set a timeout for a key, which is a limited time to live. When the time to live elapses, the key is automatically destroyed, exactly as if the user called the DEL command with the key.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Redis has various data types and data structure which are helpful to efficiently manage data. Here is the &lt;a href=&quot;https://redis.io/topic
    
    </summary>
    
    
      <category term="Redis" scheme="http://yular.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Lua Redis QuickStart</title>
    <link href="http://yular.github.io/2017/01/22/Lua-Redis-QuickStart/"/>
    <id>http://yular.github.io/2017/01/22/Lua-Redis-QuickStart/</id>
    <published>2017-01-22T08:20:45.000Z</published>
    <updated>2017-01-22T09:17:07.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is a tutorial to install Redis Lua client library which are redis-lua and lredis. Actually, official library is redis-lua. But to install lredis can help to learn more c libraries. So we summarize the installation of both libraries here.&lt;/p&gt;
&lt;h2 id=&quot;lredis-Library-Installation&quot;&gt;&lt;a href=&quot;#lredis-Library-Installation&quot; class=&quot;headerlink&quot; title=&quot;lredis Library Installation&quot;&gt;&lt;/a&gt;lredis Library Installation&lt;/h2&gt;&lt;p&gt;The operating system here is CentOS. And here is the link of &lt;a href=&quot;https://github.com/daurnimator/lredis&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Install-Dependencies&quot;&gt;&lt;a href=&quot;#Install-Dependencies&quot; class=&quot;headerlink&quot; title=&quot;Install Dependencies&quot;&gt;&lt;/a&gt;Install Dependencies&lt;/h3&gt;&lt;p&gt;At first, we need to install required dependencies: cqueue &amp;gt;= 20150907 and fifo, as well as required tools &lt;a href=&quot;http://yular.github.io/2017/01/08/LuaRocks-QuickStart/&quot;&gt;luarocks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is its &lt;a href=&quot;https://github.com/wahern/cqueues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github repository&lt;/a&gt;. But to successfully install the library, we need to install openssl devel first, otherwise we may fail to installcqueue because of missing openssl head file.&lt;/p&gt;
&lt;p&gt;Execute following command to install openssl devel:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y openssl-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then install cqueue library through following command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;luarocks install cqueues CRYPTO_INCDIR=/usr/include CRYPTO_DIR=/usr/ OPENSSL_INCDIR=/usr/include OPENSSL_DIR=/usr/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that the value of CRYPTO_INCDIR, CRYPTO_DIR, OPENSSL_INCDIR, and OPENSSL_DIR may be different.&lt;/p&gt;
&lt;p&gt;Now we will install fifo library. Here is &lt;a href=&quot;https://github.com/daurnimator/fifo.lua&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github Repository&lt;/a&gt;. Following is the command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;luarocks install fifo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Install-lredis-client&quot;&gt;&lt;a href=&quot;#Install-lredis-client&quot; class=&quot;headerlink&quot; title=&quot;Install lredis client&quot;&gt;&lt;/a&gt;Install lredis client&lt;/h3&gt;&lt;p&gt;Here is &lt;a href=&quot;https://github.com/daurnimator/lredis&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github Repository&lt;/a&gt;. Execute the command to do installation:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;luarocks install --server=http://luarocks.org/dev lredis&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;redis-lua-Library-Installation&quot;&gt;&lt;a href=&quot;#redis-lua-Library-Installation&quot; class=&quot;headerlink&quot; title=&quot;redis-lua Library Installation&quot;&gt;&lt;/a&gt;redis-lua Library Installation&lt;/h2&gt;&lt;p&gt;Here is the link of &lt;a href=&quot;https://github.com/nrk/redis-lua&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github Repository&lt;/a&gt;. Install the library through this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;luarocks install redis-lua&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that if luarocks command cannot be executed by sudoers, we should use root to do the installation.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is a tutorial to install Redis Lua client library which are redis-lua and lredis. Actually, official library is redis-lua. But to in
    
    </summary>
    
    
      <category term="Lua" scheme="http://yular.github.io/tags/Lua/"/>
    
  </entry>
  
  <entry>
    <title>C MongoDB QuickStart</title>
    <link href="http://yular.github.io/2017/01/08/C-MongoDB-QuickStart/"/>
    <id>http://yular.github.io/2017/01/08/C-MongoDB-QuickStart/</id>
    <published>2017-01-09T00:09:46.000Z</published>
    <updated>2017-01-09T09:18:55.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the tutorial to write and build a C program to access MongoDB database.&lt;/p&gt;
&lt;h2 id=&quot;Dependency-Installation&quot;&gt;&lt;a href=&quot;#Dependency-Installation&quot; class=&quot;headerlink&quot; title=&quot;Dependency Installation&quot;&gt;&lt;/a&gt;Dependency Installation&lt;/h2&gt;&lt;p&gt;Here is the &lt;a href=&quot;http://mongoc.org/libmongoc/current/installing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tutorial&lt;/a&gt; to install necessary dependency and libraries.&lt;/p&gt;
&lt;p&gt;Here is the &lt;a href=&quot;http://mongoc.org/libmongoc/current/tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tutorial&lt;/a&gt; of sample code.&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Sample-Code&quot;&gt;&lt;a href=&quot;#Sample-Code&quot; class=&quot;headerlink&quot; title=&quot;Sample Code&quot;&gt;&lt;/a&gt;Sample Code&lt;/h2&gt;&lt;p&gt;Here is a sample code. Open a new C file called mongo_db_connect.c. Remember to replace specific parameters:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include &amp;lt;bson.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include &amp;lt;bcon.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include &amp;lt;mongoc.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main (int argc, char *argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_client_t      *client;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_database_t    *database;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_collection_t  *collection;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_cursor_t      *cursor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bson_t               *&lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;, reply, *insert, *query;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   const bson_t         *doc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bson_error_t         error;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   char                 *str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bool                 retval;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   /*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * Required to initialize libmongoc&lt;span class=&quot;string&quot;&gt;&#39;s internals&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_init ();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   /*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * Create a new client instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   client = mongoc_client_new (&quot;mongodb://0.0.0.0:29000&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   /*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * Register the application name so we can track it in the profile logs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * on the server. This can also be done from the URI (see other examples).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_client_set_appname (client, &quot;mongodb-connection-status&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; /*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      Get a handle on the database &quot;db_name&quot; and collection &quot;coll_name&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   database = mongoc_client_get_database (client, &quot;database_name&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   collection = mongoc_client_get_collection (client, &quot;database_name&quot;, &quot;table_name&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   /*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *       Do work. This example pings the database, prints the result as JSON and&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *       performs an insert        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   command = BCON_NEW (&quot;ping&quot;, BCON_INT32 (1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   retval = mongoc_client_command_simple (client, &quot;admin&quot;, command, NULL, &amp;amp;reply, &amp;amp;error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   if (!retval) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      fprintf (stderr, &quot;%s\n&quot;, error.message);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return EXIT_FAILURE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   str = bson_as_json (&amp;amp;reply, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   printf (&quot;Message %s\n&quot;, str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bson_destroy (&amp;amp;reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bson_destroy (command);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   /*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *      Insert one document into given database and collection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = bson_new ();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   cursor = mongoc_collection_find_with_opts (collection, query, NULL, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   while (mongoc_cursor_next (cursor, &amp;amp;doc)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      str = bson_as_json (doc, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      printf (&quot;%s\n&quot;, str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      bson_free (str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; /*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *        Release our handles and clean up libmongoc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_collection_destroy (collection);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_database_destroy (database);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_client_destroy (client);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_cursor_destroy (cursor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   mongoc_cleanup ();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Compile-and-Build-Program&quot;&gt;&lt;a href=&quot;#Compile-and-Build-Program&quot; class=&quot;headerlink&quot; title=&quot;Compile and Build Program&quot;&gt;&lt;/a&gt;Compile and Build Program&lt;/h2&gt;&lt;p&gt;Execute following command to compile and build executable C program:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gcc mongo_db_connect.c -o mongo_db_connect $(pkg-config --cflags --libs libmongoc-1.0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now we can run the program through this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./mongo_db_connect&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the tutorial to write and build a C program to access MongoDB database.&lt;/p&gt;
&lt;h2 id=&quot;Dependency-Installation&quot;&gt;&lt;a href=&quot;#Dependency
    
    </summary>
    
    
      <category term="C" scheme="http://yular.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C MySQL QuickStart</title>
    <link href="http://yular.github.io/2017/01/08/C-MySQL-QuickStart/"/>
    <id>http://yular.github.io/2017/01/08/C-MySQL-QuickStart/</id>
    <published>2017-01-09T00:09:32.000Z</published>
    <updated>2017-01-09T09:03:49.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the tutorial to write and build a C program to access MySQL database.&lt;/p&gt;
&lt;h2 id=&quot;Dependency-Installation&quot;&gt;&lt;a href=&quot;#Dependency-Installation&quot; class=&quot;headerlink&quot; title=&quot;Dependency Installation&quot;&gt;&lt;/a&gt;Dependency Installation&lt;/h2&gt;&lt;p&gt;Here is the &lt;a href=&quot;http://yular.github.io/2016/07/02/Install-MySQL-on-CentOS-Guide/&quot;&gt;tutorial&lt;/a&gt; to install necessary dependency and libraries. Check the section about MySQL Dev Installation.&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Sample-Code&quot;&gt;&lt;a href=&quot;#Sample-Code&quot; class=&quot;headerlink&quot; title=&quot;Sample Code&quot;&gt;&lt;/a&gt;Sample Code&lt;/h2&gt;&lt;p&gt;Here is a sample code. Open a new C file called mysql_db_connect.c. Remember to replace specific parameters:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include &amp;lt;my_global.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include &amp;lt;mysql.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void finish_with_error(MYSQL *con)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fprintf(stderr, &lt;span class=&quot;string&quot;&gt;&quot;%s\n&quot;&lt;/span&gt;, mysql_error(con));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mysql_close(con);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void finish_with_result(MYSQL_RES *result)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  MYSQL_ROW row;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  int i, num_fields = mysql_num_fields(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((row = mysql_fetch_row(result)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i = 0; i &amp;lt; num_fields; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s &quot;&lt;/span&gt;, row[i] ? row[i] : &lt;span class=&quot;string&quot;&gt;&quot;NULL&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      puts(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mysql_free_result(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main(int argc, char **argv)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;MySQL client version: %s\n&quot;&lt;/span&gt;, mysql_get_client_info());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  MYSQL *con = mysql_init(NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  MYSQL_RES *result = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  MYSQL_ROW row;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  int i, mysql_num_fields;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (con == NULL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      fprintf(stderr, &lt;span class=&quot;string&quot;&gt;&quot;mysql_init() failed\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mysql_real_connect(con, &lt;span class=&quot;string&quot;&gt;&quot;host_ip&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;user_name&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;, NULL, 0, NULL, 0) == NULL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      fprintf(stderr, &lt;span class=&quot;string&quot;&gt;&quot;mysql_init() failed\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mysql_close(con);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mysql_query(con, &lt;span class=&quot;string&quot;&gt;&quot;use towergirl&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      finish_with_error(con);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mysql_query(con, &lt;span class=&quot;string&quot;&gt;&quot;show tables&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      finish_with_error(con);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result = mysql_store_result(con);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result == NULL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      finish_with_error(con);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  finish_with_result(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mysql_query(con, &lt;span class=&quot;string&quot;&gt;&quot;select * from user_account&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      finish_with_error(con);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result = mysql_store_result(con);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result == NULL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      finish_with_error(con);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  finish_with_result(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mysql_close(con);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Compile-and-Build-Program&quot;&gt;&lt;a href=&quot;#Compile-and-Build-Program&quot; class=&quot;headerlink&quot; title=&quot;Compile and Build Program&quot;&gt;&lt;/a&gt;Compile and Build Program&lt;/h2&gt;&lt;p&gt;Execute following command to compile and build executable C program:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gcc mysql_db_connect.c -o mysql_db_connect `mysql_config --cflags --libs`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now we can run the program through this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./mysql_db_connect&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the tutorial to write and build a C program to access MySQL database.&lt;/p&gt;
&lt;h2 id=&quot;Dependency-Installation&quot;&gt;&lt;a href=&quot;#Dependency-I
    
    </summary>
    
    
      <category term="C" scheme="http://yular.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Lua MongoDB QuickStart</title>
    <link href="http://yular.github.io/2017/01/08/Lua-MongoDB-QuickStart/"/>
    <id>http://yular.github.io/2017/01/08/Lua-MongoDB-QuickStart/</id>
    <published>2017-01-09T00:08:50.000Z</published>
    <updated>2017-01-09T08:38:00.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the tutorial to write and build Lua application that can communicate with MongoDB database.&lt;/p&gt;
&lt;h2 id=&quot;Dependency-Installation&quot;&gt;&lt;a href=&quot;#Dependency-Installation&quot; class=&quot;headerlink&quot; title=&quot;Dependency Installation&quot;&gt;&lt;/a&gt;Dependency Installation&lt;/h2&gt;&lt;p&gt;At first, we need to install LuaRocks. Here is the &lt;a href=&quot;http://yular.github.io/2017/01/08/LuaRocks-QuickStart/&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We need to install dependency to access MongoDB database through Lua. Execute the command to install dependency:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;luarocks install lua-mongo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Dependency-Document&quot;&gt;&lt;a href=&quot;#Dependency-Document&quot; class=&quot;headerlink&quot; title=&quot;Dependency Document&quot;&gt;&lt;/a&gt;Dependency Document&lt;/h2&gt;&lt;p&gt;Here is &lt;a href=&quot;https://github.com/neoxic/lua-mongo/blob/master/doc/main.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;the link of document&lt;/a&gt; and &lt;a href=&quot;https://github.com/neoxic/lua-mongo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;its Github&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Sample-Code&quot;&gt;&lt;a href=&quot;#Sample-Code&quot; class=&quot;headerlink&quot; title=&quot;Sample Code&quot;&gt;&lt;/a&gt;Sample Code&lt;/h2&gt;&lt;p&gt;Below is the sample code to do MongoDB query. The file name is mongoDB.lua:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; mongo = require(&lt;span class=&quot;string&quot;&gt;&#39;mongo&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; client = mongo.Client &lt;span class=&quot;string&quot;&gt;&#39;mongodb://host_ip:port&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; database = client:getDatabase(&lt;span class=&quot;string&quot;&gt;&#39;database_name&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; collection = database:getCollection(&lt;span class=&quot;string&quot;&gt;&#39;table_name&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; query = mongo.BSON &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123; &quot;id&quot; : &amp;#123; &quot;$gt&quot; : &quot;0&quot; &amp;#125; &amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; document &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; collection:find(query):iterator()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(document.id, document.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then execute above lua script using following command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lua mongoDB.lua&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the tutorial to write and build Lua application that can communicate with MongoDB database.&lt;/p&gt;
&lt;h2 id=&quot;Dependency-Installation&quot;&gt;
    
    </summary>
    
    
      <category term="Lua" scheme="http://yular.github.io/tags/Lua/"/>
    
  </entry>
  
  <entry>
    <title>Lua MySQL QuickStart</title>
    <link href="http://yular.github.io/2017/01/08/Lua-MySQL-QuickStart/"/>
    <id>http://yular.github.io/2017/01/08/Lua-MySQL-QuickStart/</id>
    <published>2017-01-09T00:08:36.000Z</published>
    <updated>2017-01-09T08:37:50.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the tutorial to write and build Lua application that can communicate with MySQL database.&lt;/p&gt;
&lt;h2 id=&quot;Dependency-Installation&quot;&gt;&lt;a href=&quot;#Dependency-Installation&quot; class=&quot;headerlink&quot; title=&quot;Dependency Installation&quot;&gt;&lt;/a&gt;Dependency Installation&lt;/h2&gt;&lt;p&gt;At first, we need to install LuaRocks. Here is the &lt;a href=&quot;http://yular.github.io/2017/01/08/LuaRocks-QuickStart/&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We need to install dependency to access MySQL database through Lua. Execute the command to install dependency:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;luarocks install luasql-mysql MYSQL_INCDIR=/usr/include/mysql/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;But default dependency miss some libraries or variables. In that case, we need to use different source:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;luarocks --from=http://rocks.luarocks.org/dev install luasql-mysql cvs-1 MYSQL_INCDIR=/usr/include/mysql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Sample-Code&quot;&gt;&lt;a href=&quot;#Sample-Code&quot; class=&quot;headerlink&quot; title=&quot;Sample Code&quot;&gt;&lt;/a&gt;Sample Code&lt;/h2&gt;&lt;p&gt;Below is the sample code to do MySQL query. The file name is mysql.lua:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;luasql = require &lt;span class=&quot;string&quot;&gt;&quot;luasql.mysql&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;env = assert (luasql.mysql())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;con = assert (env:connect(&lt;span class=&quot;string&quot;&gt;&quot;database_name&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;user_name&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;host_ip&quot;&lt;/span&gt;,port))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(env,con)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cur,errorString = con:execute([[select * from &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(cur,errorString )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;row = cur:fetch (&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; row &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(string.format(&lt;span class=&quot;string&quot;&gt;&quot;Id: %s &quot;&lt;/span&gt;, row.id))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    row = cur:fetch (row, &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cur:close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;con:close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;env:close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then execute above lua script using following command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lua mysql.lua&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the tutorial to write and build Lua application that can communicate with MySQL database.&lt;/p&gt;
&lt;h2 id=&quot;Dependency-Installation&quot;&gt;&lt;a
    
    </summary>
    
    
      <category term="Lua" scheme="http://yular.github.io/tags/Lua/"/>
    
  </entry>
  
  <entry>
    <title>LuaRocks QuickStart</title>
    <link href="http://yular.github.io/2017/01/08/LuaRocks-QuickStart/"/>
    <id>http://yular.github.io/2017/01/08/LuaRocks-QuickStart/</id>
    <published>2017-01-09T00:08:02.000Z</published>
    <updated>2017-01-09T08:31:33.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the &lt;a href=&quot;https://luarocks.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official website of LuaRocks&lt;/a&gt;. LuaRocks is the package manager for Lua moduels, which means that we can use it to install or uninstall some specific Lua libraries like LuaMySQL and LuaMongoDB.&lt;/p&gt;
&lt;p&gt;Below is the tutorial to install LuaRocks.&lt;/p&gt;
&lt;h2 id=&quot;Install-LuaRocks&quot;&gt;&lt;a href=&quot;#Install-LuaRocks&quot; class=&quot;headerlink&quot; title=&quot;Install LuaRocks&quot;&gt;&lt;/a&gt;Install LuaRocks&lt;/h2&gt;&lt;p&gt;Here we use Centos 7. We will install LuaRocks through command lines as follows (Here is &lt;a href=&quot;https://luarocks.org/#quick-start&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official tutorial&lt;/a&gt;):&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://luarocks.org/releases/luarocks-2.4.1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxpf luarocks-2.4.1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; luarocks-2.4.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo make bootstrap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now execute this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;luarocks&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If everythings goes well, we can similar output as below:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LuaRocks 2.4.1, a module deployment system &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; Lua&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/luarocks - LuaRocks main &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;-line interface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SYNOPSIS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/luarocks [--from=&amp;lt;server&amp;gt; | --only-from=&amp;lt;server&amp;gt;] [--to=&amp;lt;tree&amp;gt;] [VAR=VALUE]... &amp;lt;&lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;&amp;gt; [&amp;lt;argument&amp;gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GENERAL OPTIONS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        These apply to all commands, as appropriate:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --server=&amp;lt;server&amp;gt;      Fetch rocks/rockspecs from this server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               (takes priority over config file)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --only-server=&amp;lt;server&amp;gt; Fetch rocks/rockspecs from this server only&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               (overrides any entries &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the config file)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --only-sources=&amp;lt;url&amp;gt;   Restrict downloads to paths matching the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               given URL.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --tree=&amp;lt;tree&amp;gt;          Which tree to operate on.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --local                Use the tree &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the user&lt;span class=&quot;string&quot;&gt;&#39;s home directory.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               To enable it, see &#39;&lt;/span&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/luarocks &lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt; path&lt;span class=&quot;string&quot;&gt;&#39;.                     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --verbose              Display verbose output of commands executed.                               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --timeout=&amp;lt;seconds&amp;gt;    Timeout on network operations, in seconds.                                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               0 means no timeout (wait forever).                                         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               Default is 30.                                                             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                                                          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VARIABLES                                                                                                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Variables from the &quot;variables&quot; table of the configuration file                                    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        can be overriden with VAR=VALUE assignments. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Install-LuaSocket&quot;&gt;&lt;a href=&quot;#Install-LuaSocket&quot; class=&quot;headerlink&quot; title=&quot;Install LuaSocket&quot;&gt;&lt;/a&gt;Install LuaSocket&lt;/h2&gt;&lt;p&gt;Now we will try to install LuaSocket through LuaRocks. Note that we may need to use sudo command but luarocks may not be identified by sudo. In that case, we can use root user to execute luarocks command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;su root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;luarocks install luasocket&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;To check that luasocket whether is installed successfully or not, we can enter lua shell and type:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;require &lt;span class=&quot;string&quot;&gt;&quot;socket&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The output returned by command should be similar as follows:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; require &lt;span class=&quot;string&quot;&gt;&quot;socket&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table: 0x1&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;8060&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the &lt;a href=&quot;https://luarocks.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official website of LuaRocks&lt;/a&gt;. LuaRocks is the package mana
    
    </summary>
    
    
      <category term="Lua" scheme="http://yular.github.io/tags/Lua/"/>
    
  </entry>
  
  <entry>
    <title>Apache Jena QuickStart</title>
    <link href="http://yular.github.io/2016/12/30/Apache-Jena-QuickStart/"/>
    <id>http://yular.github.io/2016/12/30/Apache-Jena-QuickStart/</id>
    <published>2016-12-30T09:19:53.000Z</published>
    <updated>2017-01-23T09:02:44.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the tutorial to install Apache Jena on CentOS. This is the official website of &lt;a href=&quot;https://jena.apache.org/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache Jena&lt;/a&gt;, &lt;a href=&quot;https://jena.apache.org/tutorials/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official tutorial&lt;/a&gt; and &lt;a href=&quot;https://jena.apache.org/getting_started/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;get started document&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Download-Apache-Jena&quot;&gt;&lt;a href=&quot;#Download-Apache-Jena&quot; class=&quot;headerlink&quot; title=&quot;Download Apache Jena&quot;&gt;&lt;/a&gt;Download Apache Jena&lt;/h2&gt;&lt;p&gt;Download Apache Jena from this &lt;a href=&quot;https://jena.apache.org/download/index.cgi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;link&lt;/a&gt;. Here we use Apache Jena 3.1.1. So we should download this file: apache-jena-3.1.1.tar.gz.&lt;/p&gt;
&lt;p&gt;Extract the software from tar ball and move them to /usr/local:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar xvzf apache-jena-3.1.1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv apache-jena-3.1.1 /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Set-Environment-PATH&quot;&gt;&lt;a href=&quot;#Set-Environment-PATH&quot; class=&quot;headerlink&quot; title=&quot;Set Environment PATH&quot;&gt;&lt;/a&gt;Set Environment PATH&lt;/h2&gt;&lt;p&gt;Edit ~/.bashrc file and put following content in that file:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; JENAROOT=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/apache-jena-3.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; PATH=&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;$JENAROOT&lt;/span&gt;/bin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then execute this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Test&quot;&gt;&lt;a href=&quot;#Test&quot; class=&quot;headerlink&quot; title=&quot;Test&quot;&gt;&lt;/a&gt;Test&lt;/h2&gt;&lt;p&gt;Now try this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sparql --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The output should be similar as follows:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Jena:       VERSION: 3.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Jena:       BUILD_DATE: 2016-11-04T18:59:20+0000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARQ:        VERSION: 3.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARQ:        BUILD_DATE: 2016-11-04T18:59:20+0000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RIOT:       VERSION: 3.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RIOT:       BUILD_DATE: 2016-11-04T18:59:20+0000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the tutorial to install Apache Jena on CentOS. This is the official website of &lt;a href=&quot;https://jena.apache.org/index.html&quot; targe
    
    </summary>
    
    
      <category term="SparkSQL" scheme="http://yular.github.io/tags/SparkSQL/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin QuickStart</title>
    <link href="http://yular.github.io/2016/12/30/Kotlin-QuickStart/"/>
    <id>http://yular.github.io/2016/12/30/Kotlin-QuickStart/</id>
    <published>2016-12-30T09:19:20.000Z</published>
    <updated>2017-01-08T23:41:28.000Z</updated>
    
    <content type="html">&lt;p&gt;Kotlin is a kind of statically typed programming language for the JVM, Android and the browser. Here is the official &lt;a href=&quot;https://Kotlinlang.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It has a lot of advantages and we can find them on the official website above. We can write a Kotlin script and then compile and build it as a java jar or java script file to execute. See the &lt;a href=&quot;https://en.wikipedia.org/wiki/Kotlin_(programming_language&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wikipedia&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Below is a quickstart guide to build a Kotlin script as a java jar, which is similar to the official &lt;a href=&quot;https://Kotlinlang.org/docs/tutorials/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Installation&quot;&gt;&lt;a href=&quot;#Installation&quot; class=&quot;headerlink&quot; title=&quot;Installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;&lt;p&gt;Here is the &lt;a href=&quot;https://kotlinlang.org/docs/tutorials/command-line.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official tutorial&lt;/a&gt; to install Kotlin compiler in the OS. We use Centos 7 in this tutorial.&lt;/p&gt;
&lt;p&gt;To manual install the compiler, just download it from &lt;a href=&quot;https://github.com/JetBrains/kotlin/releases/tag/v1.0.5-2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github Release&lt;/a&gt;. Then unzip it through this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;unzip kotlin-compiler-1.0.5-2.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that current latest version is 1.0.5. The approach for all the other versions.&lt;/p&gt;
&lt;p&gt;Then move the folder to the location we would like to store this compiler and add the bin to PATH variable.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mv kotlinc /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kotlinc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Edit ~/.bashrc adding/modifying following lines&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; KOTLINC=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/kotlinc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; PATH=&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;$KOTLINC&lt;/span&gt;/bin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Remember to execute after modification is done.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now let us type following command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kotlin -help&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The output should similar as follows:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kotlin: run Kotlin programs, scripts or REPL.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Usage: kotlin &amp;lt;options&amp;gt; &amp;lt;&lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;&amp;gt; &amp;lt;arguments&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt; may be one of:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  foo.Bar                    Runs the &lt;span class=&quot;string&quot;&gt;&#39;main&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; from the class with the given qualified name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  app.jar                    Runs the given JAR file as &lt;span class=&quot;string&quot;&gt;&#39;java -jar&#39;&lt;/span&gt; would &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             (-classpath argument is ignored and no Kotlin runtime is added to the classpath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;and possible options include:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -classpath (-cp) &amp;lt;path&amp;gt;    Paths &lt;span class=&quot;built_in&quot;&gt;where&lt;/span&gt; to find user class files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -Dname=value               Set a system JVM property&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -J&amp;lt;option&amp;gt;                 Pass an option directly to JVM&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -no-reflect                Don&lt;span class=&quot;string&quot;&gt;&#39;t include Kotlin reflection implementation into classpath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -version                   Display Kotlin version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -help (-h)                 Print a synopsis of options&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Hello-World-Application&quot;&gt;&lt;a href=&quot;#Hello-World-Application&quot; class=&quot;headerlink&quot; title=&quot;Hello, World Application&quot;&gt;&lt;/a&gt;Hello, World Application&lt;/h2&gt;&lt;p&gt;Here is the &lt;a href=&quot;https://kotlinlang.org/docs/tutorials/command-line.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Add a new file called hello.kt and below is the content:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fun main(args: Array&amp;lt;String&amp;gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    println(&lt;span class=&quot;string&quot;&gt;&quot;Hello, World!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Compile above application using Kotlinc compiler to a java jar:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kotlinc hello.kt -include-runtime &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; hello.jar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that -include-runtime option makes the resulting .jar file self-contained and runnable by including the Kotlin runtime library in it. -d option indicates what we want the output of the compiler to be called and may be either a directory name for class files or a .jar file name.&lt;/p&gt;
&lt;p&gt;Now run the application:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -jar hello.jar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The output should be as follows:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Hello, World!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;Basic-Syntax&quot;&gt;&lt;a href=&quot;#Basic-Syntax&quot; class=&quot;headerlink&quot; title=&quot;Basic Syntax&quot;&gt;&lt;/a&gt;Basic Syntax&lt;/h2&gt;&lt;p&gt;Here is the &lt;a href=&quot;https://kotlinlang.org/docs/reference/basic-syntax.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;offical tutorial&lt;/a&gt; about the basic/common used syntax in Kotlin.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Kotlin is a kind of statically typed programming language for the JVM, Android and the browser. Here is the official &lt;a href=&quot;https://Kot
    
    </summary>
    
    
      <category term="Kotlin" scheme="http://yular.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>HBase Pre-split Quickstart</title>
    <link href="http://yular.github.io/2016/07/22/HBase-Pre-split-Quickstart/"/>
    <id>http://yular.github.io/2016/07/22/HBase-Pre-split-Quickstart/</id>
    <published>2016-07-23T06:12:23.000Z</published>
    <updated>2016-07-23T06:39:37.000Z</updated>
    
    <content type="html">&lt;p&gt;Here are some articles regarding pre-split regions in HBase table: &lt;a href=&quot;http://hortonworks.com/blog/apache-hbase-region-splitting-and-merging/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hortonworks&lt;/a&gt; and &lt;a href=&quot;http://hbase.apache.org/book.html#datamodel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HBase org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before we load data to HBase, we may have to do pre-split on the HBase table storing the data. The reason is that by default, for each HBase table, HBase will save all its data into one region server until its space is used up. This may cause protential hotspoting issue if there are HBase tables that receive most of the queries. Without good pre-spliting strategy, we may fail to use all HBase clusters and some machines may crash as result of overload.&lt;/p&gt;
&lt;p&gt;Here is the HBase shell command to create HBase tables with pre-split:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;create &lt;span class=&quot;string&quot;&gt;&#39;table name&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;column family&#39;&lt;/span&gt;, splits =&amp;gt; [&lt;span class=&quot;string&quot;&gt;&#39;region1_name&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;region2_name&#39;&lt;/span&gt;, ..., &lt;span class=&quot;string&quot;&gt;&#39;regionN_name&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;To save data into specific regions, we could use existing split policy or design a new one. Below is a sample command to use HBase split policy:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alter &lt;span class=&quot;string&quot;&gt;&#39;table name&#39;&lt;/span&gt;, &amp;#123;NAME =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;column family&#39;&lt;/span&gt;, BLOCKSIZE =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;32768&#39;&lt;/span&gt;, CONFIGURATION =&amp;gt; &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;SPLIT_POLICY&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;org.apache.hadoop.hbase.regionserver.ConstantSizeRegionSplitPolicy&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;hbase.hregion.max.filesize&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;10737418240&#39;&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here are some articles regarding pre-split regions in HBase table: &lt;a href=&quot;http://hortonworks.com/blog/apache-hbase-region-splitting-and
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="http://yular.github.io/tags/Cloud-Computing/"/>
    
  </entry>
  
  <entry>
    <title>scala sbt tool quickstart</title>
    <link href="http://yular.github.io/2016/07/22/scala-sbt-tool-quickstart/"/>
    <id>http://yular.github.io/2016/07/22/scala-sbt-tool-quickstart/</id>
    <published>2016-07-23T06:09:57.000Z</published>
    <updated>2016-07-23T06:09:57.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Compile scala to java jar tutorial</title>
    <link href="http://yular.github.io/2016/07/22/Compile-scala-to-java-jar-tutorial/"/>
    <id>http://yular.github.io/2016/07/22/Compile-scala-to-java-jar-tutorial/</id>
    <published>2016-07-23T06:09:34.000Z</published>
    <updated>2016-07-23T06:09:34.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HBase Shell Command List Summary</title>
    <link href="http://yular.github.io/2016/07/16/Hbase-Shell-Command-List-Summary/"/>
    <id>http://yular.github.io/2016/07/16/Hbase-Shell-Command-List-Summary/</id>
    <published>2016-07-17T00:07:22.000Z</published>
    <updated>2016-07-17T00:20:09.000Z</updated>
    
    <content type="html">&lt;p&gt;Below is the list of frequent used HBase shell command and at first, here is another &lt;a href=&quot;https://learnhbase.wordpress.com/2013/03/02/hbase-shell-commands/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HBase command list&lt;/a&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Below is the list of frequent used HBase shell command and at first, here is another &lt;a href=&quot;https://learnhbase.wordpress.com/2013/03/02
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="http://yular.github.io/tags/Cloud-Computing/"/>
    
  </entry>
  
  <entry>
    <title>Apache Livy Install Guide</title>
    <link href="http://yular.github.io/2016/07/04/Apache-Livy-Install-Guide/"/>
    <id>http://yular.github.io/2016/07/04/Apache-Livy-Install-Guide/</id>
    <published>2016-07-04T17:40:13.000Z</published>
    <updated>2016-07-04T18:02:17.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the github page of &lt;a href=&quot;https://github.com/cloudera/livy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache Livy&lt;/a&gt;. It is not difficult to install Livy on the Redhat server. Below is the guide.&lt;/p&gt;
&lt;h3 id=&quot;Check-Environment&quot;&gt;&lt;a href=&quot;#Check-Environment&quot; class=&quot;headerlink&quot; title=&quot;Check Environment&quot;&gt;&lt;/a&gt;Check Environment&lt;/h3&gt;&lt;p&gt;To successfully build and run Livy on Redhat, we need:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;spark (1.5.0 or later)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mvn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openjdk-7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python 2.6+ or 3.3+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;R (optional)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that mvn is only used for building Livy.&lt;/p&gt;
&lt;h3 id=&quot;Building-Livy&quot;&gt;&lt;a href=&quot;#Building-Livy&quot; class=&quot;headerlink&quot; title=&quot;Building Livy&quot;&gt;&lt;/a&gt;Building Livy&lt;/h3&gt;&lt;p&gt;Execute following commands:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; git@github.com:cloudera/livy.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; livy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mvn package -Dspark.version=1.6.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that -Dspark.version option is not required and by default its value is 1.5.0. If we use a different version of Livy, we should change the value of that option.&lt;/p&gt;
&lt;h3 id=&quot;Running-Livy&quot;&gt;&lt;a href=&quot;#Running-Livy&quot; class=&quot;headerlink&quot; title=&quot;Running Livy&quot;&gt;&lt;/a&gt;Running Livy&lt;/h3&gt;&lt;p&gt;Before running Livy, we should make sure that SPARK_HOME and HADOOP_CONF_DIR are set in OS environment.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SPARK_HOME=/usr/lib/spark&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; HADOOP_CONF_DIR=/etc/hadoop/conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then just execute this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./bin/livy-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;By default, Livy is running on the port 8998. We can change it by modifying the livy.conf file.&lt;/p&gt;
&lt;h3 id=&quot;Livy-Configuration&quot;&gt;&lt;a href=&quot;#Livy-Configuration&quot; class=&quot;headerlink&quot; title=&quot;Livy Configuration&quot;&gt;&lt;/a&gt;Livy Configuration&lt;/h3&gt;&lt;p&gt;Here are Livy’s configuration files:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;livy.conf: contains the server configuration.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spark-blacklist.conf: list Spark configuration options that users are not allowed to override.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;4j.properties: configuration &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; Livy logging.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the github page of &lt;a href=&quot;https://github.com/cloudera/livy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache Livy&lt;/a&gt;. It is not difficult
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="http://yular.github.io/tags/Cloud-Computing/"/>
    
  </entry>
  
  <entry>
    <title>Apache Livy Spark Coding in Python Console Quickstart</title>
    <link href="http://yular.github.io/2016/07/03/Apache-Livy-PySpark-Quickstart/"/>
    <id>http://yular.github.io/2016/07/03/Apache-Livy-PySpark-Quickstart/</id>
    <published>2016-07-03T22:18:56.000Z</published>
    <updated>2016-07-04T19:12:56.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is the &lt;a href=&quot;https://github.com/cloudera/livy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official tutorial of submiting pyspark jobs in Livy&lt;/a&gt;. Below is the my PySpark quickstart guide.&lt;/p&gt;
&lt;p&gt;In Livy, the structure of REST API is /sessions/sessionid/statements/statementid. So to submit a new request to Livy, we should ask Livy to create a new independent session first, then inside that session, we will ask Livy to create one or multiple statements to process code.&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Install-Required-Library&quot;&gt;&lt;a href=&quot;#Install-Required-Library&quot; class=&quot;headerlink&quot; title=&quot;Install Required Library&quot;&gt;&lt;/a&gt;Install Required Library&lt;/h3&gt;&lt;p&gt;At first, we need to install requests library of Python. We can use pip. Here is the command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install requests&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;PySpark-Code&quot;&gt;&lt;a href=&quot;#PySpark-Code&quot; class=&quot;headerlink&quot; title=&quot;PySpark Code&quot;&gt;&lt;/a&gt;PySpark Code&lt;/h3&gt;&lt;p&gt;Enter python console:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then in python console, type following code:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import json, pprint, requests, textwrap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;host = &lt;span class=&quot;string&quot;&gt;&#39;http://localhost:8998&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;kind&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;spark&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;headers = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;application/json&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hs_r = requests.post(host + &lt;span class=&quot;string&quot;&gt;&#39;/sessions&#39;&lt;/span&gt;, data=json.dumps(data), headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hs_r.json()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that change the port number if it is not the default one. The code above helps to create a new session in Spark.&lt;br&gt;And if we have to change the configuration of spark-submit, the data object should be like this:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;kind&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;spark&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;conf&#39;&lt;/span&gt;:&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;spark.executor.extraClassPath&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;/home/yular/hadoop-lzo-0.6.0.2.2.4.2-2.jar&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;spark.driver.extraClassPath&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;/home/yular/hadoop-lzo-0.6.0.2.2.4.2-2.jar&#39;&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Next, get the session URL:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;session_url = host + hs_r.headers[&lt;span class=&quot;string&quot;&gt;&#39;Location&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sn_r = requests.get(session_url, headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sn_r.json()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that hs_r.headers[‘Location’] may not give us the correct value because it may be ‘null/sessions/sessionid’. In that case, we should use the following code instead,. In our case, since it is the first session, the id is 0.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;session_url = host + &lt;span class=&quot;string&quot;&gt;&#39;/sessions/0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now we should generate the code and submit to the corresponding statement REST API.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;statements_url = session_url + &lt;span class=&quot;string&quot;&gt;&#39;/statements&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data = &amp;#123; &lt;span class=&quot;string&quot;&gt;&#39;code&#39;&lt;/span&gt;: textwrap(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.apache.spark.SparkContext;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.apache.spark.sql.hive.HiveContext; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;val sqlContext=new HiveContext(sc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;val df=sqlContext.sql(&quot;&lt;/span&gt;use db1&lt;span class=&quot;string&quot;&gt;&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;val res=sqlContext.sql(&quot;&lt;/span&gt;select * from tb1 &lt;span class=&quot;built_in&quot;&gt;limit&lt;/span&gt; 10 &lt;span class=&quot;string&quot;&gt;&quot;).collect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res.map(t =&amp;gt; t(0)).foreach(println);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stm_r = requests.post(statements_url, data=json.dumps(data), headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stm_r.json()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;After that, we can get the running result from the statement REST API using following code:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;statement_url = host + stm_r.headers[&lt;span class=&quot;string&quot;&gt;&#39;Location&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res = requests.get(statement_url, headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pprint.pprint(res.json())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If no exceptions occur, we can find the result in the output field.&lt;/p&gt;
&lt;p&gt;At last, we can delete current session:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;requests.delete(session_url, headers=headers)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h3 id=&quot;Submit-Python-File-to-REST-API&quot;&gt;&lt;a href=&quot;#Submit-Python-File-to-REST-API&quot; class=&quot;headerlink&quot; title=&quot;Submit Python File to REST API&quot;&gt;&lt;/a&gt;Submit Python File to REST API&lt;/h3&gt;&lt;p&gt;Here the Livy is in yarn-client mode. This guide can also be used in local mode. Below is the content of python file submitted (The file name is test.py.):&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pyspark import SparkContext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pyspark.sql import HiveContext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sc = SparkContext(&lt;span class=&quot;string&quot;&gt;&#39;yarn-client&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;pyspark&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlContext = HiveContext(sc)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlContext.sql(&lt;span class=&quot;string&quot;&gt;&quot;use db1&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlContext.sql(&lt;span class=&quot;string&quot;&gt;&quot;select * from tb1 limit 10&quot;&lt;/span&gt;).show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is the command to POST python file to Livy REST API for batch job. Livy will automatically create a new session identified by batchid for this job.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X POST --data &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;file&quot;:&quot;file:/home/yular/livy_code/test.py&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&quot;conf&quot;:&amp;#123;&quot;spark.executor.extraClassPath&quot;:&quot;/home/yular/hadoop-lzo-0.6.0.2.2.4.2-2.jar&quot;,&quot;spark.driver.extraClassPath&quot;:&quot;/home/yular/hadoop-lzo-0.6.0.2.2.4.2-2.jar&quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/span&gt; -H &lt;span class=&quot;string&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt; localhost:8998/batches&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that in yarn-client and yarn-cluster mode, by default Livy use hdfs file protocol. So if we write /home/yular/livy_code/test.py, then in Livy, the file path becomes hdfs://home/yular/livy_code/test.py which may cause exception. So we have to specify file protocol.&lt;/p&gt;
&lt;p&gt;To check the status of batch job, execute this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl localhost:8998/batches/0 | python -m json.tool&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If no exceptions are thrown out, we can see the result in the output field of json returned.&lt;/p&gt;
&lt;p&gt;To check the log of batch job, execute this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl localhost:8998/batches/0/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt; | python -m json.tool&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;To remove the batch session, run this command:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X DELETE localhost:8998/batches/0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note that 0 is the batch id. In our case, the id is 0 but it should be subject to change.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the &lt;a href=&quot;https://github.com/cloudera/livy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official tutorial of submiting pyspark jobs in Livy
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="http://yular.github.io/tags/Cloud-Computing/"/>
    
  </entry>
  
</feed>
